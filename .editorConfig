# To learn more about .editorconfig see https://aka.ms/editorconfigdocs

# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

[*]
indent_size = 2
indent_style = space

[*.cs]
indent_size = 4
dotnet_analyzer_diagnostic.severity = error

# Rules from assembly: Microsoft.CodeAnalysis.CSharp, Version=4.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35

# AD0001: Analyzer Failure
dotnet_diagnostic.AD0001.severity = error

# CS0006:
dotnet_diagnostic.CS0006.severity = error

# CS0009:
dotnet_diagnostic.CS0009.severity = error

# CS0012:
dotnet_diagnostic.CS0012.severity = error

# CS0016:
dotnet_diagnostic.CS0016.severity = error

# CS0019:
dotnet_diagnostic.CS0019.severity = error

# CS0020:
dotnet_diagnostic.CS0020.severity = error

# CS0021:
dotnet_diagnostic.CS0021.severity = error

# CS0022:
dotnet_diagnostic.CS0022.severity = error

# CS0023:
dotnet_diagnostic.CS0023.severity = error

# CS0026:
dotnet_diagnostic.CS0026.severity = error

# CS0027:
dotnet_diagnostic.CS0027.severity = error

# CS0029:
dotnet_diagnostic.CS0029.severity = error

# CS0030:
dotnet_diagnostic.CS0030.severity = error

# CS0031:
dotnet_diagnostic.CS0031.severity = error

# CS0034:
dotnet_diagnostic.CS0034.severity = error

# CS0035:
dotnet_diagnostic.CS0035.severity = error

# CS0036:
dotnet_diagnostic.CS0036.severity = error

# CS0037:
dotnet_diagnostic.CS0037.severity = error

# CS0039:
dotnet_diagnostic.CS0039.severity = error

# CS0041:
dotnet_diagnostic.CS0041.severity = error

# CS0050:
dotnet_diagnostic.CS0050.severity = error

# CS0051:
dotnet_diagnostic.CS0051.severity = error

# CS0052:
dotnet_diagnostic.CS0052.severity = error

# CS0053:
dotnet_diagnostic.CS0053.severity = error

# CS0054:
dotnet_diagnostic.CS0054.severity = error

# CS0055:
dotnet_diagnostic.CS0055.severity = error

# CS0056:
dotnet_diagnostic.CS0056.severity = error

# CS0057:
dotnet_diagnostic.CS0057.severity = error

# CS0058:
dotnet_diagnostic.CS0058.severity = error

# CS0059:
dotnet_diagnostic.CS0059.severity = error

# CS0060:
dotnet_diagnostic.CS0060.severity = error

# CS0061:
dotnet_diagnostic.CS0061.severity = error

# CS0065:
dotnet_diagnostic.CS0065.severity = error

# CS0066:
dotnet_diagnostic.CS0066.severity = error

# CS0068:
dotnet_diagnostic.CS0068.severity = error

# CS0070:
dotnet_diagnostic.CS0070.severity = error

# CS0071:
dotnet_diagnostic.CS0071.severity = error

# CS0072:
dotnet_diagnostic.CS0072.severity = error

# CS0073:
dotnet_diagnostic.CS0073.severity = error

# CS0074:
dotnet_diagnostic.CS0074.severity = error

# CS0075:
dotnet_diagnostic.CS0075.severity = error

# CS0076:
dotnet_diagnostic.CS0076.severity = error

# CS0077:
dotnet_diagnostic.CS0077.severity = error

# CS0078: The 'l' suffix is easily confused with the digit '1'
dotnet_diagnostic.CS0078.severity = error

# CS0079:
dotnet_diagnostic.CS0079.severity = error

# CS0080:
dotnet_diagnostic.CS0080.severity = error

# CS0081:
dotnet_diagnostic.CS0081.severity = error

# CS0082:
dotnet_diagnostic.CS0082.severity = error

# CS0100:
dotnet_diagnostic.CS0100.severity = error

# CS0101:
dotnet_diagnostic.CS0101.severity = error

# CS0102:
dotnet_diagnostic.CS0102.severity = error

# CS0103:
dotnet_diagnostic.CS0103.severity = error

# CS0104:
dotnet_diagnostic.CS0104.severity = error

# CS0105: Using directive appeared previously in this namespace
dotnet_diagnostic.CS0105.severity = error

# CS0106:
dotnet_diagnostic.CS0106.severity = error

# CS0107:
dotnet_diagnostic.CS0107.severity = error

# CS0108: Member hides inherited member; missing new keyword
dotnet_diagnostic.CS0108.severity = error

# CS0109: Member does not hide an inherited member; new keyword is not required
dotnet_diagnostic.CS0109.severity = error

# CS0110:
dotnet_diagnostic.CS0110.severity = error

# CS0111:
dotnet_diagnostic.CS0111.severity = error

# CS0112:
dotnet_diagnostic.CS0112.severity = error

# CS0113:
dotnet_diagnostic.CS0113.severity = error

# CS0114: Member hides inherited member; missing override keyword
dotnet_diagnostic.CS0114.severity = error

# CS0115:
dotnet_diagnostic.CS0115.severity = error

# CS0116:
dotnet_diagnostic.CS0116.severity = error

# CS0117:
dotnet_diagnostic.CS0117.severity = error

# CS0118:
dotnet_diagnostic.CS0118.severity = error

# CS0119:
dotnet_diagnostic.CS0119.severity = error

# CS0120:
dotnet_diagnostic.CS0120.severity = error

# CS0121:
dotnet_diagnostic.CS0121.severity = error

# CS0122:
dotnet_diagnostic.CS0122.severity = error

# CS0123:
dotnet_diagnostic.CS0123.severity = error

# CS0126:
dotnet_diagnostic.CS0126.severity = error

# CS0127:
dotnet_diagnostic.CS0127.severity = error

# CS0128:
dotnet_diagnostic.CS0128.severity = error

# CS0131:
dotnet_diagnostic.CS0131.severity = error

# CS0132:
dotnet_diagnostic.CS0132.severity = error

# CS0133:
dotnet_diagnostic.CS0133.severity = error

# CS0134:
dotnet_diagnostic.CS0134.severity = error

# CS0136:
dotnet_diagnostic.CS0136.severity = error

# CS0138:
dotnet_diagnostic.CS0138.severity = error

# CS0139:
dotnet_diagnostic.CS0139.severity = error

# CS0140:
dotnet_diagnostic.CS0140.severity = error

# CS0143:
dotnet_diagnostic.CS0143.severity = error

# CS0144:
dotnet_diagnostic.CS0144.severity = error

# CS0145:
dotnet_diagnostic.CS0145.severity = error

# CS0146:
dotnet_diagnostic.CS0146.severity = error

# CS0149:
dotnet_diagnostic.CS0149.severity = error

# CS0150:
dotnet_diagnostic.CS0150.severity = error

# CS0151:
dotnet_diagnostic.CS0151.severity = error

# CS0152:
dotnet_diagnostic.CS0152.severity = error

# CS0153:
dotnet_diagnostic.CS0153.severity = error

# CS0154:
dotnet_diagnostic.CS0154.severity = error

# CS0155:
dotnet_diagnostic.CS0155.severity = error

# CS0156:
dotnet_diagnostic.CS0156.severity = error

# CS0157:
dotnet_diagnostic.CS0157.severity = error

# CS0158:
dotnet_diagnostic.CS0158.severity = error

# CS0159:
dotnet_diagnostic.CS0159.severity = error

# CS0160:
dotnet_diagnostic.CS0160.severity = error

# CS0161:
dotnet_diagnostic.CS0161.severity = error

# CS0162: Unreachable code detected
dotnet_diagnostic.CS0162.severity = error

# CS0163:
dotnet_diagnostic.CS0163.severity = error

# CS0164: This label has not been referenced
dotnet_diagnostic.CS0164.severity = error

# CS0165:
dotnet_diagnostic.CS0165.severity = error

# CS0168: Variable is declared but never used
dotnet_diagnostic.CS0168.severity = error

# CS0170:
dotnet_diagnostic.CS0170.severity = error

# CS0171:
dotnet_diagnostic.CS0171.severity = error

# CS0172:
dotnet_diagnostic.CS0172.severity = error

# CS0173:
dotnet_diagnostic.CS0173.severity = error

# CS0174:
dotnet_diagnostic.CS0174.severity = error

# CS0175:
dotnet_diagnostic.CS0175.severity = error

# CS0176:
dotnet_diagnostic.CS0176.severity = error

# CS0177:
dotnet_diagnostic.CS0177.severity = error

# CS0178:
dotnet_diagnostic.CS0178.severity = error

# CS0179:
dotnet_diagnostic.CS0179.severity = error

# CS0180:
dotnet_diagnostic.CS0180.severity = error

# CS0181:
dotnet_diagnostic.CS0181.severity = error

# CS0182:
dotnet_diagnostic.CS0182.severity = error

# CS0183: 'is' expression's given expression is always of the provided type
dotnet_diagnostic.CS0183.severity = error

# CS0184: 'is' expression's given expression is never of the provided type
dotnet_diagnostic.CS0184.severity = error

# CS0185:
dotnet_diagnostic.CS0185.severity = error

# CS0186:
dotnet_diagnostic.CS0186.severity = error

# CS0188:
dotnet_diagnostic.CS0188.severity = error

# CS0190:
dotnet_diagnostic.CS0190.severity = error

# CS0191:
dotnet_diagnostic.CS0191.severity = error

# CS0192:
dotnet_diagnostic.CS0192.severity = error

# CS0193:
dotnet_diagnostic.CS0193.severity = error

# CS0196:
dotnet_diagnostic.CS0196.severity = error

# CS0197: Using a field of a marshal-by-reference class as a ref or out value or taking its address may cause a runtime exception
dotnet_diagnostic.CS0197.severity = error

# CS0198:
dotnet_diagnostic.CS0198.severity = error

# CS0199:
dotnet_diagnostic.CS0199.severity = error

# CS0200:
dotnet_diagnostic.CS0200.severity = error

# CS0201:
dotnet_diagnostic.CS0201.severity = error

# CS0202:
dotnet_diagnostic.CS0202.severity = error

# CS0205:
dotnet_diagnostic.CS0205.severity = error

# CS0206:
dotnet_diagnostic.CS0206.severity = error

# CS0208:
dotnet_diagnostic.CS0208.severity = error

# CS0209:
dotnet_diagnostic.CS0209.severity = error

# CS0210:
dotnet_diagnostic.CS0210.severity = error

# CS0211:
dotnet_diagnostic.CS0211.severity = error

# CS0212:
dotnet_diagnostic.CS0212.severity = error

# CS0213:
dotnet_diagnostic.CS0213.severity = error

# CS0214:
dotnet_diagnostic.CS0214.severity = error

# CS0215:
dotnet_diagnostic.CS0215.severity = error

# CS0216:
dotnet_diagnostic.CS0216.severity = error

# CS0217:
dotnet_diagnostic.CS0217.severity = error

# CS0218:
dotnet_diagnostic.CS0218.severity = error

# CS0219: Variable is assigned but its value is never used
dotnet_diagnostic.CS0219.severity = error

# CS0220:
dotnet_diagnostic.CS0220.severity = error

# CS0221:
dotnet_diagnostic.CS0221.severity = error

# CS0224:
dotnet_diagnostic.CS0224.severity = error

# CS0225:
dotnet_diagnostic.CS0225.severity = error

# CS0226:
dotnet_diagnostic.CS0226.severity = error

# CS0227:
dotnet_diagnostic.CS0227.severity = error

# CS0229:
dotnet_diagnostic.CS0229.severity = error

# CS0230:
dotnet_diagnostic.CS0230.severity = error

# CS0231:
dotnet_diagnostic.CS0231.severity = error

# CS0233:
dotnet_diagnostic.CS0233.severity = error

# CS0234:
dotnet_diagnostic.CS0234.severity = error

# CS0236:
dotnet_diagnostic.CS0236.severity = error

# CS0238:
dotnet_diagnostic.CS0238.severity = error

# CS0239:
dotnet_diagnostic.CS0239.severity = error

# CS0242:
dotnet_diagnostic.CS0242.severity = error

# CS0243:
dotnet_diagnostic.CS0243.severity = error

# CS0244:
dotnet_diagnostic.CS0244.severity = error

# CS0245:
dotnet_diagnostic.CS0245.severity = error

# CS0246:
dotnet_diagnostic.CS0246.severity = error

# CS0247:
dotnet_diagnostic.CS0247.severity = error

# CS0248:
dotnet_diagnostic.CS0248.severity = error

# CS0249:
dotnet_diagnostic.CS0249.severity = error

# CS0250:
dotnet_diagnostic.CS0250.severity = error

# CS0251: Indexing an array with a negative index
dotnet_diagnostic.CS0251.severity = error

# CS0252: Possible unintended reference comparison; left hand side needs cast
dotnet_diagnostic.CS0252.severity = error

# CS0253: Possible unintended reference comparison; right hand side needs cast
dotnet_diagnostic.CS0253.severity = error

# CS0254:
dotnet_diagnostic.CS0254.severity = error

# CS0255:
dotnet_diagnostic.CS0255.severity = error

# CS0257:
dotnet_diagnostic.CS0257.severity = error

# CS0260:
dotnet_diagnostic.CS0260.severity = error

# CS0261:
dotnet_diagnostic.CS0261.severity = error

# CS0262:
dotnet_diagnostic.CS0262.severity = error

# CS0263:
dotnet_diagnostic.CS0263.severity = error

# CS0264:
dotnet_diagnostic.CS0264.severity = error

# CS0265:
dotnet_diagnostic.CS0265.severity = error

# CS0266:
dotnet_diagnostic.CS0266.severity = error

# CS0267:
dotnet_diagnostic.CS0267.severity = error

# CS0268:
dotnet_diagnostic.CS0268.severity = error

# CS0269:
dotnet_diagnostic.CS0269.severity = error

# CS0270:
dotnet_diagnostic.CS0270.severity = error

# CS0271:
dotnet_diagnostic.CS0271.severity = error

# CS0272:
dotnet_diagnostic.CS0272.severity = error

# CS0273:
dotnet_diagnostic.CS0273.severity = error

# CS0274:
dotnet_diagnostic.CS0274.severity = error

# CS0276:
dotnet_diagnostic.CS0276.severity = error

# CS0277:
dotnet_diagnostic.CS0277.severity = error

# CS0278: Type does not implement the collection pattern; members are ambiguous
dotnet_diagnostic.CS0278.severity = error

# CS0279: Type does not implement the collection pattern; member is is not a public instance or extension method.
dotnet_diagnostic.CS0279.severity = error

# CS0280: Type does not implement the collection pattern; member has the wrong signature
dotnet_diagnostic.CS0280.severity = error

# CS0281:
dotnet_diagnostic.CS0281.severity = error

# CS0282: There is no defined ordering between fields in multiple declarations of partial struct
dotnet_diagnostic.CS0282.severity = error

# CS0283:
dotnet_diagnostic.CS0283.severity = error

# CS0304:
dotnet_diagnostic.CS0304.severity = error

# CS0305:
dotnet_diagnostic.CS0305.severity = error

# CS0306:
dotnet_diagnostic.CS0306.severity = error

# CS0307:
dotnet_diagnostic.CS0307.severity = error

# CS0308:
dotnet_diagnostic.CS0308.severity = error

# CS0310:
dotnet_diagnostic.CS0310.severity = error

# CS0311:
dotnet_diagnostic.CS0311.severity = error

# CS0312:
dotnet_diagnostic.CS0312.severity = error

# CS0313:
dotnet_diagnostic.CS0313.severity = error

# CS0314:
dotnet_diagnostic.CS0314.severity = error

# CS0315:
dotnet_diagnostic.CS0315.severity = error

# CS0316:
dotnet_diagnostic.CS0316.severity = error

# CS0400:
dotnet_diagnostic.CS0400.severity = error

# CS0401:
dotnet_diagnostic.CS0401.severity = error

# CS0403:
dotnet_diagnostic.CS0403.severity = error

# CS0405:
dotnet_diagnostic.CS0405.severity = error

# CS0406:
dotnet_diagnostic.CS0406.severity = error

# CS0407:
dotnet_diagnostic.CS0407.severity = error

# CS0409:
dotnet_diagnostic.CS0409.severity = error

# CS0411:
dotnet_diagnostic.CS0411.severity = error

# CS0412:
dotnet_diagnostic.CS0412.severity = error

# CS0413:
dotnet_diagnostic.CS0413.severity = error

# CS0415:
dotnet_diagnostic.CS0415.severity = error

# CS0416:
dotnet_diagnostic.CS0416.severity = error

# CS0417:
dotnet_diagnostic.CS0417.severity = error

# CS0418:
dotnet_diagnostic.CS0418.severity = error

# CS0419: Ambiguous reference in cref attribute
dotnet_diagnostic.CS0419.severity = error

# CS0420: A reference to a volatile field will not be treated as volatile
dotnet_diagnostic.CS0420.severity = error

# CS0423:
dotnet_diagnostic.CS0423.severity = error

# CS0424:
dotnet_diagnostic.CS0424.severity = error

# CS0425:
dotnet_diagnostic.CS0425.severity = error

# CS0426:
dotnet_diagnostic.CS0426.severity = error

# CS0428:
dotnet_diagnostic.CS0428.severity = error

# CS0430:
dotnet_diagnostic.CS0430.severity = error

# CS0431:
dotnet_diagnostic.CS0431.severity = error

# CS0432:
dotnet_diagnostic.CS0432.severity = error

# CS0433:
dotnet_diagnostic.CS0433.severity = error

# CS0434:
dotnet_diagnostic.CS0434.severity = error

# CS0435: Namespace conflicts with imported type
dotnet_diagnostic.CS0435.severity = error

# CS0436: Type conflicts with imported type
dotnet_diagnostic.CS0436.severity = error

# CS0437: Type conflicts with imported namespace
dotnet_diagnostic.CS0437.severity = error

# CS0438:
dotnet_diagnostic.CS0438.severity = error

# CS0439:
dotnet_diagnostic.CS0439.severity = error

# CS0440: Defining an alias named 'global' is ill-advised
dotnet_diagnostic.CS0440.severity = error

# CS0441:
dotnet_diagnostic.CS0441.severity = error

# CS0442:
dotnet_diagnostic.CS0442.severity = error

# CS0443:
dotnet_diagnostic.CS0443.severity = error

# CS0445:
dotnet_diagnostic.CS0445.severity = error

# CS0446:
dotnet_diagnostic.CS0446.severity = error

# CS0448:
dotnet_diagnostic.CS0448.severity = error

# CS0449:
dotnet_diagnostic.CS0449.severity = error

# CS0450:
dotnet_diagnostic.CS0450.severity = error

# CS0451:
dotnet_diagnostic.CS0451.severity = error

# CS0452:
dotnet_diagnostic.CS0452.severity = error

# CS0453:
dotnet_diagnostic.CS0453.severity = error

# CS0454:
dotnet_diagnostic.CS0454.severity = error

# CS0455:
dotnet_diagnostic.CS0455.severity = error

# CS0456:
dotnet_diagnostic.CS0456.severity = error

# CS0457:
dotnet_diagnostic.CS0457.severity = error

# CS0458: The result of the expression is always 'null'
dotnet_diagnostic.CS0458.severity = error

# CS0460:
dotnet_diagnostic.CS0460.severity = error

# CS0462:
dotnet_diagnostic.CS0462.severity = error

# CS0463:
dotnet_diagnostic.CS0463.severity = error

# CS0464: Comparing with null of struct type always produces 'false'
dotnet_diagnostic.CS0464.severity = error

# CS0465: Introducing a 'Finalize' method can interfere with destructor invocation
dotnet_diagnostic.CS0465.severity = error

# CS0466:
dotnet_diagnostic.CS0466.severity = error

# CS0469: The 'goto case' value is not implicitly convertible to the switch type
dotnet_diagnostic.CS0469.severity = error

# CS0470:
dotnet_diagnostic.CS0470.severity = error

# CS0472: The result of the expression is always the same since a value of this type is never equal to 'null'
dotnet_diagnostic.CS0472.severity = error

# CS0473: Explicit interface implementation matches more than one interface member
dotnet_diagnostic.CS0473.severity = error

# CS0500:
dotnet_diagnostic.CS0500.severity = error

# CS0501:
dotnet_diagnostic.CS0501.severity = error

# CS0502:
dotnet_diagnostic.CS0502.severity = error

# CS0503:
dotnet_diagnostic.CS0503.severity = error

# CS0504:
dotnet_diagnostic.CS0504.severity = error

# CS0505:
dotnet_diagnostic.CS0505.severity = error

# CS0506:
dotnet_diagnostic.CS0506.severity = error

# CS0507:
dotnet_diagnostic.CS0507.severity = error

# CS0508:
dotnet_diagnostic.CS0508.severity = error

# CS0509:
dotnet_diagnostic.CS0509.severity = error

# CS0513:
dotnet_diagnostic.CS0513.severity = error

# CS0514:
dotnet_diagnostic.CS0514.severity = error

# CS0515:
dotnet_diagnostic.CS0515.severity = error

# CS0516:
dotnet_diagnostic.CS0516.severity = error

# CS0517:
dotnet_diagnostic.CS0517.severity = error

# CS0522:
dotnet_diagnostic.CS0522.severity = error

# CS0523:
dotnet_diagnostic.CS0523.severity = error

# CS0525:
dotnet_diagnostic.CS0525.severity = error

# CS0526:
dotnet_diagnostic.CS0526.severity = error

# CS0527:
dotnet_diagnostic.CS0527.severity = error

# CS0528:
dotnet_diagnostic.CS0528.severity = error

# CS0529:
dotnet_diagnostic.CS0529.severity = error

# CS0533:
dotnet_diagnostic.CS0533.severity = error

# CS0534:
dotnet_diagnostic.CS0534.severity = error

# CS0535:
dotnet_diagnostic.CS0535.severity = error

# CS0537:
dotnet_diagnostic.CS0537.severity = error

# CS0538:
dotnet_diagnostic.CS0538.severity = error

# CS0539:
dotnet_diagnostic.CS0539.severity = error

# CS0540:
dotnet_diagnostic.CS0540.severity = error

# CS0541:
dotnet_diagnostic.CS0541.severity = error

# CS0542:
dotnet_diagnostic.CS0542.severity = error

# CS0543:
dotnet_diagnostic.CS0543.severity = error

# CS0544:
dotnet_diagnostic.CS0544.severity = error

# CS0545:
dotnet_diagnostic.CS0545.severity = error

# CS0546:
dotnet_diagnostic.CS0546.severity = error

# CS0547:
dotnet_diagnostic.CS0547.severity = error

# CS0548:
dotnet_diagnostic.CS0548.severity = error

# CS0549:
dotnet_diagnostic.CS0549.severity = error

# CS0550:
dotnet_diagnostic.CS0550.severity = error

# CS0551:
dotnet_diagnostic.CS0551.severity = error

# CS0552:
dotnet_diagnostic.CS0552.severity = error

# CS0553:
dotnet_diagnostic.CS0553.severity = error

# CS0554:
dotnet_diagnostic.CS0554.severity = error

# CS0555:
dotnet_diagnostic.CS0555.severity = error

# CS0556:
dotnet_diagnostic.CS0556.severity = error

# CS0557:
dotnet_diagnostic.CS0557.severity = error

# CS0558:
dotnet_diagnostic.CS0558.severity = error

# CS0559:
dotnet_diagnostic.CS0559.severity = error

# CS0562:
dotnet_diagnostic.CS0562.severity = error

# CS0563:
dotnet_diagnostic.CS0563.severity = error

# CS0564:
dotnet_diagnostic.CS0564.severity = error

# CS0567:
dotnet_diagnostic.CS0567.severity = error

# CS0569:
dotnet_diagnostic.CS0569.severity = error

# CS0571:
dotnet_diagnostic.CS0571.severity = error

# CS0572:
dotnet_diagnostic.CS0572.severity = error

# CS0574:
dotnet_diagnostic.CS0574.severity = error

# CS0575:
dotnet_diagnostic.CS0575.severity = error

# CS0576:
dotnet_diagnostic.CS0576.severity = error

# CS0577:
dotnet_diagnostic.CS0577.severity = error

# CS0578:
dotnet_diagnostic.CS0578.severity = error

# CS0579:
dotnet_diagnostic.CS0579.severity = error

# CS0582:
dotnet_diagnostic.CS0582.severity = error

# CS0590:
dotnet_diagnostic.CS0590.severity = error

# CS0591:
dotnet_diagnostic.CS0591.severity = error

# CS0592:
dotnet_diagnostic.CS0592.severity = error

# CS0594:
dotnet_diagnostic.CS0594.severity = error

# CS0595:
dotnet_diagnostic.CS0595.severity = error

# CS0596:
dotnet_diagnostic.CS0596.severity = error

# CS0599:
dotnet_diagnostic.CS0599.severity = error

# CS0601:
dotnet_diagnostic.CS0601.severity = error

# CS0610:
dotnet_diagnostic.CS0610.severity = error

# CS0611:
dotnet_diagnostic.CS0611.severity = error

# CS0612: Type or member is obsolete
dotnet_diagnostic.CS0612.severity = error

# CS0616:
dotnet_diagnostic.CS0616.severity = error

# CS0617:
dotnet_diagnostic.CS0617.severity = error

# CS0618: Type or member is obsolete
dotnet_diagnostic.CS0618.severity = error

# CS0619:
dotnet_diagnostic.CS0619.severity = error

# CS0620:
dotnet_diagnostic.CS0620.severity = error

# CS0621:
dotnet_diagnostic.CS0621.severity = error

# CS0622:
dotnet_diagnostic.CS0622.severity = error

# CS0623:
dotnet_diagnostic.CS0623.severity = error

# CS0625:
dotnet_diagnostic.CS0625.severity = error

# CS0626: Method, operator, or accessor is marked external and has no attributes on it
dotnet_diagnostic.CS0626.severity = error

# CS0628: New protected member declared in sealed type
dotnet_diagnostic.CS0628.severity = error

# CS0629:
dotnet_diagnostic.CS0629.severity = error

# CS0630:
dotnet_diagnostic.CS0630.severity = error

# CS0631:
dotnet_diagnostic.CS0631.severity = error

# CS0633:
dotnet_diagnostic.CS0633.severity = error

# CS0636:
dotnet_diagnostic.CS0636.severity = error

# CS0637:
dotnet_diagnostic.CS0637.severity = error

# CS0641:
dotnet_diagnostic.CS0641.severity = error

# CS0642: Possible mistaken empty statement
dotnet_diagnostic.CS0642.severity = error

# CS0643:
dotnet_diagnostic.CS0643.severity = error

# CS0644:
dotnet_diagnostic.CS0644.severity = error

# CS0646:
dotnet_diagnostic.CS0646.severity = error

# CS0648:
dotnet_diagnostic.CS0648.severity = error

# CS0650:
dotnet_diagnostic.CS0650.severity = error

# CS0652: Comparison to integral constant is useless; the constant is outside the range of the type
dotnet_diagnostic.CS0652.severity = error

# CS0653:
dotnet_diagnostic.CS0653.severity = error

# CS0655:
dotnet_diagnostic.CS0655.severity = error

# CS0657: Not a valid attribute location for this declaration
dotnet_diagnostic.CS0657.severity = error

# CS0658: Not a recognized attribute location
dotnet_diagnostic.CS0658.severity = error

# CS0659: Type overrides Object.Equals(object o) but does not override Object.GetHashCode()
dotnet_diagnostic.CS0659.severity = error

# CS0660: Type defines operator == or operator != but does not override Object.Equals(object o)
dotnet_diagnostic.CS0660.severity = error

# CS0661: Type defines operator == or operator != but does not override Object.GetHashCode()
dotnet_diagnostic.CS0661.severity = error

# CS0662:
dotnet_diagnostic.CS0662.severity = error

# CS0663:
dotnet_diagnostic.CS0663.severity = error

# CS0664:
dotnet_diagnostic.CS0664.severity = error

# CS0665: Assignment in conditional expression is always constant
dotnet_diagnostic.CS0665.severity = error

# CS0666:
dotnet_diagnostic.CS0666.severity = error

# CS0668:
dotnet_diagnostic.CS0668.severity = error

# CS0669:
dotnet_diagnostic.CS0669.severity = error

# CS0670:
dotnet_diagnostic.CS0670.severity = error

# CS0672: Member overrides obsolete member
dotnet_diagnostic.CS0672.severity = error

# CS0673:
dotnet_diagnostic.CS0673.severity = error

# CS0674:
dotnet_diagnostic.CS0674.severity = error

# CS0675: Bitwise-or operator used on a sign-extended operand
dotnet_diagnostic.CS0675.severity = error

# CS0677:
dotnet_diagnostic.CS0677.severity = error

# CS0678:
dotnet_diagnostic.CS0678.severity = error

# CS0681:
dotnet_diagnostic.CS0681.severity = error

# CS0682:
dotnet_diagnostic.CS0682.severity = error

# CS0683:
dotnet_diagnostic.CS0683.severity = error

# CS0684: Interface marked with 'CoClassAttribute' not marked with 'ComImportAttribute'
dotnet_diagnostic.CS0684.severity = error

# CS0685:
dotnet_diagnostic.CS0685.severity = error

# CS0686:
dotnet_diagnostic.CS0686.severity = error

# CS0687:
dotnet_diagnostic.CS0687.severity = error

# CS0689:
dotnet_diagnostic.CS0689.severity = error

# CS0692:
dotnet_diagnostic.CS0692.severity = error

# CS0693: Type parameter has the same name as the type parameter from outer type
dotnet_diagnostic.CS0693.severity = error

# CS0694:
dotnet_diagnostic.CS0694.severity = error

# CS0695:
dotnet_diagnostic.CS0695.severity = error

# CS0699:
dotnet_diagnostic.CS0699.severity = error

# CS0701:
dotnet_diagnostic.CS0701.severity = error

# CS0702:
dotnet_diagnostic.CS0702.severity = error

# CS0703:
dotnet_diagnostic.CS0703.severity = error

# CS0704:
dotnet_diagnostic.CS0704.severity = error

# CS0706:
dotnet_diagnostic.CS0706.severity = error

# CS0708:
dotnet_diagnostic.CS0708.severity = error

# CS0709:
dotnet_diagnostic.CS0709.severity = error

# CS0710:
dotnet_diagnostic.CS0710.severity = error

# CS0711:
dotnet_diagnostic.CS0711.severity = error

# CS0712:
dotnet_diagnostic.CS0712.severity = error

# CS0713:
dotnet_diagnostic.CS0713.severity = error

# CS0714:
dotnet_diagnostic.CS0714.severity = error

# CS0715:
dotnet_diagnostic.CS0715.severity = error

# CS0716:
dotnet_diagnostic.CS0716.severity = error

# CS0717:
dotnet_diagnostic.CS0717.severity = error

# CS0718:
dotnet_diagnostic.CS0718.severity = error

# CS0719:
dotnet_diagnostic.CS0719.severity = error

# CS0720:
dotnet_diagnostic.CS0720.severity = error

# CS0721:
dotnet_diagnostic.CS0721.severity = error

# CS0722:
dotnet_diagnostic.CS0722.severity = error

# CS0723:
dotnet_diagnostic.CS0723.severity = error

# CS0724:
dotnet_diagnostic.CS0724.severity = error

# CS0726:
dotnet_diagnostic.CS0726.severity = error

# CS0728: Possibly incorrect assignment to local which is the argument to a using or lock statement
dotnet_diagnostic.CS0728.severity = error

# CS0729:
dotnet_diagnostic.CS0729.severity = error

# CS0730:
dotnet_diagnostic.CS0730.severity = error

# CS0731:
dotnet_diagnostic.CS0731.severity = error

# CS0734:
dotnet_diagnostic.CS0734.severity = error

# CS0735:
dotnet_diagnostic.CS0735.severity = error

# CS0736:
dotnet_diagnostic.CS0736.severity = error

# CS0737:
dotnet_diagnostic.CS0737.severity = error

# CS0738:
dotnet_diagnostic.CS0738.severity = error

# CS0739:
dotnet_diagnostic.CS0739.severity = error

# CS0742:
dotnet_diagnostic.CS0742.severity = error

# CS0743:
dotnet_diagnostic.CS0743.severity = error

# CS0744:
dotnet_diagnostic.CS0744.severity = error

# CS0745:
dotnet_diagnostic.CS0745.severity = error

# CS0746:
dotnet_diagnostic.CS0746.severity = error

# CS0747:
dotnet_diagnostic.CS0747.severity = error

# CS0748:
dotnet_diagnostic.CS0748.severity = error

# CS0750:
dotnet_diagnostic.CS0750.severity = error

# CS0751:
dotnet_diagnostic.CS0751.severity = error

# CS0754:
dotnet_diagnostic.CS0754.severity = error

# CS0755:
dotnet_diagnostic.CS0755.severity = error

# CS0756:
dotnet_diagnostic.CS0756.severity = error

# CS0757:
dotnet_diagnostic.CS0757.severity = error

# CS0758:
dotnet_diagnostic.CS0758.severity = error

# CS0759:
dotnet_diagnostic.CS0759.severity = error

# CS0761:
dotnet_diagnostic.CS0761.severity = error

# CS0762:
dotnet_diagnostic.CS0762.severity = error

# CS0763:
dotnet_diagnostic.CS0763.severity = error

# CS0764:
dotnet_diagnostic.CS0764.severity = error

# CS0765:
dotnet_diagnostic.CS0765.severity = error

# CS0767:
dotnet_diagnostic.CS0767.severity = error

# CS0768:
dotnet_diagnostic.CS0768.severity = error

# CS0809: Obsolete member overrides non-obsolete member
dotnet_diagnostic.CS0809.severity = error

# CS0811: Fully qualified name is too long for debug information
dotnet_diagnostic.CS0811.severity = error

# CS0815:
dotnet_diagnostic.CS0815.severity = error

# CS0818:
dotnet_diagnostic.CS0818.severity = error

# CS0819:
dotnet_diagnostic.CS0819.severity = error

# CS0820:
dotnet_diagnostic.CS0820.severity = error

# CS0821:
dotnet_diagnostic.CS0821.severity = error

# CS0822:
dotnet_diagnostic.CS0822.severity = error

# CS0824: Constructor is marked external
dotnet_diagnostic.CS0824.severity = error

# CS0825:
dotnet_diagnostic.CS0825.severity = error

# CS0826:
dotnet_diagnostic.CS0826.severity = error

# CS0828:
dotnet_diagnostic.CS0828.severity = error

# CS0831:
dotnet_diagnostic.CS0831.severity = error

# CS0832:
dotnet_diagnostic.CS0832.severity = error

# CS0833:
dotnet_diagnostic.CS0833.severity = error

# CS0834:
dotnet_diagnostic.CS0834.severity = error

# CS0835:
dotnet_diagnostic.CS0835.severity = error

# CS0836:
dotnet_diagnostic.CS0836.severity = error

# CS0837:
dotnet_diagnostic.CS0837.severity = error

# CS0838:
dotnet_diagnostic.CS0838.severity = error

# CS0839:
dotnet_diagnostic.CS0839.severity = error

# CS0841:
dotnet_diagnostic.CS0841.severity = error

# CS0843:
dotnet_diagnostic.CS0843.severity = error

# CS0844:
dotnet_diagnostic.CS0844.severity = error

# CS0845:
dotnet_diagnostic.CS0845.severity = error

# CS0846:
dotnet_diagnostic.CS0846.severity = error

# CS0847:
dotnet_diagnostic.CS0847.severity = error

# CS0853:
dotnet_diagnostic.CS0853.severity = error

# CS0854:
dotnet_diagnostic.CS0854.severity = error

# CS0855:
dotnet_diagnostic.CS0855.severity = error

# CS0856:
dotnet_diagnostic.CS0856.severity = error

# CS0857:
dotnet_diagnostic.CS0857.severity = error

# CS1001:
dotnet_diagnostic.CS1001.severity = error

# CS1002:
dotnet_diagnostic.CS1002.severity = error

# CS1003:
dotnet_diagnostic.CS1003.severity = error

# CS1004:
dotnet_diagnostic.CS1004.severity = error

# CS1007:
dotnet_diagnostic.CS1007.severity = error

# CS1008:
dotnet_diagnostic.CS1008.severity = error

# CS1009:
dotnet_diagnostic.CS1009.severity = error

# CS1010:
dotnet_diagnostic.CS1010.severity = error

# CS1011:
dotnet_diagnostic.CS1011.severity = error

# CS1012:
dotnet_diagnostic.CS1012.severity = error

# CS1013:
dotnet_diagnostic.CS1013.severity = error

# CS1014:
dotnet_diagnostic.CS1014.severity = error

# CS1015:
dotnet_diagnostic.CS1015.severity = error

# CS1016:
dotnet_diagnostic.CS1016.severity = error

# CS1017:
dotnet_diagnostic.CS1017.severity = error

# CS1018:
dotnet_diagnostic.CS1018.severity = error

# CS1019:
dotnet_diagnostic.CS1019.severity = error

# CS1020:
dotnet_diagnostic.CS1020.severity = error

# CS1021:
dotnet_diagnostic.CS1021.severity = error

# CS1022:
dotnet_diagnostic.CS1022.severity = error

# CS1023:
dotnet_diagnostic.CS1023.severity = error

# CS1024:
dotnet_diagnostic.CS1024.severity = error

# CS1025:
dotnet_diagnostic.CS1025.severity = error

# CS1026:
dotnet_diagnostic.CS1026.severity = error

# CS1027:
dotnet_diagnostic.CS1027.severity = error

# CS1028:
dotnet_diagnostic.CS1028.severity = error

# CS1029:
dotnet_diagnostic.CS1029.severity = error

# CS1030: #warning directive
dotnet_diagnostic.CS1030.severity = error

# CS1031:
dotnet_diagnostic.CS1031.severity = error

# CS1032:
dotnet_diagnostic.CS1032.severity = error

# CS1035:
dotnet_diagnostic.CS1035.severity = error

# CS1037:
dotnet_diagnostic.CS1037.severity = error

# CS1038:
dotnet_diagnostic.CS1038.severity = error

# CS1039:
dotnet_diagnostic.CS1039.severity = error

# CS1040:
dotnet_diagnostic.CS1040.severity = error

# CS1041:
dotnet_diagnostic.CS1041.severity = error

# CS1043:
dotnet_diagnostic.CS1043.severity = error

# CS1044:
dotnet_diagnostic.CS1044.severity = error

# CS1055:
dotnet_diagnostic.CS1055.severity = error

# CS1056:
dotnet_diagnostic.CS1056.severity = error

# CS1057:
dotnet_diagnostic.CS1057.severity = error

# CS1058: A previous catch clause already catches all exceptions
dotnet_diagnostic.CS1058.severity = error

# CS1059:
dotnet_diagnostic.CS1059.severity = error

# CS1061:
dotnet_diagnostic.CS1061.severity = error

# CS1062: The best overloaded Add method for the collection initializer element is obsolete
dotnet_diagnostic.CS1062.severity = error

# CS1063:
dotnet_diagnostic.CS1063.severity = error

# CS1064: The best overloaded Add method for the collection initializer element is obsolete
dotnet_diagnostic.CS1064.severity = error

# CS1065:
dotnet_diagnostic.CS1065.severity = error

# CS1066: The default value specified will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.CS1066.severity = error

# CS1067:
dotnet_diagnostic.CS1067.severity = error

# CS1068:
dotnet_diagnostic.CS1068.severity = error

# CS1069:
dotnet_diagnostic.CS1069.severity = error

# CS1070:
dotnet_diagnostic.CS1070.severity = error

# CS1072: Expected identifier or numeric literal
dotnet_diagnostic.CS1072.severity = error

# CS1073:
dotnet_diagnostic.CS1073.severity = error

# CS1100:
dotnet_diagnostic.CS1100.severity = error

# CS1103:
dotnet_diagnostic.CS1103.severity = error

# CS1104:
dotnet_diagnostic.CS1104.severity = error

# CS1105:
dotnet_diagnostic.CS1105.severity = error

# CS1106:
dotnet_diagnostic.CS1106.severity = error

# CS1107:
dotnet_diagnostic.CS1107.severity = error

# CS1109:
dotnet_diagnostic.CS1109.severity = error

# CS1110:
dotnet_diagnostic.CS1110.severity = error

# CS1112:
dotnet_diagnostic.CS1112.severity = error

# CS1113:
dotnet_diagnostic.CS1113.severity = error

# CS1501:
dotnet_diagnostic.CS1501.severity = error

# CS1503:
dotnet_diagnostic.CS1503.severity = error

# CS1504:
dotnet_diagnostic.CS1504.severity = error

# CS1507:
dotnet_diagnostic.CS1507.severity = error

# CS1508:
dotnet_diagnostic.CS1508.severity = error

# CS1509:
dotnet_diagnostic.CS1509.severity = error

# CS1510:
dotnet_diagnostic.CS1510.severity = error

# CS1511:
dotnet_diagnostic.CS1511.severity = error

# CS1512:
dotnet_diagnostic.CS1512.severity = error

# CS1513:
dotnet_diagnostic.CS1513.severity = error

# CS1514:
dotnet_diagnostic.CS1514.severity = error

# CS1515:
dotnet_diagnostic.CS1515.severity = error

# CS1517:
dotnet_diagnostic.CS1517.severity = error

# CS1519:
dotnet_diagnostic.CS1519.severity = error

# CS1520:
dotnet_diagnostic.CS1520.severity = error

# CS1521:
dotnet_diagnostic.CS1521.severity = error

# CS1522: Empty switch block
dotnet_diagnostic.CS1522.severity = error

# CS1524:
dotnet_diagnostic.CS1524.severity = error

# CS1525:
dotnet_diagnostic.CS1525.severity = error

# CS1526:
dotnet_diagnostic.CS1526.severity = error

# CS1527:
dotnet_diagnostic.CS1527.severity = error

# CS1528:
dotnet_diagnostic.CS1528.severity = error

# CS1529:
dotnet_diagnostic.CS1529.severity = error

# CS1534:
dotnet_diagnostic.CS1534.severity = error

# CS1535:
dotnet_diagnostic.CS1535.severity = error

# CS1536:
dotnet_diagnostic.CS1536.severity = error

# CS1537:
dotnet_diagnostic.CS1537.severity = error

# CS1540:
dotnet_diagnostic.CS1540.severity = error

# CS1542:
dotnet_diagnostic.CS1542.severity = error

# CS1545:
dotnet_diagnostic.CS1545.severity = error

# CS1546:
dotnet_diagnostic.CS1546.severity = error

# CS1547:
dotnet_diagnostic.CS1547.severity = error

# CS1551:
dotnet_diagnostic.CS1551.severity = error

# CS1552:
dotnet_diagnostic.CS1552.severity = error

# CS1553:
dotnet_diagnostic.CS1553.severity = error

# CS1562:
dotnet_diagnostic.CS1562.severity = error

# CS1564:
dotnet_diagnostic.CS1564.severity = error

# CS1565:
dotnet_diagnostic.CS1565.severity = error

# CS1566:
dotnet_diagnostic.CS1566.severity = error

# CS1569:
dotnet_diagnostic.CS1569.severity = error

# CS1570: XML comment has badly formed XML
dotnet_diagnostic.CS1570.severity = error

# CS1571: XML comment has a duplicate param tag
dotnet_diagnostic.CS1571.severity = error

# CS1572: XML comment has a param tag, but there is no parameter by that name
dotnet_diagnostic.CS1572.severity = error

# CS1573: Parameter has no matching param tag in the XML comment (but other parameters do)
dotnet_diagnostic.CS1573.severity = error

# CS1574: XML comment has cref attribute that could not be resolved
dotnet_diagnostic.CS1574.severity = error

# CS1575:
dotnet_diagnostic.CS1575.severity = error

# CS1576:
dotnet_diagnostic.CS1576.severity = error

# CS1578:
dotnet_diagnostic.CS1578.severity = error

# CS1579:
dotnet_diagnostic.CS1579.severity = error

# CS1580: Invalid type for parameter in XML comment cref attribute
dotnet_diagnostic.CS1580.severity = error

# CS1581: Invalid return type in XML comment cref attribute
dotnet_diagnostic.CS1581.severity = error

# CS1583:
dotnet_diagnostic.CS1583.severity = error

# CS1584: XML comment has syntactically incorrect cref attribute
dotnet_diagnostic.CS1584.severity = error

# CS1585:
dotnet_diagnostic.CS1585.severity = error

# CS1586:
dotnet_diagnostic.CS1586.severity = error

# CS1587: XML comment is not placed on a valid language element
dotnet_diagnostic.CS1587.severity = error

# CS1589: Unable to include XML fragment
dotnet_diagnostic.CS1589.severity = error

# CS1590: Invalid XML include element
dotnet_diagnostic.CS1590.severity = error

# CS1591: Missing XML comment for publicly visible type or member
dotnet_diagnostic.CS1591.severity = error

# CS1592: Badly formed XML in included comments file
dotnet_diagnostic.CS1592.severity = error

# CS1593:
dotnet_diagnostic.CS1593.severity = error

# CS1597:
dotnet_diagnostic.CS1597.severity = error

# CS1599:
dotnet_diagnostic.CS1599.severity = error

# CS1600:
dotnet_diagnostic.CS1600.severity = error

# CS1601:
dotnet_diagnostic.CS1601.severity = error

# CS1604:
dotnet_diagnostic.CS1604.severity = error

# CS1605:
dotnet_diagnostic.CS1605.severity = error

# CS1608:
dotnet_diagnostic.CS1608.severity = error

# CS1609:
dotnet_diagnostic.CS1609.severity = error

# CS1611:
dotnet_diagnostic.CS1611.severity = error

# CS1612:
dotnet_diagnostic.CS1612.severity = error

# CS1613:
dotnet_diagnostic.CS1613.severity = error

# CS1614:
dotnet_diagnostic.CS1614.severity = error

# CS1615:
dotnet_diagnostic.CS1615.severity = error

# CS1616: Option overrides attribute given in a source file or added module
dotnet_diagnostic.CS1616.severity = error

# CS1617:
dotnet_diagnostic.CS1617.severity = error

# CS1618:
dotnet_diagnostic.CS1618.severity = error

# CS1619:
dotnet_diagnostic.CS1619.severity = error

# CS1620:
dotnet_diagnostic.CS1620.severity = error

# CS1621:
dotnet_diagnostic.CS1621.severity = error

# CS1622:
dotnet_diagnostic.CS1622.severity = error

# CS1623:
dotnet_diagnostic.CS1623.severity = error

# CS1624:
dotnet_diagnostic.CS1624.severity = error

# CS1625:
dotnet_diagnostic.CS1625.severity = error

# CS1626:
dotnet_diagnostic.CS1626.severity = error

# CS1627:
dotnet_diagnostic.CS1627.severity = error

# CS1628:
dotnet_diagnostic.CS1628.severity = error

# CS1629:
dotnet_diagnostic.CS1629.severity = error

# CS1631:
dotnet_diagnostic.CS1631.severity = error

# CS1632:
dotnet_diagnostic.CS1632.severity = error

# CS1633: Unrecognized #pragma directive
dotnet_diagnostic.CS1633.severity = error

# CS1634: Expected 'disable' or 'restore' after #pragma warning
dotnet_diagnostic.CS1634.severity = error

# CS1635: Cannot restore warning because it was disabled globally
dotnet_diagnostic.CS1635.severity = error

# CS1636:
dotnet_diagnostic.CS1636.severity = error

# CS1637:
dotnet_diagnostic.CS1637.severity = error

# CS1639:
dotnet_diagnostic.CS1639.severity = error

# CS1640:
dotnet_diagnostic.CS1640.severity = error

# CS1641:
dotnet_diagnostic.CS1641.severity = error

# CS1642:
dotnet_diagnostic.CS1642.severity = error

# CS1643:
dotnet_diagnostic.CS1643.severity = error

# CS1645: Feature is not part of the standardized ISO C# language specification, and may not be accepted by other compilers
dotnet_diagnostic.CS1645.severity = error

# CS1646:
dotnet_diagnostic.CS1646.severity = error

# CS1648:
dotnet_diagnostic.CS1648.severity = error

# CS1649:
dotnet_diagnostic.CS1649.severity = error

# CS1650:
dotnet_diagnostic.CS1650.severity = error

# CS1651:
dotnet_diagnostic.CS1651.severity = error

# CS1654:
dotnet_diagnostic.CS1654.severity = error

# CS1655:
dotnet_diagnostic.CS1655.severity = error

# CS1656:
dotnet_diagnostic.CS1656.severity = error

# CS1657:
dotnet_diagnostic.CS1657.severity = error

# CS1658: Warning is overriding an error
dotnet_diagnostic.CS1658.severity = error

# CS1660:
dotnet_diagnostic.CS1660.severity = error

# CS1661:
dotnet_diagnostic.CS1661.severity = error

# CS1662:
dotnet_diagnostic.CS1662.severity = error

# CS1663:
dotnet_diagnostic.CS1663.severity = error

# CS1664:
dotnet_diagnostic.CS1664.severity = error

# CS1665:
dotnet_diagnostic.CS1665.severity = error

# CS1666:
dotnet_diagnostic.CS1666.severity = error

# CS1667:
dotnet_diagnostic.CS1667.severity = error

# CS1668: Invalid search path specified
dotnet_diagnostic.CS1668.severity = error

# CS1669:
dotnet_diagnostic.CS1669.severity = error

# CS1670:
dotnet_diagnostic.CS1670.severity = error

# CS1671:
dotnet_diagnostic.CS1671.severity = error

# CS1672:
dotnet_diagnostic.CS1672.severity = error

# CS1673:
dotnet_diagnostic.CS1673.severity = error

# CS1674:
dotnet_diagnostic.CS1674.severity = error

# CS1676:
dotnet_diagnostic.CS1676.severity = error

# CS1677:
dotnet_diagnostic.CS1677.severity = error

# CS1678:
dotnet_diagnostic.CS1678.severity = error

# CS1679:
dotnet_diagnostic.CS1679.severity = error

# CS1680:
dotnet_diagnostic.CS1680.severity = error

# CS1681:
dotnet_diagnostic.CS1681.severity = error

# CS1685: Predefined type is defined in multiple assemblies in the global alias
dotnet_diagnostic.CS1685.severity = error

# CS1686:
dotnet_diagnostic.CS1686.severity = error

# CS1687: Source file has exceeded the limit of 16,707,565 lines representable in the PDB; debug information will be incorrect
dotnet_diagnostic.CS1687.severity = error

# CS1688:
dotnet_diagnostic.CS1688.severity = error

# CS1689:
dotnet_diagnostic.CS1689.severity = error

# CS1690: Accessing a member on a field of a marshal-by-reference class may cause a runtime exception
dotnet_diagnostic.CS1690.severity = error

# CS1692: Invalid number
dotnet_diagnostic.CS1692.severity = error

# CS1695: Invalid #pragma checksum syntax
dotnet_diagnostic.CS1695.severity = error

# CS1696: Single-line comment or end-of-line expected after #pragma directive
dotnet_diagnostic.CS1696.severity = error

# CS1697: Different #pragma checksum values given
dotnet_diagnostic.CS1697.severity = error

# CS1700: Assembly reference is invalid and cannot be resolved
dotnet_diagnostic.CS1700.severity = error

# CS1701: Assuming assembly reference matches identity
dotnet_diagnostic.CS1701.severity = error

# CS1702: Assuming assembly reference matches identity
dotnet_diagnostic.CS1702.severity = error

# CS1703:
dotnet_diagnostic.CS1703.severity = error

# CS1704:
dotnet_diagnostic.CS1704.severity = error

# CS1705:
dotnet_diagnostic.CS1705.severity = error

# CS1708:
dotnet_diagnostic.CS1708.severity = error

# CS1710: XML comment has a duplicate typeparam tag
dotnet_diagnostic.CS1710.severity = error

# CS1711: XML comment has a typeparam tag, but there is no type parameter by that name
dotnet_diagnostic.CS1711.severity = error

# CS1712: Type parameter has no matching typeparam tag in the XML comment (but other type parameters do)
dotnet_diagnostic.CS1712.severity = error

# CS1715:
dotnet_diagnostic.CS1715.severity = error

# CS1716:
dotnet_diagnostic.CS1716.severity = error

# CS1717: Assignment made to same variable
dotnet_diagnostic.CS1717.severity = error

# CS1718: Comparison made to same variable
dotnet_diagnostic.CS1718.severity = error

# CS1719:
dotnet_diagnostic.CS1719.severity = error

# CS1720: Expression will always cause a System.NullReferenceException because the type's default value is null
dotnet_diagnostic.CS1720.severity = error

# CS1721:
dotnet_diagnostic.CS1721.severity = error

# CS1722:
dotnet_diagnostic.CS1722.severity = error

# CS1723: XML comment has cref attribute that refers to a type parameter
dotnet_diagnostic.CS1723.severity = error

# CS1725:
dotnet_diagnostic.CS1725.severity = error

# CS1726:
dotnet_diagnostic.CS1726.severity = error

# CS1728:
dotnet_diagnostic.CS1728.severity = error

# CS1729:
dotnet_diagnostic.CS1729.severity = error

# CS1730:
dotnet_diagnostic.CS1730.severity = error

# CS1733:
dotnet_diagnostic.CS1733.severity = error

# CS1734: XML comment has a paramref tag, but there is no parameter by that name
dotnet_diagnostic.CS1734.severity = error

# CS1735: XML comment has a typeparamref tag, but there is no type parameter by that name
dotnet_diagnostic.CS1735.severity = error

# CS1736:
dotnet_diagnostic.CS1736.severity = error

# CS1737:
dotnet_diagnostic.CS1737.severity = error

# CS1738:
dotnet_diagnostic.CS1738.severity = error

# CS1739:
dotnet_diagnostic.CS1739.severity = error

# CS1740:
dotnet_diagnostic.CS1740.severity = error

# CS1741:
dotnet_diagnostic.CS1741.severity = error

# CS1742:
dotnet_diagnostic.CS1742.severity = error

# CS1743:
dotnet_diagnostic.CS1743.severity = error

# CS1744:
dotnet_diagnostic.CS1744.severity = error

# CS1745:
dotnet_diagnostic.CS1745.severity = error

# CS1746:
dotnet_diagnostic.CS1746.severity = error

# CS1747:
dotnet_diagnostic.CS1747.severity = error

# CS1748:
dotnet_diagnostic.CS1748.severity = error

# CS1750:
dotnet_diagnostic.CS1750.severity = error

# CS1751:
dotnet_diagnostic.CS1751.severity = error

# CS1752:
dotnet_diagnostic.CS1752.severity = error

# CS1754:
dotnet_diagnostic.CS1754.severity = error

# CS1756:
dotnet_diagnostic.CS1756.severity = error

# CS1757:
dotnet_diagnostic.CS1757.severity = error

# CS1758:
dotnet_diagnostic.CS1758.severity = error

# CS1759:
dotnet_diagnostic.CS1759.severity = error

# CS1760:
dotnet_diagnostic.CS1760.severity = error

# CS1761:
dotnet_diagnostic.CS1761.severity = error

# CS1762: A reference was created to embedded interop assembly because of an indirect assembly reference
dotnet_diagnostic.CS1762.severity = error

# CS1763:
dotnet_diagnostic.CS1763.severity = error

# CS1764:
dotnet_diagnostic.CS1764.severity = error

# CS1766:
dotnet_diagnostic.CS1766.severity = error

# CS1767:
dotnet_diagnostic.CS1767.severity = error

# CS1768:
dotnet_diagnostic.CS1768.severity = error

# CS1769:
dotnet_diagnostic.CS1769.severity = error

# CS1770:
dotnet_diagnostic.CS1770.severity = error

# CS1773:
dotnet_diagnostic.CS1773.severity = error

# CS1774:
dotnet_diagnostic.CS1774.severity = error

# CS1900:
dotnet_diagnostic.CS1900.severity = error

# CS1902:
dotnet_diagnostic.CS1902.severity = error

# CS1906:
dotnet_diagnostic.CS1906.severity = error

# CS1908:
dotnet_diagnostic.CS1908.severity = error

# CS1910:
dotnet_diagnostic.CS1910.severity = error

# CS1912:
dotnet_diagnostic.CS1912.severity = error

# CS1913:
dotnet_diagnostic.CS1913.severity = error

# CS1914:
dotnet_diagnostic.CS1914.severity = error

# CS1917:
dotnet_diagnostic.CS1917.severity = error

# CS1918:
dotnet_diagnostic.CS1918.severity = error

# CS1919:
dotnet_diagnostic.CS1919.severity = error

# CS1920:
dotnet_diagnostic.CS1920.severity = error

# CS1921:
dotnet_diagnostic.CS1921.severity = error

# CS1922:
dotnet_diagnostic.CS1922.severity = error

# CS1926:
dotnet_diagnostic.CS1926.severity = error

# CS1927: Ignoring /win32manifest for module because it only applies to assemblies
dotnet_diagnostic.CS1927.severity = error

# CS1929:
dotnet_diagnostic.CS1929.severity = error

# CS1930:
dotnet_diagnostic.CS1930.severity = error

# CS1931:
dotnet_diagnostic.CS1931.severity = error

# CS1932:
dotnet_diagnostic.CS1932.severity = error

# CS1934:
dotnet_diagnostic.CS1934.severity = error

# CS1935:
dotnet_diagnostic.CS1935.severity = error

# CS1936:
dotnet_diagnostic.CS1936.severity = error

# CS1937:
dotnet_diagnostic.CS1937.severity = error

# CS1938:
dotnet_diagnostic.CS1938.severity = error

# CS1939:
dotnet_diagnostic.CS1939.severity = error

# CS1940:
dotnet_diagnostic.CS1940.severity = error

# CS1941:
dotnet_diagnostic.CS1941.severity = error

# CS1942:
dotnet_diagnostic.CS1942.severity = error

# CS1943:
dotnet_diagnostic.CS1943.severity = error

# CS1944:
dotnet_diagnostic.CS1944.severity = error

# CS1945:
dotnet_diagnostic.CS1945.severity = error

# CS1946:
dotnet_diagnostic.CS1946.severity = error

# CS1947:
dotnet_diagnostic.CS1947.severity = error

# CS1948:
dotnet_diagnostic.CS1948.severity = error

# CS1949:
dotnet_diagnostic.CS1949.severity = error

# CS1950:
dotnet_diagnostic.CS1950.severity = error

# CS1951:
dotnet_diagnostic.CS1951.severity = error

# CS1952:
dotnet_diagnostic.CS1952.severity = error

# CS1954:
dotnet_diagnostic.CS1954.severity = error

# CS1955:
dotnet_diagnostic.CS1955.severity = error

# CS1956: Member implements interface member with multiple matches at run-time
dotnet_diagnostic.CS1956.severity = error

# CS1957: Member overrides base member with multiple override candidates at run-time
dotnet_diagnostic.CS1957.severity = error

# CS1958:
dotnet_diagnostic.CS1958.severity = error

# CS1959:
dotnet_diagnostic.CS1959.severity = error

# CS1960:
dotnet_diagnostic.CS1960.severity = error

# CS1961:
dotnet_diagnostic.CS1961.severity = error

# CS1962:
dotnet_diagnostic.CS1962.severity = error

# CS1963:
dotnet_diagnostic.CS1963.severity = error

# CS1964:
dotnet_diagnostic.CS1964.severity = error

# CS1965:
dotnet_diagnostic.CS1965.severity = error

# CS1966:
dotnet_diagnostic.CS1966.severity = error

# CS1967:
dotnet_diagnostic.CS1967.severity = error

# CS1968:
dotnet_diagnostic.CS1968.severity = error

# CS1970:
dotnet_diagnostic.CS1970.severity = error

# CS1971:
dotnet_diagnostic.CS1971.severity = error

# CS1972:
dotnet_diagnostic.CS1972.severity = error

# CS1973:
dotnet_diagnostic.CS1973.severity = error

# CS1974: Dynamically dispatched call may fail at runtime because one or more applicable overloads are conditional methods
dotnet_diagnostic.CS1974.severity = error

# CS1975:
dotnet_diagnostic.CS1975.severity = error

# CS1976:
dotnet_diagnostic.CS1976.severity = error

# CS1977:
dotnet_diagnostic.CS1977.severity = error

# CS1978:
dotnet_diagnostic.CS1978.severity = error

# CS1979:
dotnet_diagnostic.CS1979.severity = error

# CS1980:
dotnet_diagnostic.CS1980.severity = error

# CS1981: Using 'is' to test compatibility with 'dynamic' is essentially identical to testing compatibility with 'Object'
dotnet_diagnostic.CS1981.severity = error

# CS1983:
dotnet_diagnostic.CS1983.severity = error

# CS1984:
dotnet_diagnostic.CS1984.severity = error

# CS1985:
dotnet_diagnostic.CS1985.severity = error

# CS1986:
dotnet_diagnostic.CS1986.severity = error

# CS1988:
dotnet_diagnostic.CS1988.severity = error

# CS1989:
dotnet_diagnostic.CS1989.severity = error

# CS1991:
dotnet_diagnostic.CS1991.severity = error

# CS1992:
dotnet_diagnostic.CS1992.severity = error

# CS1994:
dotnet_diagnostic.CS1994.severity = error

# CS1995:
dotnet_diagnostic.CS1995.severity = error

# CS1996:
dotnet_diagnostic.CS1996.severity = error

# CS1997:
dotnet_diagnostic.CS1997.severity = error

# CS1998: Async method lacks 'await' operators and will run synchronously
dotnet_diagnostic.CS1998.severity = error

# CS2001:
dotnet_diagnostic.CS2001.severity = error

# CS2002: Source file specified multiple times
dotnet_diagnostic.CS2002.severity = error

# CS2005:
dotnet_diagnostic.CS2005.severity = error

# CS2006:
dotnet_diagnostic.CS2006.severity = error

# CS2007:
dotnet_diagnostic.CS2007.severity = error

# CS2008: No source files specified
dotnet_diagnostic.CS2008.severity = error

# CS2011:
dotnet_diagnostic.CS2011.severity = error

# CS2012:
dotnet_diagnostic.CS2012.severity = error

# CS2013:
dotnet_diagnostic.CS2013.severity = error

# CS2015:
dotnet_diagnostic.CS2015.severity = error

# CS2016:
dotnet_diagnostic.CS2016.severity = error

# CS2017:
dotnet_diagnostic.CS2017.severity = error

# CS2019:
dotnet_diagnostic.CS2019.severity = error

# CS2021:
dotnet_diagnostic.CS2021.severity = error

# CS2023: Ignoring /noconfig option because it was specified in a response file
dotnet_diagnostic.CS2023.severity = error

# CS2024:
dotnet_diagnostic.CS2024.severity = error

# CS2029: Invalid name for a preprocessing symbol; not a valid identifier
dotnet_diagnostic.CS2029.severity = error

# CS2033:
dotnet_diagnostic.CS2033.severity = error

# CS2034:
dotnet_diagnostic.CS2034.severity = error

# CS2035:
dotnet_diagnostic.CS2035.severity = error

# CS2036:
dotnet_diagnostic.CS2036.severity = error

# CS2037:
dotnet_diagnostic.CS2037.severity = error

# CS2038: The language name is invalid
dotnet_diagnostic.CS2038.severity = error

# CS2039:
dotnet_diagnostic.CS2039.severity = error

# CS2040:
dotnet_diagnostic.CS2040.severity = error

# CS2041:
dotnet_diagnostic.CS2041.severity = error

# CS2042:
dotnet_diagnostic.CS2042.severity = error

# CS2043:
dotnet_diagnostic.CS2043.severity = error

# CS2044:
dotnet_diagnostic.CS2044.severity = error

# CS2045:
dotnet_diagnostic.CS2045.severity = error

# CS2046:
dotnet_diagnostic.CS2046.severity = error

# CS3000: Methods with variable arguments are not CLS-compliant
dotnet_diagnostic.CS3000.severity = error

# CS3001: Argument type is not CLS-compliant
dotnet_diagnostic.CS3001.severity = error

# CS3002: Return type is not CLS-compliant
dotnet_diagnostic.CS3002.severity = error

# CS3003: Type is not CLS-compliant
dotnet_diagnostic.CS3003.severity = error

# CS3005: Identifier differing only in case is not CLS-compliant
dotnet_diagnostic.CS3005.severity = error

# CS3006: Overloaded method differing only in ref or out, or in array rank, is not CLS-compliant
dotnet_diagnostic.CS3006.severity = error

# CS3007: Overloaded method differing only by unnamed array types is not CLS-compliant
dotnet_diagnostic.CS3007.severity = error

# CS3008: Identifier is not CLS-compliant
dotnet_diagnostic.CS3008.severity = error

# CS3009: Base type is not CLS-compliant
dotnet_diagnostic.CS3009.severity = error

# CS3010: CLS-compliant interfaces must have only CLS-compliant members
dotnet_diagnostic.CS3010.severity = error

# CS3011: Only CLS-compliant members can be abstract
dotnet_diagnostic.CS3011.severity = error

# CS3012: You must specify the CLSCompliant attribute on the assembly, not the module, to enable CLS compliance checking
dotnet_diagnostic.CS3012.severity = error

# CS3013: Added modules must be marked with the CLSCompliant attribute to match the assembly
dotnet_diagnostic.CS3013.severity = error

# CS3014: Type or member cannot be marked as CLS-compliant because the assembly does not have a CLSCompliant attribute
dotnet_diagnostic.CS3014.severity = error

# CS3015: Type has no accessible constructors which use only CLS-compliant types
dotnet_diagnostic.CS3015.severity = error

# CS3016: Arrays as attribute arguments is not CLS-compliant
dotnet_diagnostic.CS3016.severity = error

# CS3017: You cannot specify the CLSCompliant attribute on a module that differs from the CLSCompliant attribute on the assembly
dotnet_diagnostic.CS3017.severity = error

# CS3018: Type cannot be marked as CLS-compliant because it is a member of non-CLS-compliant type
dotnet_diagnostic.CS3018.severity = error

# CS3019: CLS compliance checking will not be performed because it is not visible from outside this assembly
dotnet_diagnostic.CS3019.severity = error

# CS3021: Type or member does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute
dotnet_diagnostic.CS3021.severity = error

# CS3022: CLSCompliant attribute has no meaning when applied to parameters
dotnet_diagnostic.CS3022.severity = error

# CS3023: CLSCompliant attribute has no meaning when applied to return types
dotnet_diagnostic.CS3023.severity = error

# CS3024: Constraint type is not CLS-compliant
dotnet_diagnostic.CS3024.severity = error

# CS3026: CLS-compliant field cannot be volatile
dotnet_diagnostic.CS3026.severity = error

# CS3027: Type is not CLS-compliant because base interface is not CLS-compliant
dotnet_diagnostic.CS3027.severity = error

# CS3028:
dotnet_diagnostic.CS3028.severity = error

# CS4001:
dotnet_diagnostic.CS4001.severity = error

# CS4003:
dotnet_diagnostic.CS4003.severity = error

# CS4004:
dotnet_diagnostic.CS4004.severity = error

# CS4005:
dotnet_diagnostic.CS4005.severity = error

# CS4006:
dotnet_diagnostic.CS4006.severity = error

# CS4008:
dotnet_diagnostic.CS4008.severity = error

# CS4009:
dotnet_diagnostic.CS4009.severity = error

# CS4010:
dotnet_diagnostic.CS4010.severity = error

# CS4011:
dotnet_diagnostic.CS4011.severity = error

# CS4012:
dotnet_diagnostic.CS4012.severity = error

# CS4014: Because this call is not awaited, execution of the current method continues before the call is completed
dotnet_diagnostic.CS4014.severity = error

# CS4015:
dotnet_diagnostic.CS4015.severity = error

# CS4016:
dotnet_diagnostic.CS4016.severity = error

# CS4017:
dotnet_diagnostic.CS4017.severity = error

# CS4018:
dotnet_diagnostic.CS4018.severity = error

# CS4019:
dotnet_diagnostic.CS4019.severity = error

# CS4020:
dotnet_diagnostic.CS4020.severity = error

# CS4021:
dotnet_diagnostic.CS4021.severity = error

# CS4022:
dotnet_diagnostic.CS4022.severity = error

# CS4023:
dotnet_diagnostic.CS4023.severity = error

# CS4024: The CallerLineNumberAttribute will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.CS4024.severity = error

# CS4025: The CallerFilePathAttribute will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.CS4025.severity = error

# CS4026: The CallerMemberNameAttribute will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.CS4026.severity = error

# CS4027:
dotnet_diagnostic.CS4027.severity = error

# CS4028:
dotnet_diagnostic.CS4028.severity = error

# CS4029:
dotnet_diagnostic.CS4029.severity = error

# CS4030:
dotnet_diagnostic.CS4030.severity = error

# CS4031:
dotnet_diagnostic.CS4031.severity = error

# CS4032:
dotnet_diagnostic.CS4032.severity = error

# CS4033:
dotnet_diagnostic.CS4033.severity = error

# CS4034:
dotnet_diagnostic.CS4034.severity = error

# CS4036:
dotnet_diagnostic.CS4036.severity = error

# CS7000:
dotnet_diagnostic.CS7000.severity = error

# CS7002:
dotnet_diagnostic.CS7002.severity = error

# CS7003:
dotnet_diagnostic.CS7003.severity = error

# CS7006:
dotnet_diagnostic.CS7006.severity = error

# CS7007:
dotnet_diagnostic.CS7007.severity = error

# CS7008:
dotnet_diagnostic.CS7008.severity = error

# CS7009:
dotnet_diagnostic.CS7009.severity = error

# CS7010:
dotnet_diagnostic.CS7010.severity = error

# CS7011:
dotnet_diagnostic.CS7011.severity = error

# CS7012:
dotnet_diagnostic.CS7012.severity = error

# CS7013:
dotnet_diagnostic.CS7013.severity = error

# CS7014:
dotnet_diagnostic.CS7014.severity = error

# CS7015:
dotnet_diagnostic.CS7015.severity = error

# CS7016:
dotnet_diagnostic.CS7016.severity = error

# CS7017:
dotnet_diagnostic.CS7017.severity = error

# CS7018:
dotnet_diagnostic.CS7018.severity = error

# CS7019:
dotnet_diagnostic.CS7019.severity = error

# CS7020:
dotnet_diagnostic.CS7020.severity = error

# CS7021:
dotnet_diagnostic.CS7021.severity = error

# CS7023: The second operand of an 'is' or 'as' operator may not be a static type
dotnet_diagnostic.CS7023.severity = error

# CS7024:
dotnet_diagnostic.CS7024.severity = error

# CS7025:
dotnet_diagnostic.CS7025.severity = error

# CS7026:
dotnet_diagnostic.CS7026.severity = error

# CS7027:
dotnet_diagnostic.CS7027.severity = error

# CS7028:
dotnet_diagnostic.CS7028.severity = error

# CS7029:
dotnet_diagnostic.CS7029.severity = error

# CS7030:
dotnet_diagnostic.CS7030.severity = error

# CS7032:
dotnet_diagnostic.CS7032.severity = error

# CS7033: Delay signing was specified and requires a public key, but no public key was specified
dotnet_diagnostic.CS7033.severity = error

# CS7034:
dotnet_diagnostic.CS7034.severity = error

# CS7035: The specified version string does not conform to the recommended format - major.minor.build.revision
dotnet_diagnostic.CS7035.severity = error

# CS7036:
dotnet_diagnostic.CS7036.severity = error

# CS7041:
dotnet_diagnostic.CS7041.severity = error

# CS7042:
dotnet_diagnostic.CS7042.severity = error

# CS7043:
dotnet_diagnostic.CS7043.severity = error

# CS7045:
dotnet_diagnostic.CS7045.severity = error

# CS7046:
dotnet_diagnostic.CS7046.severity = error

# CS7047:
dotnet_diagnostic.CS7047.severity = error

# CS7048:
dotnet_diagnostic.CS7048.severity = error

# CS7049:
dotnet_diagnostic.CS7049.severity = error

# CS7050:
dotnet_diagnostic.CS7050.severity = error

# CS7051:
dotnet_diagnostic.CS7051.severity = error

# CS7052:
dotnet_diagnostic.CS7052.severity = error

# CS7053:
dotnet_diagnostic.CS7053.severity = error

# CS7054:
dotnet_diagnostic.CS7054.severity = error

# CS7055:
dotnet_diagnostic.CS7055.severity = error

# CS7056:
dotnet_diagnostic.CS7056.severity = error

# CS7057:
dotnet_diagnostic.CS7057.severity = error

# CS7058:
dotnet_diagnostic.CS7058.severity = error

# CS7059:
dotnet_diagnostic.CS7059.severity = error

# CS7061:
dotnet_diagnostic.CS7061.severity = error

# CS7064:
dotnet_diagnostic.CS7064.severity = error

# CS7065:
dotnet_diagnostic.CS7065.severity = error

# CS7067:
dotnet_diagnostic.CS7067.severity = error

# CS7068:
dotnet_diagnostic.CS7068.severity = error

# CS7069:
dotnet_diagnostic.CS7069.severity = error

# CS7070:
dotnet_diagnostic.CS7070.severity = error

# CS7071:
dotnet_diagnostic.CS7071.severity = error

# CS7079:
dotnet_diagnostic.CS7079.severity = error

# CS7080: The CallerMemberNameAttribute will have no effect; it is overridden by the CallerFilePathAttribute
dotnet_diagnostic.CS7080.severity = error

# CS7081: The CallerMemberNameAttribute will have no effect; it is overridden by the CallerLineNumberAttribute
dotnet_diagnostic.CS7081.severity = error

# CS7082: The CallerFilePathAttribute will have no effect; it is overridden by the CallerLineNumberAttribute
dotnet_diagnostic.CS7082.severity = error

# CS7083:
dotnet_diagnostic.CS7083.severity = error

# CS7084:
dotnet_diagnostic.CS7084.severity = error

# CS7086:
dotnet_diagnostic.CS7086.severity = error

# CS7087:
dotnet_diagnostic.CS7087.severity = error

# CS7088:
dotnet_diagnostic.CS7088.severity = error

# CS7089:
dotnet_diagnostic.CS7089.severity = error

# CS7090: Attribute will be ignored in favor of the instance appearing in source
dotnet_diagnostic.CS7090.severity = error

# CS7091:
dotnet_diagnostic.CS7091.severity = error

# CS7092:
dotnet_diagnostic.CS7092.severity = error

# CS7093:
dotnet_diagnostic.CS7093.severity = error

# CS7094:
dotnet_diagnostic.CS7094.severity = error

# CS7095: Filter expression is a constant 'true'
dotnet_diagnostic.CS7095.severity = error

# CS7096:
dotnet_diagnostic.CS7096.severity = error

# CS7098:
dotnet_diagnostic.CS7098.severity = error

# CS7099:
dotnet_diagnostic.CS7099.severity = error

# CS7100:
dotnet_diagnostic.CS7100.severity = error

# CS7101:
dotnet_diagnostic.CS7101.severity = error

# CS7102:
dotnet_diagnostic.CS7102.severity = error

# CS7103:
dotnet_diagnostic.CS7103.severity = error

# CS8001: Command line switch is not yet implemented
dotnet_diagnostic.CS8001.severity = error

# CS8002: Referenced assembly does not have a strong name
dotnet_diagnostic.CS8002.severity = error

# CS8003:
dotnet_diagnostic.CS8003.severity = error

# CS8007:
dotnet_diagnostic.CS8007.severity = error

# CS8009: Referenced assembly has different culture setting
dotnet_diagnostic.CS8009.severity = error

# CS8010:
dotnet_diagnostic.CS8010.severity = error

# CS8011:
dotnet_diagnostic.CS8011.severity = error

# CS8012: Referenced assembly targets a different processor
dotnet_diagnostic.CS8012.severity = error

# CS8013:
dotnet_diagnostic.CS8013.severity = error

# CS8014:
dotnet_diagnostic.CS8014.severity = error

# CS8015:
dotnet_diagnostic.CS8015.severity = error

# CS8016:
dotnet_diagnostic.CS8016.severity = error

# CS8017:
dotnet_diagnostic.CS8017.severity = error

# CS8018: Within cref attributes, nested types of generic types should be qualified
dotnet_diagnostic.CS8018.severity = error

# CS8019: Unnecessary using directive
dotnet_diagnostic.CS8019.severity = none

# CS8020: Unused extern alias
dotnet_diagnostic.CS8020.severity = error

# CS8021: No value for RuntimeMetadataVersion found
dotnet_diagnostic.CS8021.severity = error

# CS8022:
dotnet_diagnostic.CS8022.severity = error

# CS8023:
dotnet_diagnostic.CS8023.severity = error

# CS8024:
dotnet_diagnostic.CS8024.severity = error

# CS8025:
dotnet_diagnostic.CS8025.severity = error

# CS8026:
dotnet_diagnostic.CS8026.severity = error

# CS8027:
dotnet_diagnostic.CS8027.severity = error

# CS8028:
dotnet_diagnostic.CS8028.severity = error

# CS8029: Local name is too long for PDB
dotnet_diagnostic.CS8029.severity = error

# CS8030:
dotnet_diagnostic.CS8030.severity = error

# CS8031:
dotnet_diagnostic.CS8031.severity = error

# CS8032: An analyzer instance cannot be created
dotnet_diagnostic.CS8032.severity = error

# CS8033: Assembly does not contain any analyzers
dotnet_diagnostic.CS8033.severity = error

# CS8034: Unable to load Analyzer assembly
dotnet_diagnostic.CS8034.severity = error

# CS8035:
dotnet_diagnostic.CS8035.severity = error

# CS8036:
dotnet_diagnostic.CS8036.severity = error

# CS8040: Skip loading types in analyzer assembly that fail due to a ReflectionTypeLoadException
dotnet_diagnostic.CS8040.severity = error

# CS8050:
dotnet_diagnostic.CS8050.severity = error

# CS8051:
dotnet_diagnostic.CS8051.severity = error

# CS8053:
dotnet_diagnostic.CS8053.severity = error

# CS8054:
dotnet_diagnostic.CS8054.severity = error

# CS8055:
dotnet_diagnostic.CS8055.severity = error

# CS8057:
dotnet_diagnostic.CS8057.severity = error

# CS8058:
dotnet_diagnostic.CS8058.severity = error

# CS8059:
dotnet_diagnostic.CS8059.severity = error

# CS8070:
dotnet_diagnostic.CS8070.severity = error

# CS8072:
dotnet_diagnostic.CS8072.severity = error

# CS8073: The result of the expression is always the same since a value of this type is never equal to 'null'
dotnet_diagnostic.CS8073.severity = error

# CS8074:
dotnet_diagnostic.CS8074.severity = error

# CS8075:
dotnet_diagnostic.CS8075.severity = error

# CS8076:
dotnet_diagnostic.CS8076.severity = error

# CS8079:
dotnet_diagnostic.CS8079.severity = error

# CS8080:
dotnet_diagnostic.CS8080.severity = error

# CS8081:
dotnet_diagnostic.CS8081.severity = error

# CS8082:
dotnet_diagnostic.CS8082.severity = error

# CS8083:
dotnet_diagnostic.CS8083.severity = error

# CS8084:
dotnet_diagnostic.CS8084.severity = error

# CS8085:
dotnet_diagnostic.CS8085.severity = error

# CS8086:
dotnet_diagnostic.CS8086.severity = error

# CS8087:
dotnet_diagnostic.CS8087.severity = error

# CS8088:
dotnet_diagnostic.CS8088.severity = error

# CS8089:
dotnet_diagnostic.CS8089.severity = error

# CS8090:
dotnet_diagnostic.CS8090.severity = error

# CS8091:
dotnet_diagnostic.CS8091.severity = error

# CS8092:
dotnet_diagnostic.CS8092.severity = error

# CS8093:
dotnet_diagnostic.CS8093.severity = error

# CS8094: Alignment value has a magnitude that may result in a large formatted string
dotnet_diagnostic.CS8094.severity = error

# CS8095:
dotnet_diagnostic.CS8095.severity = error

# CS8096:
dotnet_diagnostic.CS8096.severity = error

# CS8097:
dotnet_diagnostic.CS8097.severity = error

# CS8098:
dotnet_diagnostic.CS8098.severity = error

# CS8099:
dotnet_diagnostic.CS8099.severity = error

# CS8100:
dotnet_diagnostic.CS8100.severity = error

# CS8101:
dotnet_diagnostic.CS8101.severity = error

# CS8102:
dotnet_diagnostic.CS8102.severity = error

# CS8103:
dotnet_diagnostic.CS8103.severity = error

# CS8104:
dotnet_diagnostic.CS8104.severity = error

# CS8105: Attribute is ignored when public signing is specified.
dotnet_diagnostic.CS8105.severity = error

# CS8106:
dotnet_diagnostic.CS8106.severity = error

# CS8107:
dotnet_diagnostic.CS8107.severity = error

# CS8108:
dotnet_diagnostic.CS8108.severity = error

# CS8110:
dotnet_diagnostic.CS8110.severity = error

# CS8111:
dotnet_diagnostic.CS8111.severity = error

# CS8112:
dotnet_diagnostic.CS8112.severity = error

# CS8113:
dotnet_diagnostic.CS8113.severity = error

# CS8115:
dotnet_diagnostic.CS8115.severity = error

# CS8116:
dotnet_diagnostic.CS8116.severity = error

# CS8117:
dotnet_diagnostic.CS8117.severity = error

# CS8119:
dotnet_diagnostic.CS8119.severity = error

# CS8120:
dotnet_diagnostic.CS8120.severity = error

# CS8121:
dotnet_diagnostic.CS8121.severity = error

# CS8122:
dotnet_diagnostic.CS8122.severity = error

# CS8123: The tuple element name is ignored because a different name or no name is specified by the assignment target.
dotnet_diagnostic.CS8123.severity = error

# CS8124:
dotnet_diagnostic.CS8124.severity = error

# CS8125:
dotnet_diagnostic.CS8125.severity = error

# CS8126:
dotnet_diagnostic.CS8126.severity = error

# CS8127:
dotnet_diagnostic.CS8127.severity = error

# CS8128:
dotnet_diagnostic.CS8128.severity = error

# CS8129:
dotnet_diagnostic.CS8129.severity = error

# CS8130:
dotnet_diagnostic.CS8130.severity = error

# CS8131:
dotnet_diagnostic.CS8131.severity = error

# CS8132:
dotnet_diagnostic.CS8132.severity = error

# CS8133:
dotnet_diagnostic.CS8133.severity = error

# CS8134:
dotnet_diagnostic.CS8134.severity = error

# CS8135:
dotnet_diagnostic.CS8135.severity = error

# CS8136:
dotnet_diagnostic.CS8136.severity = error

# CS8137:
dotnet_diagnostic.CS8137.severity = error

# CS8138:
dotnet_diagnostic.CS8138.severity = error

# CS8139:
dotnet_diagnostic.CS8139.severity = error

# CS8140:
dotnet_diagnostic.CS8140.severity = error

# CS8141:
dotnet_diagnostic.CS8141.severity = error

# CS8142:
dotnet_diagnostic.CS8142.severity = error

# CS8143:
dotnet_diagnostic.CS8143.severity = error

# CS8144:
dotnet_diagnostic.CS8144.severity = error

# CS8145:
dotnet_diagnostic.CS8145.severity = error

# CS8146:
dotnet_diagnostic.CS8146.severity = error

# CS8147:
dotnet_diagnostic.CS8147.severity = error

# CS8148:
dotnet_diagnostic.CS8148.severity = error

# CS8149:
dotnet_diagnostic.CS8149.severity = error

# CS8150:
dotnet_diagnostic.CS8150.severity = error

# CS8151:
dotnet_diagnostic.CS8151.severity = error

# CS8152:
dotnet_diagnostic.CS8152.severity = error

# CS8153:
dotnet_diagnostic.CS8153.severity = error

# CS8154:
dotnet_diagnostic.CS8154.severity = error

# CS8155:
dotnet_diagnostic.CS8155.severity = error

# CS8156:
dotnet_diagnostic.CS8156.severity = error

# CS8157:
dotnet_diagnostic.CS8157.severity = error

# CS8158:
dotnet_diagnostic.CS8158.severity = error

# CS8159:
dotnet_diagnostic.CS8159.severity = error

# CS8160:
dotnet_diagnostic.CS8160.severity = error

# CS8161:
dotnet_diagnostic.CS8161.severity = error

# CS8162:
dotnet_diagnostic.CS8162.severity = error

# CS8163:
dotnet_diagnostic.CS8163.severity = error

# CS8166:
dotnet_diagnostic.CS8166.severity = error

# CS8167:
dotnet_diagnostic.CS8167.severity = error

# CS8168:
dotnet_diagnostic.CS8168.severity = error

# CS8169:
dotnet_diagnostic.CS8169.severity = error

# CS8170:
dotnet_diagnostic.CS8170.severity = error

# CS8171:
dotnet_diagnostic.CS8171.severity = error

# CS8172:
dotnet_diagnostic.CS8172.severity = error

# CS8173:
dotnet_diagnostic.CS8173.severity = error

# CS8174:
dotnet_diagnostic.CS8174.severity = error

# CS8175:
dotnet_diagnostic.CS8175.severity = error

# CS8176:
dotnet_diagnostic.CS8176.severity = error

# CS8177:
dotnet_diagnostic.CS8177.severity = error

# CS8179:
dotnet_diagnostic.CS8179.severity = error

# CS8180:
dotnet_diagnostic.CS8180.severity = error

# CS8181:
dotnet_diagnostic.CS8181.severity = error

# CS8182:
dotnet_diagnostic.CS8182.severity = error

# CS8183:
dotnet_diagnostic.CS8183.severity = error

# CS8185:
dotnet_diagnostic.CS8185.severity = error

# CS8186:
dotnet_diagnostic.CS8186.severity = error

# CS8187:
dotnet_diagnostic.CS8187.severity = error

# CS8188:
dotnet_diagnostic.CS8188.severity = error

# CS8189:
dotnet_diagnostic.CS8189.severity = error

# CS8190:
dotnet_diagnostic.CS8190.severity = error

# CS8191:
dotnet_diagnostic.CS8191.severity = error

# CS8192:
dotnet_diagnostic.CS8192.severity = error

# CS8196:
dotnet_diagnostic.CS8196.severity = error

# CS8197:
dotnet_diagnostic.CS8197.severity = error

# CS8198:
dotnet_diagnostic.CS8198.severity = error

# CS8199:
dotnet_diagnostic.CS8199.severity = error

# CS8202:
dotnet_diagnostic.CS8202.severity = error

# CS8203:
dotnet_diagnostic.CS8203.severity = error

# CS8204:
dotnet_diagnostic.CS8204.severity = error

# CS8206:
dotnet_diagnostic.CS8206.severity = error

# CS8207:
dotnet_diagnostic.CS8207.severity = error

# CS8208:
dotnet_diagnostic.CS8208.severity = error

# CS8209:
dotnet_diagnostic.CS8209.severity = error

# CS8210:
dotnet_diagnostic.CS8210.severity = error

# CS8300:
dotnet_diagnostic.CS8300.severity = error

# CS8301:
dotnet_diagnostic.CS8301.severity = error

# CS8302:
dotnet_diagnostic.CS8302.severity = error

# CS8303:
dotnet_diagnostic.CS8303.severity = error

# CS8304:
dotnet_diagnostic.CS8304.severity = error

# CS8305: Type is for evaluation purposes only and is subject to change or removal in future updates.
dotnet_diagnostic.CS8305.severity = error

# CS8306:
dotnet_diagnostic.CS8306.severity = error

# CS8307:
dotnet_diagnostic.CS8307.severity = error

# CS8308:
dotnet_diagnostic.CS8308.severity = error

# CS8309:
dotnet_diagnostic.CS8309.severity = error

# CS8310:
dotnet_diagnostic.CS8310.severity = error

# CS8312:
dotnet_diagnostic.CS8312.severity = error

# CS8314:
dotnet_diagnostic.CS8314.severity = error

# CS8315:
dotnet_diagnostic.CS8315.severity = error

# CS8320:
dotnet_diagnostic.CS8320.severity = error

# CS8321: Local function is declared but never used
dotnet_diagnostic.CS8321.severity = error

# CS8322:
dotnet_diagnostic.CS8322.severity = error

# CS8323:
dotnet_diagnostic.CS8323.severity = error

# CS8324:
dotnet_diagnostic.CS8324.severity = error

# CS8325:
dotnet_diagnostic.CS8325.severity = error

# CS8326:
dotnet_diagnostic.CS8326.severity = error

# CS8327:
dotnet_diagnostic.CS8327.severity = error

# CS8328:
dotnet_diagnostic.CS8328.severity = error

# CS8329:
dotnet_diagnostic.CS8329.severity = error

# CS8330:
dotnet_diagnostic.CS8330.severity = error

# CS8331:
dotnet_diagnostic.CS8331.severity = error

# CS8332:
dotnet_diagnostic.CS8332.severity = error

# CS8333:
dotnet_diagnostic.CS8333.severity = error

# CS8334:
dotnet_diagnostic.CS8334.severity = error

# CS8335:
dotnet_diagnostic.CS8335.severity = error

# CS8336:
dotnet_diagnostic.CS8336.severity = error

# CS8337:
dotnet_diagnostic.CS8337.severity = error

# CS8338:
dotnet_diagnostic.CS8338.severity = error

# CS8340:
dotnet_diagnostic.CS8340.severity = error

# CS8341:
dotnet_diagnostic.CS8341.severity = error

# CS8342:
dotnet_diagnostic.CS8342.severity = error

# CS8343:
dotnet_diagnostic.CS8343.severity = error

# CS8344:
dotnet_diagnostic.CS8344.severity = error

# CS8345:
dotnet_diagnostic.CS8345.severity = error

# CS8346:
dotnet_diagnostic.CS8346.severity = error

# CS8347:
dotnet_diagnostic.CS8347.severity = error

# CS8348:
dotnet_diagnostic.CS8348.severity = error

# CS8349:
dotnet_diagnostic.CS8349.severity = error

# CS8350:
dotnet_diagnostic.CS8350.severity = error

# CS8351:
dotnet_diagnostic.CS8351.severity = error

# CS8352:
dotnet_diagnostic.CS8352.severity = error

# CS8353:
dotnet_diagnostic.CS8353.severity = error

# CS8354:
dotnet_diagnostic.CS8354.severity = error

# CS8355:
dotnet_diagnostic.CS8355.severity = error

# CS8356:
dotnet_diagnostic.CS8356.severity = error

# CS8357:
dotnet_diagnostic.CS8357.severity = error

# CS8358:
dotnet_diagnostic.CS8358.severity = error

# CS8359: Filter expression is a constant 'false'
dotnet_diagnostic.CS8359.severity = error

# CS8360: Filter expression is a constant 'false'.
dotnet_diagnostic.CS8360.severity = error

# CS8361:
dotnet_diagnostic.CS8361.severity = error

# CS8362:
dotnet_diagnostic.CS8362.severity = error

# CS8364:
dotnet_diagnostic.CS8364.severity = error

# CS8370:
dotnet_diagnostic.CS8370.severity = error

# CS8371: Field-targeted attributes on auto-properties are not supported in this version of the language.
dotnet_diagnostic.CS8371.severity = error

# CS8372:
dotnet_diagnostic.CS8372.severity = error

# CS8373:
dotnet_diagnostic.CS8373.severity = error

# CS8374:
dotnet_diagnostic.CS8374.severity = error

# CS8375:
dotnet_diagnostic.CS8375.severity = error

# CS8377:
dotnet_diagnostic.CS8377.severity = error

# CS8378:
dotnet_diagnostic.CS8378.severity = error

# CS8379:
dotnet_diagnostic.CS8379.severity = error

# CS8380:
dotnet_diagnostic.CS8380.severity = error

# CS8381:
dotnet_diagnostic.CS8381.severity = error

# CS8382:
dotnet_diagnostic.CS8382.severity = error

# CS8383: The tuple element name is ignored because a different name or no name is specified on the other side of the tuple == or != operator.
dotnet_diagnostic.CS8383.severity = error

# CS8384:
dotnet_diagnostic.CS8384.severity = error

# CS8385:
dotnet_diagnostic.CS8385.severity = error

# CS8386:
dotnet_diagnostic.CS8386.severity = error

# CS8387: Type parameter has the same type as the type parameter from outer method.
dotnet_diagnostic.CS8387.severity = error

# CS8388:
dotnet_diagnostic.CS8388.severity = error

# CS8389:
dotnet_diagnostic.CS8389.severity = error

# CS8400:
dotnet_diagnostic.CS8400.severity = error

# CS8401:
dotnet_diagnostic.CS8401.severity = error

# CS8403:
dotnet_diagnostic.CS8403.severity = error

# CS8410:
dotnet_diagnostic.CS8410.severity = error

# CS8411:
dotnet_diagnostic.CS8411.severity = error

# CS8412:
dotnet_diagnostic.CS8412.severity = error

# CS8413:
dotnet_diagnostic.CS8413.severity = error

# CS8414:
dotnet_diagnostic.CS8414.severity = error

# CS8415:
dotnet_diagnostic.CS8415.severity = error

# CS8416:
dotnet_diagnostic.CS8416.severity = error

# CS8417:
dotnet_diagnostic.CS8417.severity = error

# CS8418:
dotnet_diagnostic.CS8418.severity = error

# CS8419:
dotnet_diagnostic.CS8419.severity = error

# CS8420:
dotnet_diagnostic.CS8420.severity = error

# CS8421:
dotnet_diagnostic.CS8421.severity = error

# CS8422:
dotnet_diagnostic.CS8422.severity = error

# CS8423:
dotnet_diagnostic.CS8423.severity = error

# CS8424: The EnumeratorCancellationAttribute will have no effect. The attribute is only effective on a parameter of type CancellationToken in an async-iterator method returning IAsyncEnumerable
dotnet_diagnostic.CS8424.severity = error

# CS8425: Async-iterator member has one or more parameters of type 'CancellationToken' but none of them is decorated with the 'EnumeratorCancellation' attribute, so the cancellation token parameter from the generated 'IAsyncEnumerable<>.GetAsyncEnumerator' will be unconsumed
dotnet_diagnostic.CS8425.severity = error

# CS8426:
dotnet_diagnostic.CS8426.severity = error

# CS8427:
dotnet_diagnostic.CS8427.severity = error

# CS8428:
dotnet_diagnostic.CS8428.severity = error

# CS8429:
dotnet_diagnostic.CS8429.severity = error

# CS8500: This takes the address of, gets the size of, or declares a pointer to a managed type
dotnet_diagnostic.CS8500.severity = error

# CS8502:
dotnet_diagnostic.CS8502.severity = error

# CS8503:
dotnet_diagnostic.CS8503.severity = error

# CS8504:
dotnet_diagnostic.CS8504.severity = error

# CS8505:
dotnet_diagnostic.CS8505.severity = error

# CS8506:
dotnet_diagnostic.CS8506.severity = error

# CS8508:
dotnet_diagnostic.CS8508.severity = error

# CS8509: The switch expression does not handle all possible values of its input type (it is not exhaustive).
dotnet_diagnostic.CS8509.severity = error

# CS8510:
dotnet_diagnostic.CS8510.severity = error

# CS8511:
dotnet_diagnostic.CS8511.severity = error

# CS8512: Do not use '_' for a case constant.
dotnet_diagnostic.CS8512.severity = error

# CS8513: Do not use '_' to refer to the type in an is-type expression.
dotnet_diagnostic.CS8513.severity = error

# CS8514:
dotnet_diagnostic.CS8514.severity = error

# CS8515:
dotnet_diagnostic.CS8515.severity = error

# CS8516:
dotnet_diagnostic.CS8516.severity = error

# CS8517:
dotnet_diagnostic.CS8517.severity = error

# CS8518:
dotnet_diagnostic.CS8518.severity = error

# CS8519: The given expression never matches the provided pattern.
dotnet_diagnostic.CS8519.severity = error

# CS8520: The given expression always matches the provided constant.
dotnet_diagnostic.CS8520.severity = error

# CS8521:
dotnet_diagnostic.CS8521.severity = error

# CS8522:
dotnet_diagnostic.CS8522.severity = error

# CS8523:
dotnet_diagnostic.CS8523.severity = error

# CS8524: The switch expression does not handle some values of its input type (it is not exhaustive) involving an unnamed enum value.
dotnet_diagnostic.CS8524.severity = error

# CS8597: Thrown value may be null.
dotnet_diagnostic.CS8597.severity = error

# CS8598:
dotnet_diagnostic.CS8598.severity = error

# CS8600: Converting null literal or possible null value to non-nullable type.
dotnet_diagnostic.CS8600.severity = error

# CS8601: Possible null reference assignment.
dotnet_diagnostic.CS8601.severity = error

# CS8602: Dereference of a possibly null reference.
dotnet_diagnostic.CS8602.severity = error

# CS8603: Possible null reference return.
dotnet_diagnostic.CS8603.severity = error

# CS8604: Possible null reference argument.
dotnet_diagnostic.CS8604.severity = error

# CS8605: Unboxing a possibly null value.
dotnet_diagnostic.CS8605.severity = error

# CS8607: A possible null value may not be used for a type marked with [NotNull] or [DisallowNull]
dotnet_diagnostic.CS8607.severity = error

# CS8608: Nullability of reference types in type doesn't match overridden member.
dotnet_diagnostic.CS8608.severity = error

# CS8609: Nullability of reference types in return type doesn't match overridden member.
dotnet_diagnostic.CS8609.severity = error

# CS8610: Nullability of reference types in type of parameter doesn't match overridden member.
dotnet_diagnostic.CS8610.severity = error

# CS8611: Nullability of reference types in type of parameter doesn't match partial method declaration.
dotnet_diagnostic.CS8611.severity = error

# CS8612: Nullability of reference types in type doesn't match implicitly implemented member.
dotnet_diagnostic.CS8612.severity = error

# CS8613: Nullability of reference types in return type doesn't match implicitly implemented member.
dotnet_diagnostic.CS8613.severity = error

# CS8614: Nullability of reference types in type of parameter doesn't match implicitly implemented member.
dotnet_diagnostic.CS8614.severity = error

# CS8615: Nullability of reference types in type doesn't match implemented member.
dotnet_diagnostic.CS8615.severity = error

# CS8616: Nullability of reference types in return type doesn't match implemented member.
dotnet_diagnostic.CS8616.severity = error

# CS8617: Nullability of reference types in type of parameter doesn't match implemented member.
dotnet_diagnostic.CS8617.severity = error

# CS8618: Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.
dotnet_diagnostic.CS8618.severity = error

# CS8619: Nullability of reference types in value doesn't match target type.
dotnet_diagnostic.CS8619.severity = error

# CS8620: Argument cannot be used for parameter due to differences in the nullability of reference types.
dotnet_diagnostic.CS8620.severity = error

# CS8621: Nullability of reference types in return type doesn't match the target delegate (possibly because of nullability attributes).
dotnet_diagnostic.CS8621.severity = error

# CS8622: Nullability of reference types in type of parameter doesn't match the target delegate (possibly because of nullability attributes).
dotnet_diagnostic.CS8622.severity = error

# CS8623:
dotnet_diagnostic.CS8623.severity = error

# CS8624: Argument cannot be used as an output for parameter due to differences in the nullability of reference types.
dotnet_diagnostic.CS8624.severity = error

# CS8625: Cannot convert null literal to non-nullable reference type.
dotnet_diagnostic.CS8625.severity = error

# CS8627:
dotnet_diagnostic.CS8627.severity = error

# CS8628:
dotnet_diagnostic.CS8628.severity = error

# CS8629: Nullable value type may be null.
dotnet_diagnostic.CS8629.severity = error

# CS8630:
dotnet_diagnostic.CS8630.severity = error

# CS8631: The type cannot be used as type parameter in the generic type or method. Nullability of type argument doesn't match constraint type.
dotnet_diagnostic.CS8631.severity = error

# CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.CS8632.severity = error

# CS8633: Nullability in constraints for type parameter doesn't match the constraints for type parameter in implicitly implemented interface method'.
dotnet_diagnostic.CS8633.severity = error

# CS8634: The type cannot be used as type parameter in the generic type or method. Nullability of type argument doesn't match 'class' constraint.
dotnet_diagnostic.CS8634.severity = error

# CS8635:
dotnet_diagnostic.CS8635.severity = error

# CS8636:
dotnet_diagnostic.CS8636.severity = error

# CS8637:
dotnet_diagnostic.CS8637.severity = error

# CS8639:
dotnet_diagnostic.CS8639.severity = error

# CS8640:
dotnet_diagnostic.CS8640.severity = error

# CS8641:
dotnet_diagnostic.CS8641.severity = error

# CS8642:
dotnet_diagnostic.CS8642.severity = error

# CS8643: Nullability of reference types in explicit interface specifier doesn't match interface implemented by the type.
dotnet_diagnostic.CS8643.severity = error

# CS8644: Type does not implement interface member. Nullability of reference types in interface implemented by the base type doesn't match.
dotnet_diagnostic.CS8644.severity = error

# CS8645: Interface is already listed in the interface list with different nullability of reference types.
dotnet_diagnostic.CS8645.severity = error

# CS8646:
dotnet_diagnostic.CS8646.severity = error

# CS8647:
dotnet_diagnostic.CS8647.severity = error

# CS8648:
dotnet_diagnostic.CS8648.severity = error

# CS8649:
dotnet_diagnostic.CS8649.severity = error

# CS8650:
dotnet_diagnostic.CS8650.severity = error

# CS8651:
dotnet_diagnostic.CS8651.severity = error

# CS8652:
dotnet_diagnostic.CS8652.severity = error

# CS8655: The switch expression does not handle some null inputs.
dotnet_diagnostic.CS8655.severity = error

# CS8656: Call to non-readonly member from a 'readonly' member results in an implicit copy.
dotnet_diagnostic.CS8656.severity = error

# CS8657:
dotnet_diagnostic.CS8657.severity = error

# CS8658:
dotnet_diagnostic.CS8658.severity = error

# CS8659:
dotnet_diagnostic.CS8659.severity = error

# CS8660:
dotnet_diagnostic.CS8660.severity = error

# CS8661:
dotnet_diagnostic.CS8661.severity = error

# CS8662:
dotnet_diagnostic.CS8662.severity = error

# CS8663:
dotnet_diagnostic.CS8663.severity = error

# CS8664:
dotnet_diagnostic.CS8664.severity = error

# CS8665:
dotnet_diagnostic.CS8665.severity = error

# CS8666:
dotnet_diagnostic.CS8666.severity = error

# CS8667: Partial method declarations have inconsistent nullability in constraints for type parameter
dotnet_diagnostic.CS8667.severity = error

# CS8668:
dotnet_diagnostic.CS8668.severity = error

# CS8669: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.
dotnet_diagnostic.CS8669.severity = error

# CS8670: Object or collection initializer implicitly dereferences possibly null member.
dotnet_diagnostic.CS8670.severity = error

# CS8700:
dotnet_diagnostic.CS8700.severity = error

# CS8701:
dotnet_diagnostic.CS8701.severity = error

# CS8702:
dotnet_diagnostic.CS8702.severity = error

# CS8703:
dotnet_diagnostic.CS8703.severity = error

# CS8704:
dotnet_diagnostic.CS8704.severity = error

# CS8705:
dotnet_diagnostic.CS8705.severity = error

# CS8706:
dotnet_diagnostic.CS8706.severity = error

# CS8707:
dotnet_diagnostic.CS8707.severity = error

# CS8711:
dotnet_diagnostic.CS8711.severity = error

# CS8712:
dotnet_diagnostic.CS8712.severity = error

# CS8714: The type cannot be used as type parameter in the generic type or method. Nullability of type argument doesn't match 'notnull' constraint.
dotnet_diagnostic.CS8714.severity = error

# CS8715:
dotnet_diagnostic.CS8715.severity = error

# CS8716:
dotnet_diagnostic.CS8716.severity = error

# CS8750:
dotnet_diagnostic.CS8750.severity = error

# CS8751:
dotnet_diagnostic.CS8751.severity = error

# CS8752:
dotnet_diagnostic.CS8752.severity = error

# CS8753:
dotnet_diagnostic.CS8753.severity = error

# CS8754:
dotnet_diagnostic.CS8754.severity = error

# CS8755:
dotnet_diagnostic.CS8755.severity = error

# CS8756:
dotnet_diagnostic.CS8756.severity = error

# CS8757:
dotnet_diagnostic.CS8757.severity = error

# CS8758:
dotnet_diagnostic.CS8758.severity = error

# CS8759:
dotnet_diagnostic.CS8759.severity = error

# CS8760:
dotnet_diagnostic.CS8760.severity = error

# CS8761:
dotnet_diagnostic.CS8761.severity = error

# CS8762: Parameter must have a non-null value when exiting in some condition.
dotnet_diagnostic.CS8762.severity = error

# CS8763: A method marked [DoesNotReturn] should not return.
dotnet_diagnostic.CS8763.severity = error

# CS8764: Nullability of return type doesn't match overridden member (possibly because of nullability attributes).
dotnet_diagnostic.CS8764.severity = error

# CS8765: Nullability of type of parameter doesn't match overridden member (possibly because of nullability attributes).
dotnet_diagnostic.CS8765.severity = error

# CS8766: Nullability of reference types in return type doesn't match implicitly implemented member (possibly because of nullability attributes).
dotnet_diagnostic.CS8766.severity = error

# CS8767: Nullability of reference types in type of parameter doesn't match implicitly implemented member (possibly because of nullability attributes).
dotnet_diagnostic.CS8767.severity = error

# CS8768: Nullability of reference types in return type doesn't match implemented member (possibly because of nullability attributes).
dotnet_diagnostic.CS8768.severity = error

# CS8769: Nullability of reference types in type of parameter doesn't match implemented member (possibly because of nullability attributes).
dotnet_diagnostic.CS8769.severity = error

# CS8770: Method lacks `[DoesNotReturn]` annotation to match implemented or overridden member.
dotnet_diagnostic.CS8770.severity = error

# CS8771:
dotnet_diagnostic.CS8771.severity = error

# CS8772:
dotnet_diagnostic.CS8772.severity = error

# CS8773:
dotnet_diagnostic.CS8773.severity = error

# CS8774: Member must have a non-null value when exiting.
dotnet_diagnostic.CS8774.severity = error

# CS8775: Member must have a non-null value when exiting in some condition.
dotnet_diagnostic.CS8775.severity = error

# CS8776: Member cannot be used in this attribute.
dotnet_diagnostic.CS8776.severity = error

# CS8777: Parameter must have a non-null value when exiting.
dotnet_diagnostic.CS8777.severity = error

# CS8778: Constant value may overflow at runtime (use 'unchecked' syntax to override)
dotnet_diagnostic.CS8778.severity = error

# CS8779:
dotnet_diagnostic.CS8779.severity = error

# CS8780:
dotnet_diagnostic.CS8780.severity = error

# CS8781:
dotnet_diagnostic.CS8781.severity = error

# CS8782:
dotnet_diagnostic.CS8782.severity = error

# CS8783:
dotnet_diagnostic.CS8783.severity = error

# CS8784: Generator failed to initialize.
dotnet_diagnostic.CS8784.severity = error

# CS8785: Generator failed to generate source.
dotnet_diagnostic.CS8785.severity = error

# CS8786:
dotnet_diagnostic.CS8786.severity = error

# CS8787:
dotnet_diagnostic.CS8787.severity = error

# CS8788:
dotnet_diagnostic.CS8788.severity = error

# CS8789:
dotnet_diagnostic.CS8789.severity = error

# CS8790:
dotnet_diagnostic.CS8790.severity = error

# CS8791:
dotnet_diagnostic.CS8791.severity = error

# CS8792:
dotnet_diagnostic.CS8792.severity = error

# CS8793: The given expression always matches the provided pattern.
dotnet_diagnostic.CS8793.severity = error

# CS8794: The input always matches the provided pattern.
dotnet_diagnostic.CS8794.severity = error

# CS8795:
dotnet_diagnostic.CS8795.severity = error

# CS8796:
dotnet_diagnostic.CS8796.severity = error

# CS8797:
dotnet_diagnostic.CS8797.severity = error

# CS8798:
dotnet_diagnostic.CS8798.severity = error

# CS8799:
dotnet_diagnostic.CS8799.severity = error

# CS8800:
dotnet_diagnostic.CS8800.severity = error

# CS8801:
dotnet_diagnostic.CS8801.severity = error

# CS8802:
dotnet_diagnostic.CS8802.severity = error

# CS8803:
dotnet_diagnostic.CS8803.severity = error

# CS8804:
dotnet_diagnostic.CS8804.severity = error

# CS8805:
dotnet_diagnostic.CS8805.severity = error

# CS8806:
dotnet_diagnostic.CS8806.severity = error

# CS8807:
dotnet_diagnostic.CS8807.severity = error

# CS8808:
dotnet_diagnostic.CS8808.severity = error

# CS8809:
dotnet_diagnostic.CS8809.severity = error

# CS8810:
dotnet_diagnostic.CS8810.severity = error

# CS8811:
dotnet_diagnostic.CS8811.severity = error

# CS8812:
dotnet_diagnostic.CS8812.severity = error

# CS8813:
dotnet_diagnostic.CS8813.severity = error

# CS8814:
dotnet_diagnostic.CS8814.severity = error

# CS8815:
dotnet_diagnostic.CS8815.severity = error

# CS8816:
dotnet_diagnostic.CS8816.severity = error

# CS8817:
dotnet_diagnostic.CS8817.severity = error

# CS8818:
dotnet_diagnostic.CS8818.severity = error

# CS8819: Nullability of reference types in return type doesn't match partial method declaration.
dotnet_diagnostic.CS8819.severity = error

# CS8820:
dotnet_diagnostic.CS8820.severity = error

# CS8821:
dotnet_diagnostic.CS8821.severity = error

# CS8822:
dotnet_diagnostic.CS8822.severity = error

# CS8823:
dotnet_diagnostic.CS8823.severity = error

# CS8824: Parameter must have a non-null value when exiting because parameter referenced by NotNullIfNotNull is non-null.
dotnet_diagnostic.CS8824.severity = error

# CS8825: Return value must be non-null because parameter is non-null.
dotnet_diagnostic.CS8825.severity = error

# CS8826: Partial method declarations have signature differences.
dotnet_diagnostic.CS8826.severity = error

# CS8830:
dotnet_diagnostic.CS8830.severity = error

# CS8831:
dotnet_diagnostic.CS8831.severity = error

# CS8846: The switch expression does not handle all possible values of its input type (it is not exhaustive).
dotnet_diagnostic.CS8846.severity = error

# CS8847: The switch expression does not handle some null inputs.
dotnet_diagnostic.CS8847.severity = error

# CS8848: Operator cannot be used here due to precedence.
dotnet_diagnostic.CS8848.severity = error

# CS8849:
dotnet_diagnostic.CS8849.severity = error

# CS8850: The loaded assembly references .NET Framework, which is not supported.
dotnet_diagnostic.CS8850.severity = error

# CS8851: Record defines 'Equals' but not 'GetHashCode'.
dotnet_diagnostic.CS8851.severity = error

# CS8852:
dotnet_diagnostic.CS8852.severity = error

# CS8853:
dotnet_diagnostic.CS8853.severity = error

# CS8854:
dotnet_diagnostic.CS8854.severity = error

# CS8855:
dotnet_diagnostic.CS8855.severity = error

# CS8856:
dotnet_diagnostic.CS8856.severity = error

# CS8857:
dotnet_diagnostic.CS8857.severity = error

# CS8858:
dotnet_diagnostic.CS8858.severity = error

# CS8859:
dotnet_diagnostic.CS8859.severity = error

# CS8860: Types and aliases should not be named 'record'.
dotnet_diagnostic.CS8860.severity = error

# CS8861:
dotnet_diagnostic.CS8861.severity = error

# CS8862:
dotnet_diagnostic.CS8862.severity = error

# CS8863:
dotnet_diagnostic.CS8863.severity = error

# CS8864:
dotnet_diagnostic.CS8864.severity = error

# CS8865:
dotnet_diagnostic.CS8865.severity = error

# CS8866:
dotnet_diagnostic.CS8866.severity = error

# CS8867:
dotnet_diagnostic.CS8867.severity = error

# CS8868:
dotnet_diagnostic.CS8868.severity = error

# CS8869:
dotnet_diagnostic.CS8869.severity = error

# CS8870:
dotnet_diagnostic.CS8870.severity = error

# CS8871:
dotnet_diagnostic.CS8871.severity = error

# CS8872:
dotnet_diagnostic.CS8872.severity = error

# CS8873:
dotnet_diagnostic.CS8873.severity = error

# CS8874:
dotnet_diagnostic.CS8874.severity = error

# CS8875:
dotnet_diagnostic.CS8875.severity = error

# CS8876:
dotnet_diagnostic.CS8876.severity = error

# CS8877:
dotnet_diagnostic.CS8877.severity = error

# CS8878:
dotnet_diagnostic.CS8878.severity = error

# CS8879:
dotnet_diagnostic.CS8879.severity = error

# CS8880: An auto-implemented property must be fully assigned before control is returned to the caller. Consider updating the language version to auto-default the property.
dotnet_diagnostic.CS8880.severity = error

# CS8881: Fields of a struct must be fully assigned in a constructor before control is returned to the caller. Consider updating the language version to auto-default the field.
dotnet_diagnostic.CS8881.severity = error

# CS8882: An out parameter must be assigned to before control leaves the method
dotnet_diagnostic.CS8882.severity = error

# CS8883: Use of possibly unassigned auto-implemented property
dotnet_diagnostic.CS8883.severity = error

# CS8884: Use of possibly unassigned field
dotnet_diagnostic.CS8884.severity = error

# CS8885: The 'this' object cannot be used in a constructor before all of its fields have been assigned. Consider updating the language version to auto-default the unassigned fields.
dotnet_diagnostic.CS8885.severity = error

# CS8886: Use of unassigned out parameter
dotnet_diagnostic.CS8886.severity = error

# CS8887: Use of unassigned local variable
dotnet_diagnostic.CS8887.severity = error

# CS8888:
dotnet_diagnostic.CS8888.severity = error

# CS8889:
dotnet_diagnostic.CS8889.severity = error

# CS8890:
dotnet_diagnostic.CS8890.severity = error

# CS8891:
dotnet_diagnostic.CS8891.severity = error

# CS8893:
dotnet_diagnostic.CS8893.severity = error

# CS8894:
dotnet_diagnostic.CS8894.severity = error

# CS8895:
dotnet_diagnostic.CS8895.severity = error

# CS8896:
dotnet_diagnostic.CS8896.severity = error

# CS8897: Static types cannot be used as parameters
dotnet_diagnostic.CS8897.severity = error

# CS8898: Static types cannot be used as return types
dotnet_diagnostic.CS8898.severity = error

# CS8899:
dotnet_diagnostic.CS8899.severity = error

# CS8900:
dotnet_diagnostic.CS8900.severity = error

# CS8901:
dotnet_diagnostic.CS8901.severity = error

# CS8902:
dotnet_diagnostic.CS8902.severity = error

# CS8903:
dotnet_diagnostic.CS8903.severity = error

# CS8904:
dotnet_diagnostic.CS8904.severity = error

# CS8905:
dotnet_diagnostic.CS8905.severity = error

# CS8906:
dotnet_diagnostic.CS8906.severity = error

# CS8907: Parameter is unread. Did you forget to use it to initialize the property with that name?
dotnet_diagnostic.CS8907.severity = error

# CS8908:
dotnet_diagnostic.CS8908.severity = error

# CS8909: Do not compare function pointer values
dotnet_diagnostic.CS8909.severity = error

# CS8910:
dotnet_diagnostic.CS8910.severity = error

# CS8911:
dotnet_diagnostic.CS8911.severity = error

# CS8912:
dotnet_diagnostic.CS8912.severity = error

# CS8913:
dotnet_diagnostic.CS8913.severity = error

# CS8914:
dotnet_diagnostic.CS8914.severity = error

# CS8915:
dotnet_diagnostic.CS8915.severity = error

# CS8916:
dotnet_diagnostic.CS8916.severity = error

# CS8917:
dotnet_diagnostic.CS8917.severity = error

# CS8918:
dotnet_diagnostic.CS8918.severity = error

# CS8919:
dotnet_diagnostic.CS8919.severity = error

# CS8920:
dotnet_diagnostic.CS8920.severity = error

# CS8921:
dotnet_diagnostic.CS8921.severity = error

# CS8922:
dotnet_diagnostic.CS8922.severity = error

# CS8923:
dotnet_diagnostic.CS8923.severity = error

# CS8924:
dotnet_diagnostic.CS8924.severity = error

# CS8925:
dotnet_diagnostic.CS8925.severity = error

# CS8926:
dotnet_diagnostic.CS8926.severity = error

# CS8927:
dotnet_diagnostic.CS8927.severity = error

# CS8928:
dotnet_diagnostic.CS8928.severity = error

# CS8929:
dotnet_diagnostic.CS8929.severity = error

# CS8930:
dotnet_diagnostic.CS8930.severity = error

# CS8931:
dotnet_diagnostic.CS8931.severity = error

# CS8932:
dotnet_diagnostic.CS8932.severity = error

# CS8933: The using directive appeared previously as global using
dotnet_diagnostic.CS8933.severity = error

# CS8934:
dotnet_diagnostic.CS8934.severity = error

# CS8935:
dotnet_diagnostic.CS8935.severity = error

# CS8936:
dotnet_diagnostic.CS8936.severity = error

# CS8937:
dotnet_diagnostic.CS8937.severity = error

# CS8938:
dotnet_diagnostic.CS8938.severity = error

# CS8939:
dotnet_diagnostic.CS8939.severity = error

# CS8940:
dotnet_diagnostic.CS8940.severity = error

# CS8941:
dotnet_diagnostic.CS8941.severity = error

# CS8942:
dotnet_diagnostic.CS8942.severity = error

# CS8943:
dotnet_diagnostic.CS8943.severity = error

# CS8944:
dotnet_diagnostic.CS8944.severity = error

# CS8945:
dotnet_diagnostic.CS8945.severity = error

# CS8946:
dotnet_diagnostic.CS8946.severity = error

# CS8947: Parameter to interpolated string handler conversion occurs after handler parameter
dotnet_diagnostic.CS8947.severity = error

# CS8948:
dotnet_diagnostic.CS8948.severity = error

# CS8949:
dotnet_diagnostic.CS8949.severity = error

# CS8950:
dotnet_diagnostic.CS8950.severity = error

# CS8951:
dotnet_diagnostic.CS8951.severity = error

# CS8952:
dotnet_diagnostic.CS8952.severity = error

# CS8953:
dotnet_diagnostic.CS8953.severity = error

# CS8954:
dotnet_diagnostic.CS8954.severity = error

# CS8955:
dotnet_diagnostic.CS8955.severity = error

# CS8956:
dotnet_diagnostic.CS8956.severity = error

# CS8957:
dotnet_diagnostic.CS8957.severity = error

# CS8958:
dotnet_diagnostic.CS8958.severity = error

# CS8959:
dotnet_diagnostic.CS8959.severity = error

# CS8960: The CallerArgumentExpressionAttribute will have no effect; it is overridden by the CallerLineNumberAttribute
dotnet_diagnostic.CS8960.severity = error

# CS8961: The CallerArgumentExpressionAttribute will have no effect; it is overridden by the CallerFilePathAttribute
dotnet_diagnostic.CS8961.severity = error

# CS8962: The CallerArgumentExpressionAttribute will have no effect; it is overridden by the CallerMemberNameAttribute
dotnet_diagnostic.CS8962.severity = error

# CS8963: The CallerArgumentExpressionAttribute is applied with an invalid parameter name.
dotnet_diagnostic.CS8963.severity = error

# CS8964:
dotnet_diagnostic.CS8964.severity = error

# CS8965: The CallerArgumentExpressionAttribute applied to parameter will have no effect because it's self-refential.
dotnet_diagnostic.CS8965.severity = error

# CS8966: The CallerArgumentExpressionAttribute will have no effect because it applies to a member that is used in contexts that do not allow optional arguments
dotnet_diagnostic.CS8966.severity = error

# CS8967:
dotnet_diagnostic.CS8967.severity = error

# CS8968:
dotnet_diagnostic.CS8968.severity = error

# CS8970:
dotnet_diagnostic.CS8970.severity = error

# CS8971: InterpolatedStringHandlerArgument has no effect when applied to lambda parameters and will be ignored at the call site.
dotnet_diagnostic.CS8971.severity = error

# CS8972:
dotnet_diagnostic.CS8972.severity = error

# CS8973: The operation may overflow at runtime (use 'unchecked' syntax to override)
dotnet_diagnostic.CS8973.severity = error

# CS8974: Converting method group to non-delegate type
dotnet_diagnostic.CS8974.severity = error

# CS8975:
dotnet_diagnostic.CS8975.severity = error

# CS8976:
dotnet_diagnostic.CS8976.severity = error

# CS8977:
dotnet_diagnostic.CS8977.severity = error

# CS8978:
dotnet_diagnostic.CS8978.severity = error

# CS8979:
dotnet_diagnostic.CS8979.severity = error

# CS8980:
dotnet_diagnostic.CS8980.severity = error

# CS8981: The type name only contains lower-cased ascii characters. Such names may become reserved for the language.
dotnet_diagnostic.CS8981.severity = error

# CS8982:
dotnet_diagnostic.CS8982.severity = error

# CS8983:
dotnet_diagnostic.CS8983.severity = error

# CS8985:
dotnet_diagnostic.CS8985.severity = error

# CS8986:
dotnet_diagnostic.CS8986.severity = error

# CS8987:
dotnet_diagnostic.CS8987.severity = error

# CS8988:
dotnet_diagnostic.CS8988.severity = error

# CS8989:
dotnet_diagnostic.CS8989.severity = error

# CS8996:
dotnet_diagnostic.CS8996.severity = error

# CS8997:
dotnet_diagnostic.CS8997.severity = error

# CS8998:
dotnet_diagnostic.CS8998.severity = error

# CS8999:
dotnet_diagnostic.CS8999.severity = error

# CS9000:
dotnet_diagnostic.CS9000.severity = error

# CS9001:
dotnet_diagnostic.CS9001.severity = error

# CS9002:
dotnet_diagnostic.CS9002.severity = error

# CS9003:
dotnet_diagnostic.CS9003.severity = error

# CS9004:
dotnet_diagnostic.CS9004.severity = error

# CS9005:
dotnet_diagnostic.CS9005.severity = error

# CS9006:
dotnet_diagnostic.CS9006.severity = error

# CS9007:
dotnet_diagnostic.CS9007.severity = error

# CS9008:
dotnet_diagnostic.CS9008.severity = error

# CS9009:
dotnet_diagnostic.CS9009.severity = error

# CS9010:
dotnet_diagnostic.CS9010.severity = error

# CS9011:
dotnet_diagnostic.CS9011.severity = error

# CS9012:
dotnet_diagnostic.CS9012.severity = error

# CS9013:
dotnet_diagnostic.CS9013.severity = error

# CS9014:
dotnet_diagnostic.CS9014.severity = error

# CS9015:
dotnet_diagnostic.CS9015.severity = error

# CS9016: Use of possibly unassigned auto-implemented property. Consider updating the language version to auto-default the property.
dotnet_diagnostic.CS9016.severity = error

# CS9017: Use of possibly unassigned field. Consider updating the language version to auto-default the field.
dotnet_diagnostic.CS9017.severity = error

# CS9018: Auto-implemented property is read before being explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.CS9018.severity = error

# CS9019: Field is read before being explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.CS9019.severity = error

# CS9020: The 'this' object is read before all of its fields have been assigned, causing preceding implicit assignments of 'default' to non-explicitly assigned fields.
dotnet_diagnostic.CS9020.severity = error

# CS9021: Control is returned to caller before auto-implemented property is explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.CS9021.severity = error

# CS9022: Control is returned to caller before field is explicitly assigned, causing a preceding implicit assignment of 'default'.
dotnet_diagnostic.CS9022.severity = error

# CS9023:
dotnet_diagnostic.CS9023.severity = error

# CS9024:
dotnet_diagnostic.CS9024.severity = error

# CS9025:
dotnet_diagnostic.CS9025.severity = error

# CS9027:
dotnet_diagnostic.CS9027.severity = error

# CS9028:
dotnet_diagnostic.CS9028.severity = error

# CS9029:
dotnet_diagnostic.CS9029.severity = error

# CS9030:
dotnet_diagnostic.CS9030.severity = error

# CS9031:
dotnet_diagnostic.CS9031.severity = error

# CS9032:
dotnet_diagnostic.CS9032.severity = error

# CS9033:
dotnet_diagnostic.CS9033.severity = error

# CS9034:
dotnet_diagnostic.CS9034.severity = error

# CS9035:
dotnet_diagnostic.CS9035.severity = error

# CS9036:
dotnet_diagnostic.CS9036.severity = error

# CS9037:
dotnet_diagnostic.CS9037.severity = error

# CS9038:
dotnet_diagnostic.CS9038.severity = error

# CS9039:
dotnet_diagnostic.CS9039.severity = error

# CS9040:
dotnet_diagnostic.CS9040.severity = error

# CS9041:
dotnet_diagnostic.CS9041.severity = error

# CS9042: Members attributed with 'ObsoleteAttribute' should not be required unless the containing type is obsolete or all constructors are obsolete.
dotnet_diagnostic.CS9042.severity = error

# CS9043:
dotnet_diagnostic.CS9043.severity = error

# CS9044:
dotnet_diagnostic.CS9044.severity = error

# CS9045:
dotnet_diagnostic.CS9045.severity = error

# CS9046:
dotnet_diagnostic.CS9046.severity = error

# CS9047:
dotnet_diagnostic.CS9047.severity = error

# CS9048:
dotnet_diagnostic.CS9048.severity = error

# CS9049:
dotnet_diagnostic.CS9049.severity = error

# CS9050:
dotnet_diagnostic.CS9050.severity = error

# CS9051:
dotnet_diagnostic.CS9051.severity = error

# CS9052:
dotnet_diagnostic.CS9052.severity = error

# CS9053:
dotnet_diagnostic.CS9053.severity = error

# CS9054:
dotnet_diagnostic.CS9054.severity = error

# CS9055:
dotnet_diagnostic.CS9055.severity = error

# CS9056:
dotnet_diagnostic.CS9056.severity = error

# CS9057: The analyzer assembly references a newer version of the compiler than the currently running version.
dotnet_diagnostic.CS9057.severity = error

# CS9058:
dotnet_diagnostic.CS9058.severity = error

# CS9059:
dotnet_diagnostic.CS9059.severity = error

# CS9060:
dotnet_diagnostic.CS9060.severity = error

# CS9062:
dotnet_diagnostic.CS9062.severity = error

# CS9063:
dotnet_diagnostic.CS9063.severity = error

# CS9064:
dotnet_diagnostic.CS9064.severity = error

# CS9065:
dotnet_diagnostic.CS9065.severity = error

# CS9066:
dotnet_diagnostic.CS9066.severity = error

# CS9067: Analyzer reference specified multiple times
dotnet_diagnostic.CS9067.severity = error

# CS9069:
dotnet_diagnostic.CS9069.severity = error

# CS9070:
dotnet_diagnostic.CS9070.severity = error

# CS9071:
dotnet_diagnostic.CS9071.severity = error

# CS9073: The 'scoped' modifier of parameter doesn't match target.
dotnet_diagnostic.CS9073.severity = error

# CS9074: The 'scoped' modifier of parameter doesn't match overridden or implemented member.
dotnet_diagnostic.CS9074.severity = error

# CS9075:
dotnet_diagnostic.CS9075.severity = error

# CS9076:
dotnet_diagnostic.CS9076.severity = error

# CS9077:
dotnet_diagnostic.CS9077.severity = error

# CS9078:
dotnet_diagnostic.CS9078.severity = error

# CS9079:
dotnet_diagnostic.CS9079.severity = error

# CS9080: Use of variable in this context may expose referenced variables outside of their declaration scope
dotnet_diagnostic.CS9080.severity = error

# CS9081: A result of a stackalloc expression of this type in this context may be exposed outside of the containing method
dotnet_diagnostic.CS9081.severity = error

# CS9082: Local is returned by reference but was initialized to a value that cannot be returned by reference
dotnet_diagnostic.CS9082.severity = error

# CS9083: A member is returned by reference but was initialized to a value that cannot be returned by reference
dotnet_diagnostic.CS9083.severity = error

# CS9084: Struct member returns 'this' or other instance members by reference
dotnet_diagnostic.CS9084.severity = error

# CS9085: This ref-assigns a value that has a narrower escape scope than the target.
dotnet_diagnostic.CS9085.severity = error

# CS9086: The branches of the ref conditional operator refer to variables with incompatible declaration scopes
dotnet_diagnostic.CS9086.severity = error

# CS9087: This returns a parameter by reference but it is not a ref parameter
dotnet_diagnostic.CS9087.severity = error

# CS9088: This returns a parameter by reference but it is scoped to the current method
dotnet_diagnostic.CS9088.severity = error

# CS9089: This returns by reference a member of parameter that is not a ref or out parameter
dotnet_diagnostic.CS9089.severity = error

# CS9090: This returns by reference a member of parameter that is scoped to the current method
dotnet_diagnostic.CS9090.severity = error

# CS9091: This returns local by reference but it is not a ref local
dotnet_diagnostic.CS9091.severity = error

# CS9092: This returns a member of local by reference but it is not a ref local
dotnet_diagnostic.CS9092.severity = error

# CS9093: This ref-assigns a value that can only escape the current method through a return statement.
dotnet_diagnostic.CS9093.severity = error

# CS9094: This returns a parameter by reference through a ref parameter; but it can only safely be returned in a return statement
dotnet_diagnostic.CS9094.severity = error

# CS9095: This returns by reference a member of parameter through a ref parameter; but it can only safely be returned in a return statement
dotnet_diagnostic.CS9095.severity = error

# Rules from assembly: Microsoft.CodeAnalysis.Workspaces, Version=4.4.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35

# IDE1100: Workspace error
dotnet_diagnostic.IDE1100.severity = error

# Rules from assembly: Microsoft.CodeAnalysis.CodeStyle, Version=4.4.7.6111, Culture=neutral, PublicKeyToken=31bf3856ad364e35

# IDE0033: Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = error

# IDE0044: Add readonly modifier
dotnet_diagnostic.IDE0044.severity = error

# IDE0070: Use 'System.HashCode'
dotnet_diagnostic.IDE0070.severity = error

# Rules from assembly: Microsoft.CodeAnalysis.CSharp.CodeStyle, Version=4.4.7.6111, Culture=neutral, PublicKeyToken=31bf3856ad364e35

# IDE0004: Remove Unnecessary Cast
dotnet_diagnostic.IDE0004.severity = error

# IDE0005: Using directive is unnecessary.
dotnet_diagnostic.IDE0005.severity = error

# IDE0005_gen: Using directive is unnecessary.
dotnet_diagnostic.IDE0005_gen.severity = error

# IDE0007: Use implicit type
dotnet_diagnostic.IDE0007.severity = error

# IDE0008: Use explicit type
dotnet_diagnostic.IDE0008.severity = none

# IDE0009: Member access should be qualified.
dotnet_diagnostic.IDE0009.severity = error

# IDE0010: Add missing cases
dotnet_diagnostic.IDE0010.severity = error

# IDE0011: Add braces
dotnet_diagnostic.IDE0011.severity = error

# IDE0016: Use 'throw' expression
dotnet_diagnostic.IDE0016.severity = error

# IDE0017: Simplify object initialization
dotnet_diagnostic.IDE0017.severity = error

# IDE0018: Inline variable declaration
dotnet_diagnostic.IDE0018.severity = error

# IDE0019: Use pattern matching
dotnet_diagnostic.IDE0019.severity = error

# IDE0020: Use pattern matching
dotnet_diagnostic.IDE0020.severity = error

# IDE0021: Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = error

# IDE0022: Use expression body for methods
dotnet_diagnostic.IDE0022.severity = error

# IDE0023: Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = error

# IDE0024: Use expression body for operators
dotnet_diagnostic.IDE0024.severity = error

# IDE0025: Use expression body for properties
dotnet_diagnostic.IDE0025.severity = error

# IDE0026: Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = error

# IDE0027: Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = error

# IDE0028: Simplify collection initialization
dotnet_diagnostic.IDE0028.severity = error

# IDE0029: Use coalesce expression
dotnet_diagnostic.IDE0029.severity = error

# IDE0030: Use coalesce expression
dotnet_diagnostic.IDE0030.severity = error

# IDE0031: Use null propagation
dotnet_diagnostic.IDE0031.severity = error

# IDE0032: Use auto property
dotnet_diagnostic.IDE0032.severity = error

# IDE0034: Simplify 'default' expression
dotnet_diagnostic.IDE0034.severity = error

# IDE0035: Unreachable code detected
dotnet_diagnostic.IDE0035.severity = error

# IDE0036: Order modifiers
dotnet_diagnostic.IDE0036.severity = error

# IDE0037: Use inferred member name
dotnet_diagnostic.IDE0037.severity = error

# IDE0039: Use local function
dotnet_diagnostic.IDE0039.severity = error

# IDE0040: Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = error

# IDE0041: Use 'is null' check
dotnet_diagnostic.IDE0041.severity = error

# IDE0042: Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = error

# IDE0043: Invalid format string
dotnet_diagnostic.IDE0043.severity = error

# IDE0045: Convert to conditional expression
dotnet_diagnostic.IDE0045.severity = error

# IDE0046: Convert to conditional expression
dotnet_diagnostic.IDE0046.severity = error

# IDE0047: Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = error

# IDE0048: Add parentheses for clarity
dotnet_diagnostic.IDE0048.severity = error

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = error

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = error

# IDE0053: Use expression body for lambda expressions
dotnet_diagnostic.IDE0053.severity = error

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = error

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = error

# IDE0056: Use index operator
dotnet_diagnostic.IDE0056.severity = error

# IDE0057: Use range operator
dotnet_diagnostic.IDE0057.severity = error

# IDE0058: Expression value is never used
dotnet_diagnostic.IDE0058.severity = error

# IDE0059: Unnecessary assignment of a value
dotnet_diagnostic.IDE0059.severity = error

# IDE0060: Remove unused parameter
dotnet_diagnostic.IDE0060.severity = error

# IDE0061: Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = error

# IDE0062: Make local function 'static'
dotnet_diagnostic.IDE0062.severity = error

# IDE0063: Use simple 'using' statement
dotnet_diagnostic.IDE0063.severity = error

# IDE0064: Make readonly fields writable
dotnet_diagnostic.IDE0064.severity = error

# IDE0065: Misplaced using directive
dotnet_diagnostic.IDE0065.severity = error

# IDE0066: Convert switch statement to expression
dotnet_diagnostic.IDE0066.severity = error

# IDE0071: Simplify interpolation
dotnet_diagnostic.IDE0071.severity = error

# IDE0072: Add missing cases
dotnet_diagnostic.IDE0072.severity = error

# IDE0073: The file header is missing or not located at the top of the file
dotnet_diagnostic.IDE0073.severity = error

# IDE0074: Use compound assignment
dotnet_diagnostic.IDE0074.severity = error

# IDE0075: Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = error

# IDE0076: Invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0076.severity = error

# IDE0077: Avoid legacy format target in 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0077.severity = error

# IDE0078: Use pattern matching
dotnet_diagnostic.IDE0078.severity = error

# IDE0079: Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = error

# IDE0080: Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = error

# IDE0082: 'typeof' can be converted  to 'nameof'
dotnet_diagnostic.IDE0082.severity = error

# IDE0083: Use pattern matching
dotnet_diagnostic.IDE0083.severity = error

# IDE0090: Use 'new(...)'
dotnet_diagnostic.IDE0090.severity = error

# IDE0100: Remove redundant equality
dotnet_diagnostic.IDE0100.severity = error

# IDE0110: Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = error

# IDE0120: Simplify LINQ expression
dotnet_diagnostic.IDE0120.severity = error

# IDE0130: Namespace does not match folder structure
dotnet_diagnostic.IDE0130.severity = none

# IDE0150: Prefer 'null' check over type check
dotnet_diagnostic.IDE0150.severity = error

# IDE0160: Convert to block scoped namespace
dotnet_diagnostic.IDE0160.severity = none

# IDE0161: Convert to file-scoped namespace
dotnet_diagnostic.IDE0161.severity = error

# IDE0170: Property pattern can be simplified
dotnet_diagnostic.IDE0170.severity = error

# IDE0180: Use tuple to swap values
dotnet_diagnostic.IDE0180.severity = error

# IDE0200: Remove unnecessary lambda expression
dotnet_diagnostic.IDE0200.severity = error

# IDE0210: Convert to top-level statements
dotnet_diagnostic.IDE0210.severity = error

# IDE0211: Convert to 'Program.Main' style program
dotnet_diagnostic.IDE0211.severity = error

# IDE0220: Add explicit cast
dotnet_diagnostic.IDE0220.severity = error

# IDE0230: Use UTF-8 string literal
dotnet_diagnostic.IDE0230.severity = error

# IDE0240: Remove redundant nullable directive
dotnet_diagnostic.IDE0240.severity = error

# IDE0241: Remove unnecessary nullable directive
dotnet_diagnostic.IDE0241.severity = error

# IDE0250: Make struct 'readonly'
dotnet_diagnostic.IDE0250.severity = error

# IDE1005: Delegate invocation can be simplified.
dotnet_diagnostic.IDE1005.severity = error

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = error

# IDE2000: Avoid multiple blank lines
dotnet_diagnostic.IDE2000.severity = error

# IDE2001: Embedded statements must be on their own line
dotnet_diagnostic.IDE2001.severity = error

# IDE2002: Consecutive braces must not have blank line between them
dotnet_diagnostic.IDE2002.severity = error

# IDE2003: Blank line required between block and subsequent statement
dotnet_diagnostic.IDE2003.severity = error

# IDE2004: Blank line not allowed after constructor initializer colon
dotnet_diagnostic.IDE2004.severity = error

# RemoveUnnecessaryImportsFixable:
dotnet_diagnostic.RemoveUnnecessaryImportsFixable.severity = error

# Rules from assembly: Microsoft.CodeAnalysis.CSharp.NetAnalyzers, Version=7.0.7.1801, Culture=neutral, PublicKeyToken=31bf3856ad364e35

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = error

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = error

# CA1200: Avoid using cref tags with a prefix
dotnet_diagnostic.CA1200.severity = error

# CA1309: Use ordinal string comparison
dotnet_diagnostic.CA1309.severity = error

# CA1311: Specify a culture or use an invariant version
dotnet_diagnostic.CA1311.severity = error

# CA1507: Use nameof to express symbol names
dotnet_diagnostic.CA1507.severity = error

# CA1802: Use literals where appropriate
dotnet_diagnostic.CA1802.severity = error

# CA1805: Do not initialize unnecessarily
dotnet_diagnostic.CA1805.severity = error

# CA1812: Avoid uninstantiated internal classes
dotnet_diagnostic.CA1812.severity = error

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = error

# CA1825: Avoid zero-length array allocations
dotnet_diagnostic.CA1825.severity = error

# CA1841: Prefer Dictionary.Contains methods
dotnet_diagnostic.CA1841.severity = error

# CA1845: Use span-based 'string.Concat'
dotnet_diagnostic.CA1845.severity = error

# CA1851: Possible multiple enumerations of 'IEnumerable' collection
dotnet_diagnostic.CA1851.severity = error

# CA1855: Prefer 'Clear' over 'Fill'
dotnet_diagnostic.CA1855.severity = error

# CA2014: Do not use stackalloc in loops
dotnet_diagnostic.CA2014.severity = error

# CA2016: Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2016.severity = error

# CA2020: Prevent from behavioral change
dotnet_diagnostic.CA2020.severity = error

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = error

# CA2252: This API requires opting into preview features
dotnet_diagnostic.CA2252.severity = error

# CA2260: Use correct type parameter
dotnet_diagnostic.CA2260.severity = error

# CA2352: Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2352.severity = error

# CA2353: Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.CA2353.severity = error

# CA2354: Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2354.severity = error

# CA2355: Unsafe DataSet or DataTable type found in deserializable object graph
dotnet_diagnostic.CA2355.severity = error

# CA2356: Unsafe DataSet or DataTable type in web deserializable object graph
dotnet_diagnostic.CA2356.severity = error

# CA2362: Unsafe DataSet or DataTable in auto-generated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA2362.severity = error

# Rules from assembly: Microsoft.CodeAnalysis.NetAnalyzers, Version=7.0.7.1801, Culture=neutral, PublicKeyToken=31bf3856ad364e35

# CA1000: Do not declare static members on generic types
dotnet_diagnostic.CA1000.severity = error

# CA1002: Do not expose generic lists
dotnet_diagnostic.CA1002.severity = error

# CA1003: Use generic event handler instances
dotnet_diagnostic.CA1003.severity = error

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = error

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = error

# CA1010: Generic interface should also be implemented
dotnet_diagnostic.CA1010.severity = error

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = error

# CA1014: Mark assemblies with CLSCompliant
dotnet_diagnostic.CA1014.severity = error

# CA1016: Mark assemblies with assembly version
dotnet_diagnostic.CA1016.severity = error

# CA1017: Mark assemblies with ComVisible
dotnet_diagnostic.CA1017.severity = error

# CA1018: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.CA1018.severity = error

# CA1019: Define accessors for attribute arguments
dotnet_diagnostic.CA1019.severity = error

# CA1021: Avoid out parameters
dotnet_diagnostic.CA1021.severity = error

# CA1024: Use properties where appropriate
dotnet_diagnostic.CA1024.severity = error

# CA1027: Mark enums with FlagsAttribute
dotnet_diagnostic.CA1027.severity = error

# CA1028: Enum Storage should be Int32
dotnet_diagnostic.CA1028.severity = error

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = error

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = error

# CA1033: Interface methods should be callable by child types
dotnet_diagnostic.CA1033.severity = error

# CA1034: Nested types should not be visible
dotnet_diagnostic.CA1034.severity = error

# CA1036: Override methods on comparable types
dotnet_diagnostic.CA1036.severity = error

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = error

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = error

# CA1043: Use Integral Or String Argument For Indexers
dotnet_diagnostic.CA1043.severity = error

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = error

# CA1045: Do not pass types by reference
dotnet_diagnostic.CA1045.severity = error

# CA1046: Do not overload equality operator on reference types
dotnet_diagnostic.CA1046.severity = error

# CA1047: Do not declare protected member in sealed type
dotnet_diagnostic.CA1047.severity = error

# CA1050: Declare types in namespaces
dotnet_diagnostic.CA1050.severity = error

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = error

# CA1052: Static holder types should be Static or NotInheritable
dotnet_diagnostic.CA1052.severity = error

# CA1054: URI-like parameters should not be strings
dotnet_diagnostic.CA1054.severity = error

# CA1055: URI-like return values should not be strings
dotnet_diagnostic.CA1055.severity = error

# CA1056: URI-like properties should not be strings
dotnet_diagnostic.CA1056.severity = warning

# CA1058: Types should not extend certain base types
dotnet_diagnostic.CA1058.severity = error

# CA1060: Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = error

# CA1061: Do not hide base class methods
dotnet_diagnostic.CA1061.severity = error

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = error

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = error

# CA1064: Exceptions should be public
dotnet_diagnostic.CA1064.severity = error

# CA1065: Do not raise exceptions in unexpected locations
dotnet_diagnostic.CA1065.severity = error

# CA1066: Implement IEquatable when overriding Object.Equals
dotnet_diagnostic.CA1066.severity = error

# CA1067: Override Object.Equals(object) when implementing IEquatable<T>
dotnet_diagnostic.CA1067.severity = error

# CA1068: CancellationToken parameters must come last
dotnet_diagnostic.CA1068.severity = error

# CA1069: Enums values should not be duplicated
dotnet_diagnostic.CA1069.severity = error

# CA1070: Do not declare event fields as virtual
dotnet_diagnostic.CA1070.severity = error

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = error

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = error

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = error

# CA1307: Specify StringComparison for clarity
dotnet_diagnostic.CA1307.severity = error

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = error

# CA1310: Specify StringComparison for correctness
dotnet_diagnostic.CA1310.severity = error

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = error

# CA1416: Validate platform compatibility
dotnet_diagnostic.CA1416.severity = error

# CA1417: Do not use 'OutAttribute' on string parameters for P/Invokes
dotnet_diagnostic.CA1417.severity = error

# CA1418: Use valid platform string
dotnet_diagnostic.CA1418.severity = error

# CA1419: Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
dotnet_diagnostic.CA1419.severity = error

# CA1420: Property, type, or attribute requires runtime marshalling
dotnet_diagnostic.CA1420.severity = error

# CA1421: This method uses runtime marshalling even when the 'DisableRuntimeMarshallingAttribute' is applied
dotnet_diagnostic.CA1421.severity = error

# CA1422: Validate platform compatibility
dotnet_diagnostic.CA1422.severity = error

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = error

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = error

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = error

# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = error

# CA1508: Avoid dead conditional code
dotnet_diagnostic.CA1508.severity = error

# CA1509: Invalid entry in code metrics rule specification file
dotnet_diagnostic.CA1509.severity = error

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = error

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = error

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = error

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = error

# CA1711: Identifiers should not have incorrect suffix
dotnet_diagnostic.CA1711.severity = error

# CA1712: Do not prefix enum values with type name
dotnet_diagnostic.CA1712.severity = error

# CA1713: Events should not have 'Before' or 'After' prefix
dotnet_diagnostic.CA1713.severity = error

# CA1715: Identifiers should have correct prefix
dotnet_diagnostic.CA1715.severity = error

# CA1716: Identifiers should not match keywords
dotnet_diagnostic.CA1716.severity = warning

# CA1720: Identifier contains type name
dotnet_diagnostic.CA1720.severity = error

# CA1721: Property names should not match get methods
dotnet_diagnostic.CA1721.severity = error

# CA1724: Type names should not match namespaces
dotnet_diagnostic.CA1724.severity = warning

# CA1725: Parameter names should match base declaration
dotnet_diagnostic.CA1725.severity = error

# CA1727: Use PascalCase for named placeholders
dotnet_diagnostic.CA1727.severity = error

# CA1806: Do not ignore method results
dotnet_diagnostic.CA1806.severity = error

# CA1810: Initialize reference type static fields inline
dotnet_diagnostic.CA1810.severity = error

# CA1813: Avoid unsealed attributes
dotnet_diagnostic.CA1813.severity = error

# CA1814: Prefer jagged arrays over multidimensional
dotnet_diagnostic.CA1814.severity = error

# CA1815: Override equals and operator equals on value types
dotnet_diagnostic.CA1815.severity = error

# CA1816: Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1816.severity = error

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = error

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = error

# CA1821: Remove empty Finalizers
dotnet_diagnostic.CA1821.severity = error

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = error

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = error

# CA1826: Do not use Enumerable methods on indexable collections
dotnet_diagnostic.CA1826.severity = error

# CA1827: Do not use Count() or LongCount() when Any() can be used
dotnet_diagnostic.CA1827.severity = error

# CA1828: Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used
dotnet_diagnostic.CA1828.severity = error

# CA1829: Use Length/Count property instead of Count() when available
dotnet_diagnostic.CA1829.severity = error

# CA1830: Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.CA1830.severity = error

# CA1831: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1831.severity = error

# CA1832: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1832.severity = error

# CA1833: Use AsSpan or AsMemory instead of Range-based indexers when appropriate
dotnet_diagnostic.CA1833.severity = error

# CA1834: Consider using 'StringBuilder.Append(char)' when applicable
dotnet_diagnostic.CA1834.severity = error

# CA1835: Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1835.severity = error

# CA1836: Prefer IsEmpty over Count
dotnet_diagnostic.CA1836.severity = error

# CA1837: Use 'Environment.ProcessId'
dotnet_diagnostic.CA1837.severity = error

# CA1838: Avoid 'StringBuilder' parameters for P/Invokes
dotnet_diagnostic.CA1838.severity = error

# CA1839: Use 'Environment.ProcessPath'
dotnet_diagnostic.CA1839.severity = error

# CA1840: Use 'Environment.CurrentManagedThreadId'
dotnet_diagnostic.CA1840.severity = error

# CA1842: Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1842.severity = error

# CA1843: Do not use 'WaitAll' with a single task
dotnet_diagnostic.CA1843.severity = error

# CA1844: Provide memory-based overrides of async methods when subclassing 'Stream'
dotnet_diagnostic.CA1844.severity = error

# CA1846: Prefer 'AsSpan' over 'Substring'
dotnet_diagnostic.CA1846.severity = error

# CA1847: Use char literal for a single character lookup
dotnet_diagnostic.CA1847.severity = error

# CA1848: Use the LoggerMessage delegates
dotnet_diagnostic.CA1848.severity = error

# CA1849: Call async methods when in an async method
dotnet_diagnostic.CA1849.severity = error

# CA1850: Prefer static 'HashData' method over 'ComputeHash'
dotnet_diagnostic.CA1850.severity = error

# CA1852: Seal internal types
dotnet_diagnostic.CA1852.severity = error

# CA1853: Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1853.severity = error

# CA1854: Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
dotnet_diagnostic.CA1854.severity = error

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = error

# CA2002: Do not lock on objects with weak identity
dotnet_diagnostic.CA2002.severity = error

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = error

# CA2008: Do not create tasks without passing a TaskScheduler
dotnet_diagnostic.CA2008.severity = error

# CA2009: Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.CA2009.severity = error

# CA2011: Avoid infinite recursion
dotnet_diagnostic.CA2011.severity = error

# CA2012: Use ValueTasks correctly
dotnet_diagnostic.CA2012.severity = error

# CA2013: Do not use ReferenceEquals with value types
dotnet_diagnostic.CA2013.severity = error

# CA2015: Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2015.severity = error

# CA2017: Parameter count mismatch
dotnet_diagnostic.CA2017.severity = error

# CA2018: 'Buffer.BlockCopy' expects the number of bytes to be copied for the 'count' argument
dotnet_diagnostic.CA2018.severity = error

# CA2019: Improper 'ThreadStatic' field initialization
dotnet_diagnostic.CA2019.severity = error

# CA2100: Review SQL queries for security vulnerabilities
dotnet_diagnostic.CA2100.severity = error

# CA2101: Specify marshaling for P/Invoke string arguments
dotnet_diagnostic.CA2101.severity = error

# CA2109: Review visible event handlers
dotnet_diagnostic.CA2109.severity = error

# CA2119: Seal methods that satisfy private interfaces
dotnet_diagnostic.CA2119.severity = error

# CA2153: Do Not Catch Corrupted State Exceptions
dotnet_diagnostic.CA2153.severity = error

# CA2200: Rethrow to preserve stack details
dotnet_diagnostic.CA2200.severity = error

# CA2201: Do not raise reserved exception types
dotnet_diagnostic.CA2201.severity = error

# CA2207: Initialize value type static fields inline
dotnet_diagnostic.CA2207.severity = error

# CA2208: Instantiate argument exceptions correctly
dotnet_diagnostic.CA2208.severity = error

# CA2211: Non-constant fields should not be visible
dotnet_diagnostic.CA2211.severity = error

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = error

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = error

# CA2215: Dispose methods should call base class dispose
dotnet_diagnostic.CA2215.severity = error

# CA2216: Disposable types should declare finalizer
dotnet_diagnostic.CA2216.severity = error

# CA2217: Do not mark enums with FlagsAttribute
dotnet_diagnostic.CA2217.severity = error

# CA2219: Do not raise exceptions in finally clauses
dotnet_diagnostic.CA2219.severity = error

# CA2225: Operator overloads have named alternates
dotnet_diagnostic.CA2225.severity = error

# CA2226: Operators should have symmetrical overloads
dotnet_diagnostic.CA2226.severity = error

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = error

# CA2229: Implement serialization constructors
dotnet_diagnostic.CA2229.severity = error

# CA2231: Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2231.severity = error

# CA2235: Mark all non-serializable fields
dotnet_diagnostic.CA2235.severity = error

# CA2237: Mark ISerializable types with serializable
dotnet_diagnostic.CA2237.severity = error

# CA2241: Provide correct arguments to formatting methods
dotnet_diagnostic.CA2241.severity = error

# CA2242: Test for NaN correctly
dotnet_diagnostic.CA2242.severity = error

# CA2243: Attribute string literals should parse correctly
dotnet_diagnostic.CA2243.severity = error

# CA2244: Do not duplicate indexed element initializations
dotnet_diagnostic.CA2244.severity = error

# CA2245: Do not assign a property to itself
dotnet_diagnostic.CA2245.severity = error

# CA2246: Assigning symbol and its member in the same statement
dotnet_diagnostic.CA2246.severity = error

# CA2247: Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.CA2247.severity = error

# CA2248: Provide correct 'enum' argument to 'Enum.HasFlag'
dotnet_diagnostic.CA2248.severity = error

# CA2249: Consider using 'string.Contains' instead of 'string.IndexOf'
dotnet_diagnostic.CA2249.severity = error

# CA2250: Use 'ThrowIfCancellationRequested'
dotnet_diagnostic.CA2250.severity = error

# CA2251: Use 'string.Equals'
dotnet_diagnostic.CA2251.severity = error

# CA2253: Named placeholders should not be numeric values
dotnet_diagnostic.CA2253.severity = error

# CA2254: Template should be a static expression
dotnet_diagnostic.CA2254.severity = error

# CA2255: The 'ModuleInitializer' attribute should not be used in libraries
dotnet_diagnostic.CA2255.severity = error

# CA2256: All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
dotnet_diagnostic.CA2256.severity = error

# CA2257: Members defined on an interface with the 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
dotnet_diagnostic.CA2257.severity = error

# CA2258: Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
dotnet_diagnostic.CA2258.severity = error

# CA2259: 'ThreadStatic' only affects static fields
dotnet_diagnostic.CA2259.severity = error

# CA2300: Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.CA2300.severity = error

# CA2301: Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.CA2301.severity = error

# CA2302: Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.CA2302.severity = error

# CA2305: Do not use insecure deserializer LosFormatter
dotnet_diagnostic.CA2305.severity = error

# CA2310: Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.CA2310.severity = error

# CA2311: Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.CA2311.severity = error

# CA2312: Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.CA2312.severity = error

# CA2315: Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.CA2315.severity = error

# CA2321: Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.CA2321.severity = error

# CA2322: Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.CA2322.severity = error

# CA2326: Do not use TypeNameHandling values other than None
dotnet_diagnostic.CA2326.severity = error

# CA2327: Do not use insecure JsonSerializerSettings
dotnet_diagnostic.CA2327.severity = error

# CA2328: Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.CA2328.severity = error

# CA2329: Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.CA2329.severity = error

# CA2330: Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.CA2330.severity = error

# CA2350: Do not use DataTable.ReadXml() with untrusted data
dotnet_diagnostic.CA2350.severity = error

# CA2351: Do not use DataSet.ReadXml() with untrusted data
dotnet_diagnostic.CA2351.severity = error

# CA2361: Ensure auto-generated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.CA2361.severity = error

# CA3001: Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3001.severity = error

# CA3002: Review code for XSS vulnerabilities
dotnet_diagnostic.CA3002.severity = error

# CA3003: Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3003.severity = error

# CA3004: Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3004.severity = error

# CA3005: Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3005.severity = error

# CA3006: Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3006.severity = error

# CA3007: Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3007.severity = error

# CA3008: Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3008.severity = error

# CA3009: Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3009.severity = error

# CA3010: Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = error

# CA3011: Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3011.severity = error

# CA3012: Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3012.severity = error

# CA3061: Do Not Add Schema By URL
dotnet_diagnostic.CA3061.severity = error

# CA3075: Insecure DTD processing in XML
dotnet_diagnostic.CA3075.severity = error

# CA3076: Insecure XSLT script processing
dotnet_diagnostic.CA3076.severity = error

# CA3077: Insecure Processing in API Design, XmlDocument and XmlTextReader
dotnet_diagnostic.CA3077.severity = error

# CA3147: Mark Verb Handlers With Validate Antiforgery Token
dotnet_diagnostic.CA3147.severity = error

# CA5350: Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5350.severity = error

# CA5351: Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = error

# CA5358: Review cipher mode usage with cryptography experts
dotnet_diagnostic.CA5358.severity = error

# CA5359: Do Not Disable Certificate Validation
dotnet_diagnostic.CA5359.severity = error

# CA5360: Do Not Call Dangerous Methods In Deserialization
dotnet_diagnostic.CA5360.severity = error

# CA5361: Do Not Disable SChannel Use of Strong Crypto
dotnet_diagnostic.CA5361.severity = error

# CA5362: Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5362.severity = error

# CA5363: Do Not Disable Request Validation
dotnet_diagnostic.CA5363.severity = error

# CA5364: Do Not Use Deprecated Security Protocols
dotnet_diagnostic.CA5364.severity = error

# CA5365: Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5365.severity = error

# CA5366: Use XmlReader for 'DataSet.ReadXml()'
dotnet_diagnostic.CA5366.severity = error

# CA5367: Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5367.severity = error

# CA5368: Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5368.severity = error

# CA5369: Use XmlReader for 'XmlSerializer.Deserialize()'
dotnet_diagnostic.CA5369.severity = error

# CA5370: Use XmlReader for XmlValidatingReader constructor
dotnet_diagnostic.CA5370.severity = error

# CA5371: Use XmlReader for 'XmlSchema.Read()'
dotnet_diagnostic.CA5371.severity = error

# CA5372: Use XmlReader for XPathDocument constructor
dotnet_diagnostic.CA5372.severity = error

# CA5373: Do not use obsolete key derivation function
dotnet_diagnostic.CA5373.severity = error

# CA5374: Do Not Use XslTransform
dotnet_diagnostic.CA5374.severity = error

# CA5375: Do Not Use Account Shared Access Signature
dotnet_diagnostic.CA5375.severity = error

# CA5376: Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5376.severity = error

# CA5377: Use Container Level Access Policy
dotnet_diagnostic.CA5377.severity = error

# CA5378: Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5378.severity = error

# CA5379: Ensure Key Derivation Function algorithm is sufficiently strong
dotnet_diagnostic.CA5379.severity = error

# CA5380: Do Not Add Certificates To Root Store
dotnet_diagnostic.CA5380.severity = error

# CA5381: Ensure Certificates Are Not Added To Root Store
dotnet_diagnostic.CA5381.severity = error

# CA5382: Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5382.severity = error

# CA5383: Ensure Use Secure Cookies In ASP.NET Core
dotnet_diagnostic.CA5383.severity = error

# CA5384: Do Not Use Digital Signature Algorithm (DSA)
dotnet_diagnostic.CA5384.severity = error

# CA5385: Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size
dotnet_diagnostic.CA5385.severity = error

# CA5386: Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5386.severity = error

# CA5387: Do Not Use Weak Key Derivation Function With Insufficient Iteration Count
dotnet_diagnostic.CA5387.severity = error

# CA5388: Ensure Sufficient Iteration Count When Using Weak Key Derivation Function
dotnet_diagnostic.CA5388.severity = error

# CA5389: Do Not Add Archive Item's Path To The Target File System Path
dotnet_diagnostic.CA5389.severity = error

# CA5390: Do not hard-code encryption key
dotnet_diagnostic.CA5390.severity = error

# CA5391: Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5391.severity = error

# CA5392: Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5392.severity = error

# CA5393: Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5393.severity = error

# CA5394: Do not use insecure randomness
dotnet_diagnostic.CA5394.severity = error

# CA5395: Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5395.severity = error

# CA5396: Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5396.severity = error

# CA5397: Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5397.severity = error

# CA5398: Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5398.severity = error

# CA5399: HttpClients should enable certificate revocation list checks
dotnet_diagnostic.CA5399.severity = error

# CA5400: Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.CA5400.severity = error

# CA5401: Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5401.severity = error

# CA5402: Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5402.severity = error

# CA5403: Do not hard-code certificate
dotnet_diagnostic.CA5403.severity = error

# CA5404: Do not disable token validation checks
dotnet_diagnostic.CA5404.severity = error

# CA5405: Do not always skip token validation in delegates
dotnet_diagnostic.CA5405.severity = error

# Rules from assembly: SecurityCodeScan.VS2019, Version=5.6.7.0, Culture=neutral, PublicKeyToken=null

# Debug: ??Debug_title??
dotnet_diagnostic.Debug.severity = error

# SCS0000: Compilation analysis completed for {0}.
dotnet_diagnostic.SCS0000.severity = error

# SCS0001: Potential Command Injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0001.severity = error

# SCS0002: Potential SQL injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0002.severity = error

# SCS0003: Potential XPath injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0003.severity = error

# SCS0004: Certificate Validation has been disabled.
dotnet_diagnostic.SCS0004.severity = error

# SCS0005: Weak random number generator.
dotnet_diagnostic.SCS0005.severity = error

# SCS0006: Weak hashing function.
dotnet_diagnostic.SCS0006.severity = error

# SCS0007: Potential XML eXternal Entity (XXE) vulnerability.
dotnet_diagnostic.SCS0007.severity = error

# SCS0008: The cookie is missing 'Secure' flag.
dotnet_diagnostic.SCS0008.severity = error

# SCS0009: The cookie is missing 'HttpOnly' flag.
dotnet_diagnostic.SCS0009.severity = error

# SCS0010: Weak cipher algorithm.
dotnet_diagnostic.SCS0010.severity = error

# SCS0011: Unsafe XSLT setting used.
dotnet_diagnostic.SCS0011.severity = error

# SCS0012: Controller method is potentially vulnerable to authorization bypass.
dotnet_diagnostic.SCS0012.severity = error

# SCS0013: Potential usage of weak CipherMode.
dotnet_diagnostic.SCS0013.severity = error

# SCS0015: Hardcoded value in '{0}'.
dotnet_diagnostic.SCS0015.severity = error

# SCS0016: Controller method is potentially vulnerable to Cross Site Request Forgery (CSRF).
dotnet_diagnostic.SCS0016.severity = error

# SCS0017: Request validation is disabled.
dotnet_diagnostic.SCS0017.severity = error

# SCS0018: Potential Path Traversal vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0018.severity = error

# SCS0019: OutputCache annotation is disabling authorization checks.
dotnet_diagnostic.SCS0019.severity = error

# SCS0021: Request validation has been disabled in {0}({1}): {2}.
dotnet_diagnostic.SCS0021.severity = error

# SCS0022: Event validation is disabled in {0}({1}): {2}.
dotnet_diagnostic.SCS0022.severity = error

# SCS0023: View state is not encrypted in {0}({1}): {2}.
dotnet_diagnostic.SCS0023.severity = error

# SCS0024: View state mac is disabled in {0}({1}): {2}.
dotnet_diagnostic.SCS0024.severity = error

# SCS0026: Potential LDAP injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0026.severity = error

# SCS0027: Potential Open Redirect vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0027.severity = error

# SCS0028: TypeNameHandling is set to the other value than 'None'. It may lead to deserialization vulnerability.
dotnet_diagnostic.SCS0028.severity = error

# SCS0029: Potential Cross-Site Scripting (XSS) vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0029.severity = error

# SCS0030: Request validation is enabled only for pages, not for all HTTP requests in {0}({1}): {2}.
dotnet_diagnostic.SCS0030.severity = error

# SCS0031: Potential LDAP injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.
dotnet_diagnostic.SCS0031.severity = error

# SCS0032: The RequiredLength property of PasswordValidator should be set to at least {0}.
dotnet_diagnostic.SCS0032.severity = error

# SCS0033: Less than {0} properties set in PasswordValidator declaration.
dotnet_diagnostic.SCS0033.severity = error

# SCS0034: The {0} property must be set.
dotnet_diagnostic.SCS0034.severity = error

# Rules from assembly: SonarAnalyzer.CSharp, Version=8.51.0.0, Culture=neutral, PublicKeyToken=c5b62af9de6d7244

# S100: Methods and properties should be named in PascalCase
dotnet_diagnostic.S100.severity = error

# S1006: Method overrides should not change parameter defaults
dotnet_diagnostic.S1006.severity = error

# S101: Types should be named in PascalCase
dotnet_diagnostic.S101.severity = error

# S103: Lines should not be too long
dotnet_diagnostic.S103.severity = error

# S104: Files should not have too many lines of code
dotnet_diagnostic.S104.severity = error

# S1048: Destructors should not throw exceptions
dotnet_diagnostic.S1048.severity = error

# S105: Tabulation characters should not be used
dotnet_diagnostic.S105.severity = error

# S106: Standard outputs should not be used directly to log anything
dotnet_diagnostic.S106.severity = error

# S1066: Collapsible "if" statements should be merged
dotnet_diagnostic.S1066.severity = error

# S1067: Expressions should not be too complex
dotnet_diagnostic.S1067.severity = error

# S107: Methods should not have too many parameters
dotnet_diagnostic.S107.severity = error

# S1075: URIs should not be hardcoded
dotnet_diagnostic.S1075.severity = error

# S108: Nested blocks of code should not be left empty
dotnet_diagnostic.S108.severity = error

# S109: Magic numbers should not be used
dotnet_diagnostic.S109.severity = error

# S110: Inheritance tree of classes should not be too deep
dotnet_diagnostic.S110.severity = error

# S1104: Fields should not have public accessibility
dotnet_diagnostic.S1104.severity = error

# S1109: A close curly brace should be located at the beginning of a line
dotnet_diagnostic.S1109.severity = error

# S1110: Redundant pairs of parentheses should be removed
dotnet_diagnostic.S1110.severity = error

# S1116: Empty statements should be removed
dotnet_diagnostic.S1116.severity = error

# S1117: Local variables should not shadow class fields
dotnet_diagnostic.S1117.severity = error

# S1118: Utility classes should not have public constructors
dotnet_diagnostic.S1118.severity = error

# S112: General exceptions should never be thrown
dotnet_diagnostic.S112.severity = error

# S1121: Assignments should not be made from within sub-expressions
dotnet_diagnostic.S1121.severity = error

# S1123: "Obsolete" attributes should include explanations
dotnet_diagnostic.S1123.severity = error

# S1125: Boolean literals should not be redundant
dotnet_diagnostic.S1125.severity = error

# S1128: Unused "using" should be removed
dotnet_diagnostic.S1128.severity = error

# S113: Files should contain an empty newline at the end
dotnet_diagnostic.S113.severity = error

# S1134: Track uses of "FIXME" tags
dotnet_diagnostic.S1134.severity = warning

# S1135: Track uses of "TODO" tags
dotnet_diagnostic.S1135.severity = warning

# S1144: Unused private types or members should be removed
dotnet_diagnostic.S1144.severity = error

# S1147: Exit methods should not be called
dotnet_diagnostic.S1147.severity = error

# S1151: "switch case" clauses should not have too many lines of code
dotnet_diagnostic.S1151.severity = error

# S1155: "Any()" should be used to test for emptiness
dotnet_diagnostic.S1155.severity = error

# S1163: Exceptions should not be thrown in finally blocks
dotnet_diagnostic.S1163.severity = error

# S1168: Empty arrays and collections should be returned instead of null
dotnet_diagnostic.S1168.severity = error

# S1172: Unused method parameters should be removed
dotnet_diagnostic.S1172.severity = none

# S1185: Overriding members should do more than simply call the same member in the base class
dotnet_diagnostic.S1185.severity = error

# S1186: Methods should not be empty
dotnet_diagnostic.S1186.severity = error

# S1192: String literals should not be duplicated
dotnet_diagnostic.S1192.severity = error

# S1199: Nested code blocks should not be used
dotnet_diagnostic.S1199.severity = error

# S1200: Classes should not be coupled to too many other classes (Single Responsibility Principle)
dotnet_diagnostic.S1200.severity = error

# S1206: "Equals(Object)" and "GetHashCode()" should be overridden in pairs
dotnet_diagnostic.S1206.severity = error

# S121: Control structures should use curly braces
dotnet_diagnostic.S121.severity = error

# S1210: "Equals" and the comparison operators should be overridden when implementing "IComparable"
dotnet_diagnostic.S1210.severity = error

# S1215: "GC.Collect" should not be called
dotnet_diagnostic.S1215.severity = error

# S122: Statements should be on separate lines
dotnet_diagnostic.S122.severity = error

# S1226: Method parameters, caught exceptions and foreach variables' initial values should not be ignored
dotnet_diagnostic.S1226.severity = error

# S1227: break statements should not be used except for switch cases
dotnet_diagnostic.S1227.severity = error

# S1244: Floating point numbers should not be tested for equality
dotnet_diagnostic.S1244.severity = error

# S125: Sections of code should not be commented out
dotnet_diagnostic.S125.severity = error

# S126: "if ... else if" constructs should end with "else" clauses
dotnet_diagnostic.S126.severity = error

# S1264: A "while" loop should be used instead of a "for" loop
dotnet_diagnostic.S1264.severity = error

# S127: "for" loop stop conditions should be invariant
dotnet_diagnostic.S127.severity = error

# S1301: "switch" statements should have at least 3 "case" clauses
dotnet_diagnostic.S1301.severity = error

# S1309: Track uses of in-source issue suppressions
dotnet_diagnostic.S1309.severity = none

# S131: "switch/Select" statements should contain a "default/Case Else" clauses
dotnet_diagnostic.S131.severity = error

# S1313: Using hardcoded IP addresses is security-sensitive
dotnet_diagnostic.S1313.severity = error

# S134: Control flow statements "if", "switch", "for", "foreach", "while", "do"  and "try" should not be nested too deeply
dotnet_diagnostic.S134.severity = error

# S138: Functions should not have too many lines of code
dotnet_diagnostic.S138.severity = error

# S1449: Culture should be specified for "string" operations
dotnet_diagnostic.S1449.severity = error

# S1450: Private fields only used as local variables in methods should become local variables
dotnet_diagnostic.S1450.severity = error

# S1451: Track lack of copyright and license headers
dotnet_diagnostic.S1451.severity = none

# S1479: "switch" statements should not have too many "case" clauses
dotnet_diagnostic.S1479.severity = error

# S1481: Unused local variables should be removed
dotnet_diagnostic.S1481.severity = error

# S1541: Methods and properties should not be too complex
dotnet_diagnostic.S1541.severity = error

# S1607: Tests should not be ignored
dotnet_diagnostic.S1607.severity = error

# S1643: Strings should not be concatenated using '+' in a loop
dotnet_diagnostic.S1643.severity = error

# S1656: Variables should not be self-assigned
dotnet_diagnostic.S1656.severity = error

# S1659: Multiple variables should not be declared on the same line
dotnet_diagnostic.S1659.severity = error

# S1694: An abstract class should have both abstract and concrete methods
dotnet_diagnostic.S1694.severity = none

# S1696: NullReferenceException should not be caught
dotnet_diagnostic.S1696.severity = error

# S1698: "==" should not be used when "Equals" is overridden
dotnet_diagnostic.S1698.severity = error

# S1699: Constructors should only call non-overridable methods
dotnet_diagnostic.S1699.severity = error

# S1751: Loops with at most one iteration should be refactored
dotnet_diagnostic.S1751.severity = error

# S1764: Identical expressions should not be used on both sides of a binary operator
dotnet_diagnostic.S1764.severity = error

# S1821: "switch" statements should not be nested
dotnet_diagnostic.S1821.severity = error

# S1848: Objects should not be created to be dropped immediately without being used
dotnet_diagnostic.S1848.severity = error

# S1854: Unused assignments should be removed
dotnet_diagnostic.S1854.severity = error

# S1858: "ToString()" calls should not be redundant
dotnet_diagnostic.S1858.severity = error

# S1862: Related "if/else if" statements should not have the same condition
dotnet_diagnostic.S1862.severity = error

# S1871: Two branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S1871.severity = error

# S1905: Redundant casts should not be used
dotnet_diagnostic.S1905.severity = error

# S1939: Inheritance list should not be redundant
dotnet_diagnostic.S1939.severity = error

# S1940: Boolean checks should not be inverted
dotnet_diagnostic.S1940.severity = error

# S1944: Inappropriate casts should not be made
dotnet_diagnostic.S1944.severity = error

# S1994: "for" loop increment clauses should modify the loops' counters
dotnet_diagnostic.S1994.severity = error

# S2053: Hashes should include an unpredictable salt
dotnet_diagnostic.S2053.severity = error

# S2068: Hard-coded credentials are security-sensitive
dotnet_diagnostic.S2068.severity = error

# S2077: Formatting SQL queries is security-sensitive
dotnet_diagnostic.S2077.severity = error

# S2092: Creating cookies without the "secure" flag is security-sensitive
dotnet_diagnostic.S2092.severity = error

# S2114: Collections should not be passed as arguments to their own methods
dotnet_diagnostic.S2114.severity = error

# S2115: A secure password should be used when connecting to a database
dotnet_diagnostic.S2115.severity = error

# S2123: Values should not be uselessly incremented
dotnet_diagnostic.S2123.severity = error

# S2148: Underscores should be used to make large numbers readable
dotnet_diagnostic.S2148.severity = error

# S2156: "sealed" classes should not have "protected" members
dotnet_diagnostic.S2156.severity = error

# S2178: Short-circuit logic should be used in boolean contexts
dotnet_diagnostic.S2178.severity = error

# S2183: Integral numbers should not be shifted by zero or more than their number of bits-1
dotnet_diagnostic.S2183.severity = error

# S2184: Results of integer division should not be assigned to floating point variables
dotnet_diagnostic.S2184.severity = error

# S2187: TestCases should contain tests
dotnet_diagnostic.S2187.severity = error

# S2190: Recursion should not be infinite
dotnet_diagnostic.S2190.severity = error

# S2197: Modulus results should not be checked for direct equality
dotnet_diagnostic.S2197.severity = error

# S2201: Return values from functions without side effects should not be ignored
dotnet_diagnostic.S2201.severity = error

# S2219: Runtime type checking should be simplified
dotnet_diagnostic.S2219.severity = error

# S2221: "Exception" should not be caught when not required by called methods
dotnet_diagnostic.S2221.severity = error

# S2222: Locks should be released on all paths
dotnet_diagnostic.S2222.severity = error

# S2223: Non-constant static fields should not be visible
dotnet_diagnostic.S2223.severity = error

# S2225: "ToString()" method should not return null
dotnet_diagnostic.S2225.severity = error

# S2228: Console logging should not be used
dotnet_diagnostic.S2228.severity = error

# S2234: Parameters should be passed in the correct order
dotnet_diagnostic.S2234.severity = error

# S2245: Using pseudorandom number generators (PRNGs) is security-sensitive
dotnet_diagnostic.S2245.severity = error

# S2251: A "for" loop update clause should move the counter in the right direction
dotnet_diagnostic.S2251.severity = error

# S2252: For-loop conditions should be true at least once
dotnet_diagnostic.S2252.severity = error

# S2255: Writing cookies is security-sensitive
dotnet_diagnostic.S2255.severity = error

# S2257: Using non-standard cryptographic algorithms is security-sensitive
dotnet_diagnostic.S2257.severity = error

# S2259: Null pointers should not be dereferenced
dotnet_diagnostic.S2259.severity = error

# S2275: Composite format strings should not lead to unexpected behavior at runtime
dotnet_diagnostic.S2275.severity = error

# S2290: Field-like events should not be virtual
dotnet_diagnostic.S2290.severity = error

# S2291: Overflow checking should not be disabled for "Enumerable.Sum"
dotnet_diagnostic.S2291.severity = error

# S2292: Trivial properties should be auto-implemented
dotnet_diagnostic.S2292.severity = error

# S2302: "nameof" should be used
dotnet_diagnostic.S2302.severity = error

# S2306: "async" and "await" should not be used as identifiers
dotnet_diagnostic.S2306.severity = error

# S2325: Methods and properties that don't access instance data should be static
dotnet_diagnostic.S2325.severity = error

# S2326: Unused type parameters should be removed
dotnet_diagnostic.S2326.severity = error

# S2327: "try" statements with identical "catch" and/or "finally" blocks should be merged
dotnet_diagnostic.S2327.severity = error

# S2328: "GetHashCode" should not reference mutable fields
dotnet_diagnostic.S2328.severity = error

# S2330: Array covariance should not be used
dotnet_diagnostic.S2330.severity = error

# S2333: Redundant modifiers should not be used
dotnet_diagnostic.S2333.severity = error

# S2339: Public constant members should not be used
dotnet_diagnostic.S2339.severity = error

# S2342: Enumeration types should comply with a naming convention
dotnet_diagnostic.S2342.severity = error

# S2344: Enumeration type names should not have "Flags" or "Enum" suffixes
dotnet_diagnostic.S2344.severity = error

# S2345: Flags enumerations should explicitly initialize all their members
dotnet_diagnostic.S2345.severity = error

# S2346: Flags enumerations zero-value members should be named "None"
dotnet_diagnostic.S2346.severity = error

# S2357: Fields should be private
dotnet_diagnostic.S2357.severity = error

# S2360: Optional parameters should not be used
dotnet_diagnostic.S2360.severity = error

# S2365: Properties should not make collection or array copies
dotnet_diagnostic.S2365.severity = error

# S2368: Public methods should not have multidimensional array parameters
dotnet_diagnostic.S2368.severity = error

# S2372: Exceptions should not be thrown from property getters
dotnet_diagnostic.S2372.severity = error

# S2376: Write-only properties should not be used
dotnet_diagnostic.S2376.severity = error

# S2386: Mutable fields should not be "public static"
dotnet_diagnostic.S2386.severity = error

# S2387: Child class fields should not shadow parent class fields
dotnet_diagnostic.S2387.severity = error

# S2436: Types and methods should not have too many generic parameters
dotnet_diagnostic.S2436.severity = error

# S2437: Silly bit operations should not be performed
dotnet_diagnostic.S2437.severity = error

# S2479: Whitespace and control characters in string literals should be explicit
dotnet_diagnostic.S2479.severity = error

# S2486: Generic exceptions should not be ignored
dotnet_diagnostic.S2486.severity = error

# S2551: Shared resources should not be used for locking
dotnet_diagnostic.S2551.severity = error

# S2583: Conditionally executed code should be reachable
dotnet_diagnostic.S2583.severity = error

# S2589: Boolean expressions should not be gratuitous
dotnet_diagnostic.S2589.severity = error

# S2612: Setting loose file permissions is security-sensitive
dotnet_diagnostic.S2612.severity = error

# S2674: The length returned from a stream read should be checked
dotnet_diagnostic.S2674.severity = error

# S2681: Multiline blocks should be enclosed in curly braces
dotnet_diagnostic.S2681.severity = error

# S2688: "NaN" should not be used in comparisons
dotnet_diagnostic.S2688.severity = error

# S2692: "IndexOf" checks should not be for positive numbers
dotnet_diagnostic.S2692.severity = error

# S2696: Instance members should not write to "static" fields
dotnet_diagnostic.S2696.severity = error

# S2699: Tests should include assertions
dotnet_diagnostic.S2699.severity = error

# S2701: Literal boolean values should not be used in assertions
dotnet_diagnostic.S2701.severity = error

# S2737: "catch" clauses should do more than rethrow
dotnet_diagnostic.S2737.severity = error

# S2743: Static fields should not be used in generic types
dotnet_diagnostic.S2743.severity = error

# S2755: XML parsers should not be vulnerable to XXE attacks
dotnet_diagnostic.S2755.severity = error

# S2757: "=+" should not be used instead of "+="
dotnet_diagnostic.S2757.severity = error

# S2760: Sequential tests should not check the same condition
dotnet_diagnostic.S2760.severity = error

# S2761: Doubled prefix operators "!!" and "~~" should not be used
dotnet_diagnostic.S2761.severity = error

# S2857: SQL keywords should be delimited by whitespace
dotnet_diagnostic.S2857.severity = error

# S2930: "IDisposables" should be disposed
dotnet_diagnostic.S2930.severity = error

# S2931: Classes with "IDisposable" members should implement "IDisposable"
dotnet_diagnostic.S2931.severity = error

# S2933: Fields that are only assigned in the constructor should be "readonly"
dotnet_diagnostic.S2933.severity = error

# S2934: Property assignments should not be made for "readonly" fields not constrained to reference types
dotnet_diagnostic.S2934.severity = error

# S2952: Classes should "Dispose" of members from the classes' own "Dispose" methods
dotnet_diagnostic.S2952.severity = error

# S2953: Methods named "Dispose" should implement "IDisposable.Dispose"
dotnet_diagnostic.S2953.severity = error

# S2955: Generic parameters not constrained to reference types should not be compared to "null"
dotnet_diagnostic.S2955.severity = error

# S2971: "IEnumerable" LINQs should be simplified
dotnet_diagnostic.S2971.severity = error

# S2995: "Object.ReferenceEquals" should not be used for value types
dotnet_diagnostic.S2995.severity = error

# S2996: "ThreadStatic" fields should not be initialized
dotnet_diagnostic.S2996.severity = error

# S2997: "IDisposables" created in a "using" statement should not be returned
dotnet_diagnostic.S2997.severity = error

# S3005: "ThreadStatic" should not be used on non-static fields
dotnet_diagnostic.S3005.severity = error

# S3010: Static fields should not be updated in constructors
dotnet_diagnostic.S3010.severity = error

# S3011: Reflection should not be used to increase accessibility of classes, methods, or fields
dotnet_diagnostic.S3011.severity = error

# S3052: Members should not be initialized to default values
dotnet_diagnostic.S3052.severity = error

# S3059: Types should not have members with visibility set higher than the type's visibility
dotnet_diagnostic.S3059.severity = error

# S3060: "is" should not be used with "this"
dotnet_diagnostic.S3060.severity = error

# S3168: "async" methods should not return "void"
dotnet_diagnostic.S3168.severity = error

# S3169: Multiple "OrderBy" calls should not be used
dotnet_diagnostic.S3169.severity = error

# S3172: Delegates should not be subtracted
dotnet_diagnostic.S3172.severity = error

# S3215: "interface" instances should not be cast to concrete types
dotnet_diagnostic.S3215.severity = error

# S3216: "ConfigureAwait(false)" should be used
dotnet_diagnostic.S3216.severity = error

# S3217: "Explicit" conversions of "foreach" loops should not be used
dotnet_diagnostic.S3217.severity = error

# S3218: Inner class members should not shadow outer class "static" or type members
dotnet_diagnostic.S3218.severity = error

# S3220: Method calls should not resolve ambiguously to overloads with "params"
dotnet_diagnostic.S3220.severity = error

# S3234: "GC.SuppressFinalize" should not be invoked for types without destructors
dotnet_diagnostic.S3234.severity = error

# S3235: Redundant parentheses should not be used
dotnet_diagnostic.S3235.severity = error

# S3236: Caller information arguments should not be provided explicitly
dotnet_diagnostic.S3236.severity = error

# S3237: "value" parameters should be used
dotnet_diagnostic.S3237.severity = error

# S3240: The simplest possible condition syntax should be used
dotnet_diagnostic.S3240.severity = error

# S3241: Methods should not return values that are never used
dotnet_diagnostic.S3241.severity = error

# S3242: Method parameters should be declared with base types
dotnet_diagnostic.S3242.severity = error

# S3244: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.S3244.severity = error

# S3246: Generic type parameters should be co/contravariant when possible
dotnet_diagnostic.S3246.severity = error

# S3247: Duplicate casts should not be made
dotnet_diagnostic.S3247.severity = error

# S3249: Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals"
dotnet_diagnostic.S3249.severity = error

# S3251: Implementations should be provided for "partial" methods
dotnet_diagnostic.S3251.severity = error

# S3253: Constructor and destructor declarations should not be redundant
dotnet_diagnostic.S3253.severity = error

# S3254: Default parameter values should not be passed as arguments
dotnet_diagnostic.S3254.severity = error

# S3256: "string.IsNullOrEmpty" should be used
dotnet_diagnostic.S3256.severity = error

# S3257: Declarations and initializations should be as concise as possible
dotnet_diagnostic.S3257.severity = error

# S3260: Non-derived "private" classes and records should be "sealed"
dotnet_diagnostic.S3260.severity = error

# S3261: Namespaces should not be empty
dotnet_diagnostic.S3261.severity = error

# S3262: "params" should be used on overrides
dotnet_diagnostic.S3262.severity = error

# S3263: Static fields should appear in the order they must be initialized
dotnet_diagnostic.S3263.severity = error

# S3264: Events should be invoked
dotnet_diagnostic.S3264.severity = error

# S3265: Non-flags enums should not be used in bitwise operations
dotnet_diagnostic.S3265.severity = error

# S3267: Loops should be simplified with "LINQ" expressions
dotnet_diagnostic.S3267.severity = error

# S3329: Cipher Block Chaining IVs should be unpredictable
dotnet_diagnostic.S3329.severity = error

# S3330: Creating cookies without the "HttpOnly" flag is security-sensitive
dotnet_diagnostic.S3330.severity = error

# S3343: Caller information parameters should come at the end of the parameter list
dotnet_diagnostic.S3343.severity = error

# S3346: Expressions used in "Debug.Assert" should not produce side effects
dotnet_diagnostic.S3346.severity = error

# S3353: Unchanged local variables should be "const"
dotnet_diagnostic.S3353.severity = error

# S3358: Ternary operators should not be nested
dotnet_diagnostic.S3358.severity = error

# S3366: "this" should not be exposed from constructors
dotnet_diagnostic.S3366.severity = error

# S3376: Attribute, EventArgs, and Exception type names should end with the type being extended
dotnet_diagnostic.S3376.severity = error

# S3397: "base.Equals" should not be used to check for reference equality in "Equals" if "base" is not "object"
dotnet_diagnostic.S3397.severity = error

# S3400: Methods should not return constants
dotnet_diagnostic.S3400.severity = error

# S3415: Assertion arguments should be passed in the correct order
dotnet_diagnostic.S3415.severity = error

# S3427: Method overloads with default parameter values should not overlap
dotnet_diagnostic.S3427.severity = error

# S3431: "[ExpectedException]" should not be used
dotnet_diagnostic.S3431.severity = error

# S3433: Test method signatures should be correct
dotnet_diagnostic.S3433.severity = error

# S3440: Variables should not be checked against the values they're about to be assigned
dotnet_diagnostic.S3440.severity = error

# S3441: Redundant property names should be omitted in anonymous classes
dotnet_diagnostic.S3441.severity = error

# S3442: "abstract" classes should not have "public" constructors
dotnet_diagnostic.S3442.severity = error

# S3443: Type should not be examined on "System.Type" instances
dotnet_diagnostic.S3443.severity = error

# S3444: Interfaces should not simply inherit from base interfaces with colliding members
dotnet_diagnostic.S3444.severity = error

# S3445: Exceptions should not be explicitly rethrown
dotnet_diagnostic.S3445.severity = error

# S3447: "[Optional]" should not be used on "ref" or "out" parameters
dotnet_diagnostic.S3447.severity = error

# S3449: Right operands of shift operators should be integers
dotnet_diagnostic.S3449.severity = error

# S3450: Parameters with "[DefaultParameterValue]" attributes should also be marked "[Optional]"
dotnet_diagnostic.S3450.severity = error

# S3451: "[DefaultValue]" should not be used when "[DefaultParameterValue]" is meant
dotnet_diagnostic.S3451.severity = error

# S3453: Classes should not have only "private" constructors
dotnet_diagnostic.S3453.severity = error

# S3456: "string.ToCharArray()" and "ReadOnlySpan<T>.ToArray()" should not be called redundantly
dotnet_diagnostic.S3456.severity = error

# S3457: Composite format strings should be used correctly
dotnet_diagnostic.S3457.severity = error

# S3458: Empty "case" clauses that fall through to the "default" should be omitted
dotnet_diagnostic.S3458.severity = error

# S3459: Unassigned members should be removed
dotnet_diagnostic.S3459.severity = error

# S3464: Type inheritance should not be recursive
dotnet_diagnostic.S3464.severity = error

# S3466: Optional parameters should be passed to "base" calls
dotnet_diagnostic.S3466.severity = error

# S3532: Empty "default" clauses should be removed
dotnet_diagnostic.S3532.severity = error

# S3597: "ServiceContract" and "OperationContract" attributes should be used together
dotnet_diagnostic.S3597.severity = error

# S3598: One-way "OperationContract" methods should have "void" return type
dotnet_diagnostic.S3598.severity = error

# S3600: "params" should not be introduced on overrides
dotnet_diagnostic.S3600.severity = error

# S3603: Methods with "Pure" attribute should return a value
dotnet_diagnostic.S3603.severity = error

# S3604: Member initializer values should not be redundant
dotnet_diagnostic.S3604.severity = error

# S3610: Nullable type comparison should not be redundant
dotnet_diagnostic.S3610.severity = error

# S3626: Jump statements should not be redundant
dotnet_diagnostic.S3626.severity = error

# S3655: Empty nullable value should not be accessed
dotnet_diagnostic.S3655.severity = error

# S3717: Track use of "NotImplementedException"
dotnet_diagnostic.S3717.severity = error

# S3776: Cognitive Complexity of methods should not be too high
dotnet_diagnostic.S3776.severity = error

# S3869: "SafeHandle.DangerousGetHandle" should not be called
dotnet_diagnostic.S3869.severity = error

# S3871: Exception types should be "public"
dotnet_diagnostic.S3871.severity = error

# S3872: Parameter names should not duplicate the names of their methods
dotnet_diagnostic.S3872.severity = error

# S3874: "out" and "ref" parameters should not be used
dotnet_diagnostic.S3874.severity = error

# S3875: "operator==" should not be overloaded on reference types
dotnet_diagnostic.S3875.severity = error

# S3876: Strings or integral types should be used for indexers
dotnet_diagnostic.S3876.severity = error

# S3877: Exceptions should not be thrown from unexpected methods
dotnet_diagnostic.S3877.severity = error

# S3880: Finalizers should not be empty
dotnet_diagnostic.S3880.severity = error

# S3881: "IDisposable" should be implemented correctly
dotnet_diagnostic.S3881.severity = error

# S3884: "CoSetProxyBlanket" and "CoInitializeSecurity" should not be used
dotnet_diagnostic.S3884.severity = error

# S3885: "Assembly.Load" should be used
dotnet_diagnostic.S3885.severity = error

# S3887: Mutable, non-private fields should not be "readonly"
dotnet_diagnostic.S3887.severity = error

# S3889: Neither "Thread.Resume" nor "Thread.Suspend" should be used
dotnet_diagnostic.S3889.severity = error

# S3897: Classes that provide "Equals(<T>)" should implement "IEquatable<T>"
dotnet_diagnostic.S3897.severity = error

# S3898: Value types should implement "IEquatable<T>"
dotnet_diagnostic.S3898.severity = error

# S3900: Arguments of public methods should be validated against null
dotnet_diagnostic.S3900.severity = error

# S3902: "Assembly.GetExecutingAssembly" should not be called
dotnet_diagnostic.S3902.severity = error

# S3903: Types should be defined in named namespaces
dotnet_diagnostic.S3903.severity = error

# S3904: Assemblies should have version information
dotnet_diagnostic.S3904.severity = error

# S3906: Event Handlers should have the correct signature
dotnet_diagnostic.S3906.severity = error

# S3908: Generic event handlers should be used
dotnet_diagnostic.S3908.severity = error

# S3909: Collections should implement the generic interface
dotnet_diagnostic.S3909.severity = error

# S3923: All branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S3923.severity = error

# S3925: "ISerializable" should be implemented correctly
dotnet_diagnostic.S3925.severity = error

# S3926: Deserialization methods should be provided for "OptionalField" members
dotnet_diagnostic.S3926.severity = error

# S3927: Serialization event handlers should be implemented correctly
dotnet_diagnostic.S3927.severity = error

# S3928: Parameter names used into ArgumentException constructors should match an existing one
dotnet_diagnostic.S3928.severity = error

# S3937: Number patterns should be regular
dotnet_diagnostic.S3937.severity = error

# S3949: Calculations should not overflow
dotnet_diagnostic.S3949.severity = error

# S3956: "Generic.List" instances should not be part of public APIs
dotnet_diagnostic.S3956.severity = error

# S3962: "static readonly" constants should be "const" instead
dotnet_diagnostic.S3962.severity = error

# S3963: "static" fields should be initialized inline
dotnet_diagnostic.S3963.severity = error

# S3966: Objects should not be disposed more than once
dotnet_diagnostic.S3966.severity = error

# S3967: Multidimensional arrays should not be used
dotnet_diagnostic.S3967.severity = error

# S3971: "GC.SuppressFinalize" should not be called
dotnet_diagnostic.S3971.severity = error

# S3972: Conditionals should start on new lines
dotnet_diagnostic.S3972.severity = error

# S3973: A conditionally executed single line should be denoted by indentation
dotnet_diagnostic.S3973.severity = error

# S3981: Collection sizes and array length comparisons should make sense
dotnet_diagnostic.S3981.severity = error

# S3984: Exceptions should not be created without being thrown
dotnet_diagnostic.S3984.severity = error

# S3990: Assemblies should be marked as CLS compliant
dotnet_diagnostic.S3990.severity = error

# S3992: Assemblies should explicitly specify COM visibility
dotnet_diagnostic.S3992.severity = error

# S3993: Custom attributes should be marked with "System.AttributeUsageAttribute"
dotnet_diagnostic.S3993.severity = error

# S3994: URI Parameters should not be strings
dotnet_diagnostic.S3994.severity = error

# S3995: URI return values should not be strings
dotnet_diagnostic.S3995.severity = error

# S3996: URI properties should not be strings
dotnet_diagnostic.S3996.severity = error

# S3997: String URI overloads should call "System.Uri" overloads
dotnet_diagnostic.S3997.severity = error

# S3998: Threads should not lock on objects with weak identity
dotnet_diagnostic.S3998.severity = error

# S4000: Pointers to unmanaged memory should not be visible
dotnet_diagnostic.S4000.severity = error

# S4002: Disposable types should declare finalizers
dotnet_diagnostic.S4002.severity = error

# S4004: Collection properties should be readonly
dotnet_diagnostic.S4004.severity = error

# S4005: "System.Uri" arguments should be used instead of strings
dotnet_diagnostic.S4005.severity = error

# S4015: Inherited member visibility should not be decreased
dotnet_diagnostic.S4015.severity = error

# S4016: Enumeration members should not be named "Reserved"
dotnet_diagnostic.S4016.severity = error

# S4017: Method signatures should not contain nested generic types
dotnet_diagnostic.S4017.severity = error

# S4018: Generic methods should provide type parameters
dotnet_diagnostic.S4018.severity = none

# S4019: Base class methods should not be hidden
dotnet_diagnostic.S4019.severity = error

# S4022: Enumerations should have "Int32" storage
dotnet_diagnostic.S4022.severity = error

# S4023: Interfaces should not be empty
dotnet_diagnostic.S4023.severity = none

# S4025: Child class fields should not differ from parent class fields only by capitalization
dotnet_diagnostic.S4025.severity = error

# S4026: Assemblies should be marked with "NeutralResourcesLanguageAttribute"
dotnet_diagnostic.S4026.severity = error

# S4027: Exceptions should provide standard constructors
dotnet_diagnostic.S4027.severity = error

# S4035: Classes implementing "IEquatable<T>" should be sealed
dotnet_diagnostic.S4035.severity = error

# S4036: Searching OS commands in PATH is security-sensitive
dotnet_diagnostic.S4036.severity = error

# S4039: Interface methods should be callable by derived types
dotnet_diagnostic.S4039.severity = error

# S4040: Strings should be normalized to uppercase
dotnet_diagnostic.S4040.severity = error

# S4041: Type names should not match namespaces
dotnet_diagnostic.S4041.severity = error

# S4047: Generics should be used when appropriate
dotnet_diagnostic.S4047.severity = error

# S4049: Properties should be preferred
dotnet_diagnostic.S4049.severity = error

# S4050: Operators should be overloaded consistently
dotnet_diagnostic.S4050.severity = error

# S4052: Types should not extend outdated base types
dotnet_diagnostic.S4052.severity = error

# S4055: Literals should not be passed as localized parameters
dotnet_diagnostic.S4055.severity = error

# S4056: Overloads with a "CultureInfo" or an "IFormatProvider" parameter should be used
dotnet_diagnostic.S4056.severity = error

# S4057: Locales should be set for data types
dotnet_diagnostic.S4057.severity = error

# S4058: Overloads with a "StringComparison" parameter should be used
dotnet_diagnostic.S4058.severity = error

# S4059: Property names should not match get methods
dotnet_diagnostic.S4059.severity = error

# S4060: Non-abstract attributes should be sealed
dotnet_diagnostic.S4060.severity = error

# S4061: "params" should be used instead of "varargs"
dotnet_diagnostic.S4061.severity = error

# S4069: Operator overloads should have named alternatives
dotnet_diagnostic.S4069.severity = error

# S4070: Non-flags enums should not be marked with "FlagsAttribute"
dotnet_diagnostic.S4070.severity = error

# S4136: Method overloads should be grouped together
dotnet_diagnostic.S4136.severity = error

# S4143: Collection elements should not be replaced unconditionally
dotnet_diagnostic.S4143.severity = error

# S4144: Methods should not have identical implementations
dotnet_diagnostic.S4144.severity = error

# S4158: Empty collections should not be accessed or iterated
dotnet_diagnostic.S4158.severity = error

# S4159: Classes should implement their "ExportAttribute" interfaces
dotnet_diagnostic.S4159.severity = error

# S4200: Native methods should be wrapped
dotnet_diagnostic.S4200.severity = error

# S4201: Null checks should not be used with "is"
dotnet_diagnostic.S4201.severity = error

# S4210: Windows Forms entry points should be marked with STAThread
dotnet_diagnostic.S4210.severity = error

# S4211: Members should not have conflicting transparency annotations
dotnet_diagnostic.S4211.severity = error

# S4212: Serialization constructors should be secured
dotnet_diagnostic.S4212.severity = error

# S4214: "P/Invoke" methods should not be visible
dotnet_diagnostic.S4214.severity = error

# S4220: Events should have proper arguments
dotnet_diagnostic.S4220.severity = error

# S4225: Extension methods should not extend "object"
dotnet_diagnostic.S4225.severity = error

# S4226: Extensions should be in separate namespaces
dotnet_diagnostic.S4226.severity = error

# S4260: "ConstructorArgument" parameters should exist in constructors
dotnet_diagnostic.S4260.severity = error

# S4261: Methods should be named according to their synchronicities
dotnet_diagnostic.S4261.severity = error

# S4275: Getters and setters should access the expected fields
dotnet_diagnostic.S4275.severity = error

# S4277: "Shared" parts should not be created with "new"
dotnet_diagnostic.S4277.severity = error

# S4423: Weak SSL/TLS protocols should not be used
dotnet_diagnostic.S4423.severity = error

# S4426: Cryptographic keys should be robust
dotnet_diagnostic.S4426.severity = error

# S4428: "PartCreationPolicyAttribute" should be used with "ExportAttribute"
dotnet_diagnostic.S4428.severity = error

# S4433: LDAP connections should be authenticated
dotnet_diagnostic.S4433.severity = error

# S4456: Parameter validation in yielding methods should be wrapped
dotnet_diagnostic.S4456.severity = error

# S4457: Parameter validation in "async"/"await" methods should be wrapped
dotnet_diagnostic.S4457.severity = error

# S4462: Calls to "async" methods should not be blocking
dotnet_diagnostic.S4462.severity = error

# S4487: Unread "private" fields should be removed
dotnet_diagnostic.S4487.severity = error

# S4502: Disabling CSRF protections is security-sensitive
dotnet_diagnostic.S4502.severity = error

# S4507: Delivering code in production with debug features activated is security-sensitive
dotnet_diagnostic.S4507.severity = error

# S4524: "default" clauses should be first or last
dotnet_diagnostic.S4524.severity = error

# S4564: ASP.NET HTTP request validation feature should not be disabled
dotnet_diagnostic.S4564.severity = error

# S4581: "new Guid()" should not be used
dotnet_diagnostic.S4581.severity = error

# S4583: Calls to delegate's method "BeginInvoke" should be paired with calls to "EndInvoke"
dotnet_diagnostic.S4583.severity = error

# S4586: Non-async "Task/Task<T>" methods should not return null
dotnet_diagnostic.S4586.severity = error

# S4635: String offset-based methods should be preferred for finding substrings from offsets
dotnet_diagnostic.S4635.severity = error

# S4784: Using regular expressions is security-sensitive
dotnet_diagnostic.S4784.severity = error

# S4787: Encrypting data is security-sensitive
dotnet_diagnostic.S4787.severity = error

# S4790: Using weak hashing algorithms is security-sensitive
dotnet_diagnostic.S4790.severity = error

# S4792: Configuring loggers is security-sensitive
dotnet_diagnostic.S4792.severity = error

# S4818: Using Sockets is security-sensitive
dotnet_diagnostic.S4818.severity = error

# S4823: Using command line arguments is security-sensitive
dotnet_diagnostic.S4823.severity = error

# S4829: Reading the Standard Input is security-sensitive
dotnet_diagnostic.S4829.severity = error

# S4830: Server certificates should be verified during SSL/TLS connections
dotnet_diagnostic.S4830.severity = error

# S4834: Controlling permissions is security-sensitive
dotnet_diagnostic.S4834.severity = error

# S5034: "ValueTask" should be consumed correctly
dotnet_diagnostic.S5034.severity = error

# S5042: Expanding archive files without controlling resource consumption is security-sensitive
dotnet_diagnostic.S5042.severity = error

# S5122: Having a permissive Cross-Origin Resource Sharing policy is security-sensitive
dotnet_diagnostic.S5122.severity = error

# S5332: Using clear-text protocols is security-sensitive
dotnet_diagnostic.S5332.severity = error

# S5443: Using publicly writable directories is security-sensitive
dotnet_diagnostic.S5443.severity = error

# S5445: Insecure temporary file creation methods should not be used
dotnet_diagnostic.S5445.severity = error

# S5542: Encryption algorithms should be used with secure mode and padding scheme
dotnet_diagnostic.S5542.severity = error

# S5547: Cipher algorithms should be robust
dotnet_diagnostic.S5547.severity = error

# S5659: JWT should be signed and verified with strong cipher algorithms
dotnet_diagnostic.S5659.severity = error

# S5693: Allowing requests with excessive content length is security-sensitive
dotnet_diagnostic.S5693.severity = error

# S5753: Disabling ASP.NET "Request Validation" feature is security-sensitive
dotnet_diagnostic.S5753.severity = error

# S5766: Deserializing objects without performing data validation is security-sensitive
dotnet_diagnostic.S5766.severity = error

# S5773: Types allowed to be deserialized should be restricted
dotnet_diagnostic.S5773.severity = error

# S6354: Use a testable date/time provider
dotnet_diagnostic.S6354.severity = error

# S6419: Azure Functions should be stateless
dotnet_diagnostic.S6419.severity = error

# S6420: Client instances should not be recreated on each Azure Function invocation
dotnet_diagnostic.S6420.severity = error

# S6421: Azure Functions should use Structured Error Handling
dotnet_diagnostic.S6421.severity = error

# S6422: Calls to "async" methods should not be blocking in Azure Functions
dotnet_diagnostic.S6422.severity = error

# S6423: Azure Functions should log all failures
dotnet_diagnostic.S6423.severity = error

# S6424: Interfaces for durable entities should satisfy the restrictions
dotnet_diagnostic.S6424.severity = error

# S6444: Not specifying a timeout for regular expressions is security-sensitive
dotnet_diagnostic.S6444.severity = error

# S818: Literal suffixes should be upper case
dotnet_diagnostic.S818.severity = error

# S881: Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression
dotnet_diagnostic.S881.severity = error

# S907: "goto" statement should not be used
dotnet_diagnostic.S907.severity = error

# S927: Parameter names should match base declaration and other partial definitions
dotnet_diagnostic.S927.severity = error

# S9999-cpd: Copy-paste token calculator
dotnet_diagnostic.S9999-cpd.severity = error

# S9999-log: Log generator
dotnet_diagnostic.S9999-log.severity = error

# S9999-metadata: File metadata generator
dotnet_diagnostic.S9999-metadata.severity = error

# S9999-metrics: Metrics calculator
dotnet_diagnostic.S9999-metrics.severity = error

# S9999-symbolRef: Symbol reference calculator
dotnet_diagnostic.S9999-symbolRef.severity = error

# S9999-token-type: Token type calculator
dotnet_diagnostic.S9999-token-type.severity = error

# Rules from assembly: StyleCop.Analyzers, Version=1.1.118.34620, Culture=neutral, PublicKeyToken=cfeb5dbada5e1c25

# SA0001: XML comment analysis disabled
dotnet_diagnostic.SA0001.severity = error

# SA0002: Invalid settings file
dotnet_diagnostic.SA0002.severity = error

# SA1000: Keywords should be spaced correctly
dotnet_diagnostic.SA1000.severity = error

# SA1001: Commas should be spaced correctly
dotnet_diagnostic.SA1001.severity = error

# SA1002: Semicolons should be spaced correctly
dotnet_diagnostic.SA1002.severity = error

# SA1003: Symbols should be spaced correctly
dotnet_diagnostic.SA1003.severity = error

# SA1004: Documentation lines should begin with single space
dotnet_diagnostic.SA1004.severity = error

# SA1005: Single line comments should begin with single space
dotnet_diagnostic.SA1005.severity = error

# SA1006: Preprocessor keywords should not be preceded by space
dotnet_diagnostic.SA1006.severity = error

# SA1007: Operator keyword should be followed by space
dotnet_diagnostic.SA1007.severity = error

# SA1008: Opening parenthesis should be spaced correctly
dotnet_diagnostic.SA1008.severity = error

# SA1009: Closing parenthesis should be spaced correctly
dotnet_diagnostic.SA1009.severity = error

# SA1010: Opening square brackets should be spaced correctly
dotnet_diagnostic.SA1010.severity = error

# SA1011: Closing square brackets should be spaced correctly
dotnet_diagnostic.SA1011.severity = error

# SA1012: Opening braces should be spaced correctly
dotnet_diagnostic.SA1012.severity = error

# SA1013: Closing braces should be spaced correctly
dotnet_diagnostic.SA1013.severity = error

# SA1014: Opening generic brackets should be spaced correctly
dotnet_diagnostic.SA1014.severity = error

# SA1015: Closing generic brackets should be spaced correctly
dotnet_diagnostic.SA1015.severity = error

# SA1016: Opening attribute brackets should be spaced correctly
dotnet_diagnostic.SA1016.severity = error

# SA1017: Closing attribute brackets should be spaced correctly
dotnet_diagnostic.SA1017.severity = error

# SA1018: Nullable type symbols should be spaced correctly
dotnet_diagnostic.SA1018.severity = error

# SA1019: Member access symbols should be spaced correctly
dotnet_diagnostic.SA1019.severity = error

# SA1020: Increment decrement symbols should be spaced correctly
dotnet_diagnostic.SA1020.severity = error

# SA1021: Negative signs should be spaced correctly
dotnet_diagnostic.SA1021.severity = error

# SA1022: Positive signs should be spaced correctly
dotnet_diagnostic.SA1022.severity = error

# SA1023: Dereference and access of symbols should be spaced correctly
dotnet_diagnostic.SA1023.severity = error

# SA1024: Colons Should Be Spaced Correctly
dotnet_diagnostic.SA1024.severity = error

# SA1025: Code should not contain multiple whitespace in a row
dotnet_diagnostic.SA1025.severity = error

# SA1026: Code should not contain space after new or stackalloc keyword in implicitly typed array allocation
dotnet_diagnostic.SA1026.severity = error

# SA1027: Use tabs correctly
dotnet_diagnostic.SA1027.severity = error

# SA1028: Code should not contain trailing whitespace
dotnet_diagnostic.SA1028.severity = error

# SA1100: Do not prefix calls with base unless local implementation exists
dotnet_diagnostic.SA1100.severity = error

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1102: Query clause should follow previous clause
dotnet_diagnostic.SA1102.severity = error

# SA1103: Query clauses should be on separate lines or all on one line
dotnet_diagnostic.SA1103.severity = error

# SA1104: Query clause should begin on new line when previous clause spans multiple lines
dotnet_diagnostic.SA1104.severity = error

# SA1105: Query clauses spanning multiple lines should begin on own line
dotnet_diagnostic.SA1105.severity = error

# SA1106: Code should not contain empty statements
dotnet_diagnostic.SA1106.severity = error

# SA1107: Code should not contain multiple statements on one line
dotnet_diagnostic.SA1107.severity = error

# SA1108: Block statements should not contain embedded comments
dotnet_diagnostic.SA1108.severity = error

# SA1109: Block statements should not contain embedded regions
dotnet_diagnostic.SA1109.severity = error

# SA1110: Opening parenthesis or bracket should be on declaration line
dotnet_diagnostic.SA1110.severity = error

# SA1111: Closing parenthesis should be on line of last parameter
dotnet_diagnostic.SA1111.severity = error

# SA1112: Closing parenthesis should be on line of opening parenthesis
dotnet_diagnostic.SA1112.severity = error

# SA1113: Comma should be on the same line as previous parameter
dotnet_diagnostic.SA1113.severity = error

# SA1114: Parameter list should follow declaration
dotnet_diagnostic.SA1114.severity = error

# SA1115: Parameter should follow comma
dotnet_diagnostic.SA1115.severity = error

# SA1116: Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = error

# SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = error

# SA1118: Parameter should not span multiple lines
dotnet_diagnostic.SA1118.severity = none

# SA1119: Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1119.severity = error

# SA1119_p: Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1119_p.severity = error

# SA1120: Comments should contain text
dotnet_diagnostic.SA1120.severity = error

# SA1121: Use built-in type alias
dotnet_diagnostic.SA1121.severity = error

# SA1122: Use string.Empty for empty strings
dotnet_diagnostic.SA1122.severity = error

# SA1123: Do not place regions within elements
dotnet_diagnostic.SA1123.severity = error

# SA1124: Do not use regions
dotnet_diagnostic.SA1124.severity = error

# SA1125: Use shorthand for nullable types
dotnet_diagnostic.SA1125.severity = error

# SA1126: Prefix calls correctly
dotnet_diagnostic.SA1126.severity = error

# SA1127: Generic type constraints should be on their own line
dotnet_diagnostic.SA1127.severity = error

# SA1128: Put constructor initializers on their own line
dotnet_diagnostic.SA1128.severity = error

# SA1129: Do not use default value type constructor
dotnet_diagnostic.SA1129.severity = error

# SA1130: Use lambda syntax
dotnet_diagnostic.SA1130.severity = error

# SA1131: Use readable conditions
dotnet_diagnostic.SA1131.severity = error

# SA1132: Do not combine fields
dotnet_diagnostic.SA1132.severity = error

# SA1133: Do not combine attributes
dotnet_diagnostic.SA1133.severity = error

# SA1134: Attributes should not share line
dotnet_diagnostic.SA1134.severity = error

# SA1135: Using directives should be qualified
dotnet_diagnostic.SA1135.severity = error

# SA1136: Enum values should be on separate lines
dotnet_diagnostic.SA1136.severity = error

# SA1137: Elements should have the same indentation
dotnet_diagnostic.SA1137.severity = error

# SA1139: Use literal suffix notation instead of casting
dotnet_diagnostic.SA1139.severity = error

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = error

# SA1202: Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = error

# SA1203: Constants should appear before fields
dotnet_diagnostic.SA1203.severity = error

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = error

# SA1205: Partial elements should declare access
dotnet_diagnostic.SA1205.severity = error

# SA1206: Declaration keywords should follow order
dotnet_diagnostic.SA1206.severity = error

# SA1207: Protected should come before internal
dotnet_diagnostic.SA1207.severity = error

# SA1208: System using directives should be placed before other using directives
dotnet_diagnostic.SA1208.severity = error

# SA1209: Using alias directives should be placed after other using directives
dotnet_diagnostic.SA1209.severity = error

# SA1210: Using directives should be ordered alphabetically by namespace
dotnet_diagnostic.SA1210.severity = error

# SA1211: Using alias directives should be ordered alphabetically by alias name
dotnet_diagnostic.SA1211.severity = error

# SA1212: Property accessors should follow order
dotnet_diagnostic.SA1212.severity = error

# SA1213: Event accessors should follow order
dotnet_diagnostic.SA1213.severity = error

# SA1214: Readonly fields should appear before non-readonly fields
dotnet_diagnostic.SA1214.severity = error

# SA1216: Using static directives should be placed at the correct location.
dotnet_diagnostic.SA1216.severity = error

# SA1217: Using static directives should be ordered alphabetically
dotnet_diagnostic.SA1217.severity = error

# SA1300: Element should begin with upper-case letter
dotnet_diagnostic.SA1300.severity = error

# SA1301: Element should begin with lower-case letter
dotnet_diagnostic.SA1301.severity = error

# SA1302: Interface names should begin with I
dotnet_diagnostic.SA1302.severity = error

# SA1303: Const field names should begin with upper-case letter
dotnet_diagnostic.SA1303.severity = error

# SA1304: Non-private readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1304.severity = error

# SA1305: Field names should not use Hungarian notation
dotnet_diagnostic.SA1305.severity = error

# SA1306: Field names should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = error

# SA1307: Accessible fields should begin with upper-case letter
dotnet_diagnostic.SA1307.severity = error

# SA1308: Variable names should not be prefixed
dotnet_diagnostic.SA1308.severity = error

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = error

# SA1310: Field names should not contain underscore
dotnet_diagnostic.SA1310.severity = error

# SA1311: Static readonly fields should begin with upper-case letter
dotnet_diagnostic.SA1311.severity = error

# SA1312: Variable names should begin with lower-case letter
dotnet_diagnostic.SA1312.severity = error

# SA1313: Parameter names should begin with lower-case letter
dotnet_diagnostic.SA1313.severity = error

# SA1314: Type parameter names should begin with T
dotnet_diagnostic.SA1314.severity = error

# SA1400: Access modifier should be declared
dotnet_diagnostic.SA1400.severity = error

# SA1401: Fields should be private
dotnet_diagnostic.SA1401.severity = error

# SA1402: File may only contain a single type
dotnet_diagnostic.SA1402.severity = error

# SA1403: File may only contain a single namespace
dotnet_diagnostic.SA1403.severity = error

# SA1404: Code analysis suppression should have justification
dotnet_diagnostic.SA1404.severity = error

# SA1405: Debug.Assert should provide message text
dotnet_diagnostic.SA1405.severity = error

# SA1406: Debug.Fail should provide message text
dotnet_diagnostic.SA1406.severity = error

# SA1407: Arithmetic expressions should declare precedence
dotnet_diagnostic.SA1407.severity = error

# SA1408: Conditional expressions should declare precedence
dotnet_diagnostic.SA1408.severity = error

# SA1409: Remove unnecessary code
dotnet_diagnostic.SA1409.severity = error

# SA1410: Remove delegate parenthesis when possible
dotnet_diagnostic.SA1410.severity = error

# SA1411: Attribute constructor should not use unnecessary parenthesis
dotnet_diagnostic.SA1411.severity = error

# SA1412: Store files as UTF-8 with byte order mark
dotnet_diagnostic.SA1412.severity = error

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = error

# SA1500: Braces for multi-line statements should not share line
dotnet_diagnostic.SA1500.severity = error

# SA1501: Statement should not be on a single line
dotnet_diagnostic.SA1501.severity = error

# SA1502: Element should not be on a single line
dotnet_diagnostic.SA1502.severity = error

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = error

# SA1504: All accessors should be single-line or multi-line
dotnet_diagnostic.SA1504.severity = error

# SA1505: Opening braces should not be followed by blank line
dotnet_diagnostic.SA1505.severity = error

# SA1506: Element documentation headers should not be followed by blank line
dotnet_diagnostic.SA1506.severity = error

# SA1507: Code should not contain multiple blank lines in a row
dotnet_diagnostic.SA1507.severity = error

# SA1508: Closing braces should not be preceded by blank line
dotnet_diagnostic.SA1508.severity = error

# SA1509: Opening braces should not be preceded by blank line
dotnet_diagnostic.SA1509.severity = error

# SA1510: Chained statement blocks should not be preceded by blank line
dotnet_diagnostic.SA1510.severity = error

# SA1511: While-do footer should not be preceded by blank line
dotnet_diagnostic.SA1511.severity = error

# SA1512: Single-line comments should not be followed by blank line
dotnet_diagnostic.SA1512.severity = error

# SA1513: Closing brace should be followed by blank line
dotnet_diagnostic.SA1513.severity = error

# SA1514: Element documentation header should be preceded by blank line
dotnet_diagnostic.SA1514.severity = error

# SA1515: Single-line comment should be preceded by blank line
dotnet_diagnostic.SA1515.severity = error

# SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = error

# SA1517: Code should not contain blank lines at start of file
dotnet_diagnostic.SA1517.severity = error

# SA1518: Use line endings correctly at end of file
dotnet_diagnostic.SA1518.severity = error

# SA1519: Braces should not be omitted from multi-line child statement
dotnet_diagnostic.SA1519.severity = error

# SA1520: Use braces consistently
dotnet_diagnostic.SA1520.severity = error

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = error

# SA1601: Partial elements should be documented
dotnet_diagnostic.SA1601.severity = error

# SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = error

# SA1603: Documentation should contain valid XML
dotnet_diagnostic.SA1603.severity = error

# SA1604: Element documentation should have summary
dotnet_diagnostic.SA1604.severity = error

# SA1605: Partial element documentation should have summary
dotnet_diagnostic.SA1605.severity = error

# SA1606: Element documentation should have summary text
dotnet_diagnostic.SA1606.severity = error

# SA1607: Partial element documentation should have summary text
dotnet_diagnostic.SA1607.severity = error

# SA1608: Element documentation should not have default summary
dotnet_diagnostic.SA1608.severity = error

# SA1609: Property documentation should have value
dotnet_diagnostic.SA1609.severity = error

# SA1610: Property documentation should have value text
dotnet_diagnostic.SA1610.severity = error

# SA1611: Element parameters should be documented
dotnet_diagnostic.SA1611.severity = error

# SA1612: Element parameter documentation should match element parameters
dotnet_diagnostic.SA1612.severity = error

# SA1613: Element parameter documentation should declare parameter name
dotnet_diagnostic.SA1613.severity = error

# SA1614: Element parameter documentation should have text
dotnet_diagnostic.SA1614.severity = error

# SA1615: Element return value should be documented
dotnet_diagnostic.SA1615.severity = error

# SA1616: Element return value documentation should have text
dotnet_diagnostic.SA1616.severity = error

# SA1617: Void return value should not be documented
dotnet_diagnostic.SA1617.severity = error

# SA1618: Generic type parameters should be documented
dotnet_diagnostic.SA1618.severity = error

# SA1619: Generic type parameters should be documented partial class
dotnet_diagnostic.SA1619.severity = error

# SA1620: Generic type parameter documentation should match type parameters
dotnet_diagnostic.SA1620.severity = error

# SA1621: Generic type parameter documentation should declare parameter name
dotnet_diagnostic.SA1621.severity = error

# SA1622: Generic type parameter documentation should have text
dotnet_diagnostic.SA1622.severity = error

# SA1623: Property summary documentation should match accessors
dotnet_diagnostic.SA1623.severity = error

# SA1624: Property summary documentation should omit accessor with restricted access
dotnet_diagnostic.SA1624.severity = error

# SA1625: Element documentation should not be copied and pasted
dotnet_diagnostic.SA1625.severity = error

# SA1626: Single-line comments should not use documentation style slashes
dotnet_diagnostic.SA1626.severity = error

# SA1627: Documentation text should not be empty
dotnet_diagnostic.SA1627.severity = error

# SA1628: Documentation text should begin with a capital letter
dotnet_diagnostic.SA1628.severity = error

# SA1629: Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = error

# SA1630: Documentation text should contain whitespace
dotnet_diagnostic.SA1630.severity = error

# SA1631: Documentation should meet character percentage
dotnet_diagnostic.SA1631.severity = error

# SA1632: Documentation text should meet minimum character length
dotnet_diagnostic.SA1632.severity = error

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = error

# SA1634: File header should show copyright
dotnet_diagnostic.SA1634.severity = error

# SA1635: File header should have copyright text
dotnet_diagnostic.SA1635.severity = error

# SA1636: File header copyright text should match
dotnet_diagnostic.SA1636.severity = error

# SA1637: File header should contain file name
dotnet_diagnostic.SA1637.severity = error

# SA1638: File header file name documentation should match file name
dotnet_diagnostic.SA1638.severity = error

# SA1639: File header should have summary
dotnet_diagnostic.SA1639.severity = error

# SA1640: File header should have valid company text
dotnet_diagnostic.SA1640.severity = error

# SA1641: File header company name text should match
dotnet_diagnostic.SA1641.severity = error

# SA1642: Constructor summary documentation should begin with standard text
dotnet_diagnostic.SA1642.severity = error

# SA1643: Destructor summary documentation should begin with standard text
dotnet_diagnostic.SA1643.severity = error

# SA1644: Documentation headers should not contain blank lines
dotnet_diagnostic.SA1644.severity = error

# SA1645: Included documentation file does not exist
dotnet_diagnostic.SA1645.severity = error

# SA1646: Included documentation XPath does not exist
dotnet_diagnostic.SA1646.severity = error

# SA1647: Include node does not contain valid file and path
dotnet_diagnostic.SA1647.severity = error

# SA1648: inheritdoc should be used with inheriting class
dotnet_diagnostic.SA1648.severity = error

# SA1649: File name should match first type name
dotnet_diagnostic.SA1649.severity = error

# SA1650: Element documentation should be spelled correctly
dotnet_diagnostic.SA1650.severity = error

# SA1651: Do not use placeholder elements
dotnet_diagnostic.SA1651.severity = error

# SX1101: Do not prefix local calls with 'this.'
dotnet_diagnostic.SX1101.severity = error

# SX1309: Field names should begin with underscore
dotnet_diagnostic.SX1309.severity = none

# SX1309S: Static field names should begin with underscore
dotnet_diagnostic.SX1309S.severity = none

