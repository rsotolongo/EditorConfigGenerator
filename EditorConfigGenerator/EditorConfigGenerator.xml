<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EditorConfigGenerator</name>
    </assembly>
    <members>
        <member name="T:EditorConfigGenerator.Constants">
            <summary>
            Internal constants.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.AssembliesPattern">
            <summary>
            The assemblies pattern.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.AssembliesPath">
            <summary>
            The assemblies path.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.ErrorLevel">
            <summary>
            The error level.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.NoneLevel">
            <summary>
            The none level.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.OtherLanguagePattern">
            <summary>
            The other language pattern.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.OutputFilename">
            <summary>
            The output filename.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.PackageNameAttribute">
            <summary>
            The package name attribute.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.PackageNodeName">
            <summary>
            The package node name.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.PackageVersionAttribute">
            <summary>
            The package version attribute.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.PackagesDirectoryName">
            <summary>
            The packages directory name.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.PackagesSubdirectoryName">
            <summary>
            The packages subdirectory name.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.ProjectExtension">
            <summary>
            The project extension.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.RelativeNonWindowsPath">
            <summary>
            The relative path for non Windows OS.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.RelativeWindowsPath">
            <summary>
            The relative path for Windows OS.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.ResourcesPattern">
            <summary>
            The resources pattern.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.SupportedDiagnosticsPropertyName">
            <summary>
            The supported diagnostics property name.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.WarningLevel">
            <summary>
            The warning level.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.AssemblyRulesHeaderPattern">
            <summary>
            The assembly rules header pattern.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.DeprecatedTitlePatterns">
            <summary>
            The deprecated title patterns.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.NoneIds">
            <summary>
            The identifiers to be Ã¬gnored.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.RuleHeaderPattern">
            <summary>
            The rule header pattern.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.RuleSeverityPattern">
            <summary>
            The rule severity pattern.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.WarningIds">
            <summary>
            The identifiers to be warned.
            </summary>
        </member>
        <member name="F:EditorConfigGenerator.Constants.OutputFileHeader">
            <summary>
            The output file header.
            </summary>
        </member>
        <member name="T:EditorConfigGenerator.Helpers">
            <summary>
            Global routines.
            </summary>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.CreateType(System.Type)">
            <summary>
            Creates the type.
            </summary>
            <param name="type">The type.</param>
            <returns>A type.</returns>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.CreateInstance(AutoFixture.Kernel.ISpecimenBuilder,AutoFixture.Kernel.ISpecimenContext,System.Type,System.Reflection.ConstructorInfo[])">
            <summary>
            Creates the instance.
            </summary>
            <param name="fixture">The fixture.</param>
            <param name="specimenContext">The specimen context.</param>
            <param name="type">The type.</param>
            <param name="constructors">The constructors.</param>
            <returns>The new instance.</returns>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.GetAssemblyRuleSeverities(System.Reflection.Assembly)">
            <summary>
            Gets the assembly rule severities.
            </summary>
            <param name="assembly">The assembly.</param>
            <returns>A list of rules.</returns>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.GetFiles">
            <summary>
            Gets the files.
            </summary>
            <returns>A list of files.</returns>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.IsSimple(System.Type)">
            <summary>
            Determines whether the specified type is simple.
            </summary>
            <param name="type">The type.</param>
            <returns>
              <see langword="true"/> if the specified type is simple; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.CreateTypeRule(System.Collections.Generic.List{EditorConfigGenerator.Rule},Microsoft.CodeAnalysis.DiagnosticDescriptor)">
            <summary>
            Creates the type rule.
            </summary>
            <param name="result">The result.</param>
            <param name="supportedDiagnostic">The supported diagnostic.</param>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.FindTypeRules(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Finds the type rules.
            </summary>
            <param name="type">The type.</param>
            <param name="supportedDiagnosticsProperty">The supported diagnostics property.</param>
        </member>
        <member name="M:EditorConfigGenerator.Helpers.GetFiles(System.String[])">
            <summary>
            Gets the files.
            </summary>
            <param name="assemblyFiles">The assembly files.</param>
        </member>
        <member name="T:EditorConfigGenerator.Parser">
            <summary>
            Parser implementation.
            </summary>
        </member>
        <member name="M:EditorConfigGenerator.Parser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EditorConfigGenerator.Parser"/> class.
            </summary>
        </member>
        <member name="M:EditorConfigGenerator.Parser.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:EditorConfigGenerator.Parser"/> class.
            </summary>
            <param name="assemblyPaths">The assembly paths.</param>
        </member>
        <member name="M:EditorConfigGenerator.Parser.GetAssembliesRuleSevereties(System.String[],System.String[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Gets the assemblies rule severeties.
            </summary>
            <param name="noneIds">The rules identifiers to ignore.</param>
            <param name="warningIds">The rules identifiers to warn about.</param>
            <param name="addHeader">If set to <see langword="true"/> [add header].</param>
            <param name="addSeparator">If set to <see langword="true"/> [add separator].</param>
            <param name="attendDeprecated">If set to <see langword="false"/> deprecated rules will have severity as 'none'. If set to <see langword="true"/> they will treat as any other rule.</param>
            <returns>A list of rule severeties.</returns>
        </member>
        <member name="M:EditorConfigGenerator.Parser.AddAssembly(System.Collections.Generic.List{System.Reflection.Assembly},System.String,System.String,System.Reflection.Assembly)">
            <summary>
            Adds the assembly.
            </summary>
            <param name="assembliesList">The assemblies list.</param>
            <param name="assemblyPath">The assembly path.</param>
            <param name="name">The name.</param>
            <param name="referenceAssembly">The reference assembly.</param>
        </member>
        <member name="M:EditorConfigGenerator.Parser.AddRuleSeverity(System.String[],System.String[],System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{System.String},EditorConfigGenerator.Rule)">
            <summary>
            Adds the rule severity.
            </summary>
            <param name="noneIds">The none ids.</param>
            <param name="warningIds">The warning ids.</param>
            <param name="addHeader">If set to <see langword="true"/> a header will be added.</param>
            <param name="addSeparator">If set to <see langword="true"/> a separator will be added.</param>
            <param name="attendDeprecated">If set to <see langword="false"/> deprecated rules will have severity as 'none'. If set to <see langword="true"/> they will treat as any other rule.</param>
            <param name="ruleSevereties">The rule severeties.</param>
            <param name="rule">The rule.</param>
        </member>
        <member name="M:EditorConfigGenerator.Parser.IsDeprecatedRule(EditorConfigGenerator.Rule)">
            <summary>
            Determines whether a rule is deprecated.
            </summary>
            <param name="rule">The rule.</param>
            <returns>
              <see langword="true"/> If the rule is deprecated; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="T:EditorConfigGenerator.Rule">
            <summary>
            Rule entity.
            </summary>
        </member>
        <member name="P:EditorConfigGenerator.Rule.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:EditorConfigGenerator.Rule.Title">
            <summary>
            Gets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="T:EditorConfigGenerator.VoidSpecimenContext">
            <summary>
            Void specimen context.
            </summary>
            <seealso cref="T:AutoFixture.Kernel.ISpecimenContext" />
        </member>
        <member name="M:EditorConfigGenerator.VoidSpecimenContext.Resolve(System.Object)">
            <inheritdoc/>
        </member>
    </members>
</doc>
